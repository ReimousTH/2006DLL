//
// +-------------------------------------------------------------------------+
// |      This file was generated by The Interactive Disassembler (IDA)      |
// |           Copyright (c) 2020 Hex-Rays, <support@hex-rays.com>           |
// |                      License info: 48-174E-39B0-5F                      |
// |          Hex-Rays SA. 【請支持正版】, Unlimited License          |
// +-------------------------------------------------------------------------+
//
//
//      This file contains the user-defined type definitions.
//      To use it press F2 in IDA and enter the name of this file.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();
	set_inf_attr(INF_LOW_OFF, 0x88000400);
	set_inf_attr(INF_HIGH_OFF, 0x884B0000);
}

static Enums_0(id) {

	id = add_enum(-1,"_D3DTEXTUREADDRESS",0x1100000);
	add_enum_member(id,"D3DTADDRESS_WRAP",	0,	-1);
	add_enum_member(id,"D3DTADDRESS_MIRROR",	0X1,	-1);
	add_enum_member(id,"D3DTADDRESS_CLAMP",	0X2,	-1);
	add_enum_member(id,"D3DTADDRESS_MIRRORONCE",	0X3,	-1);
	add_enum_member(id,"D3DTADDRESS_BORDER_HALF",	0X4,	-1);
	add_enum_member(id,"D3DTADDRESS_MIRRORONCE_BORDER_HALF",	0X5,	-1);
	add_enum_member(id,"D3DTADDRESS_BORDER",	0X6,	-1);
	add_enum_member(id,"D3DTADDRESS_MIRRORONCE_BORDER",	0X7,	-1);
	add_enum_member(id,"D3DTADDRESS_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"XUI_ELEMENT_PROPERTY_TYPE",0x1100000);
	add_enum_member(id,"XUI_EPT_EMPTY",	0,	-1);
	add_enum_member(id,"XUI_EPT_BOOL",	0X1,	-1);
	add_enum_member(id,"XUI_EPT_INTEGER",	0X2,	-1);
	add_enum_member(id,"XUI_EPT_UNSIGNED",	0X3,	-1);
	add_enum_member(id,"XUI_EPT_FLOAT",	0X4,	-1);
	add_enum_member(id,"XUI_EPT_STRING",	0X5,	-1);
	add_enum_member(id,"XUI_EPT_COLOR",	0X6,	-1);
	add_enum_member(id,"XUI_EPT_VECTOR",	0X7,	-1);
	add_enum_member(id,"XUI_EPT_QUATERNION",	0X8,	-1);
	add_enum_member(id,"XUI_EPT_OBJECT",	0X9,	-1);
	add_enum_member(id,"XUI_EPT_CUSTOM",	0XA,	-1);
	id = add_enum(-1,"GPUANISOFILTER",0x1100000);
	add_enum_member(id,"GPUANISOFILTER_DISABLED",	0,	-1);
	add_enum_member(id,"GPUANISOFILTER_MAX1TO1",	0X1,	-1);
	add_enum_member(id,"GPUANISOFILTER_MAX2TO1",	0X2,	-1);
	add_enum_member(id,"GPUANISOFILTER_MAX4TO1",	0X3,	-1);
	add_enum_member(id,"GPUANISOFILTER_MAX8TO1",	0X4,	-1);
	add_enum_member(id,"GPUANISOFILTER_MAX16TO1",	0X5,	-1);
	add_enum_member(id,"GPUANISOFILTER_KEEP",	0X7,	-1);
	id = add_enum(-1,"_D3DFORMAT",0x1120000);
	add_enum_member(id,"D3DFMT_LE_INDEX16",	0,	-1);
	add_enum_member(id,"D3DFMT_INDEX16",	0X1,	-1);
	add_enum_member(id,"D3DFMT_LE_INDEX32",	0X4,	-1);
	add_enum_member(id,"D3DFMT_INDEX32",	0X6,	-1);
	add_enum_member(id,"D3DFMT_VERTEXDATA",	0X8,	-1);
	add_enum_member(id,"D3DFMT_LIN_A8",	0X4900002,	-1);
	add_enum_member(id,"D3DFMT_A8",	0X4900102,	-1);
	add_enum_member(id,"D3DFMT_LIN_A8L8",	0X800004A,	-1);
	add_enum_member(id,"D3DFMT_LIN_A16L16",	0X8000099,	-1);
	add_enum_member(id,"D3DFMT_LIN_A32L32",	0X80000A2,	-1);
	add_enum_member(id,"D3DFMT_A8L8",	0X800014A,	-1);
	add_enum_member(id,"D3DFMT_A16L16",	0X8000199,	-1);
	add_enum_member(id,"D3DFMT_A32L32",	0X80001A2,	-1);
	add_enum_member(id,"D3DFMT_LIN_A1R5G5B5",	0X18280043,	-1);
	add_enum_member(id,"D3DFMT_LIN_R8G8_B8G8",	0X1828004B,	-1);
	add_enum_member(id,"D3DFMT_LIN_G8R8_G8B8",	0X1828004C,	-1);
	add_enum_member(id,"D3DFMT_LIN_A4R4G4B4",	0X1828004F,	-1);
	add_enum_member(id,"D3DFMT_LIN_A8R8G8B8",	0X18280086,	-1);
	add_enum_member(id,"D3DFMT_LIN_A2R10G10B10",	0X182800B6,	-1);
	add_enum_member(id,"D3DFMT_LE_A8R8G8B8",	0X18280106,	-1);
	add_enum_member(id,"D3DFMT_LE_A2R10G10B10",	0X18280136,	-1);
	add_enum_member(id,"D3DFMT_A1R5G5B5",	0X18280143,	-1);
	add_enum_member(id,"D3DFMT_R8G8_B8G8",	0X1828014B,	-1);
	add_enum_member(id,"D3DFMT_G8R8_G8B8",	0X1828014C,	-1);
	add_enum_member(id,"D3DFMT_A4R4G4B4",	0X1828014F,	-1);
	add_enum_member(id,"D3DFMT_A8R8G8B8",	0X18280186,	-1);
	add_enum_member(id,"D3DFMT_A2R10G10B10",	0X182801B6,	-1);
	add_enum_member(id,"D3DFMT_LE_LIN_YUY2",	0X1A20000B,	-1);
	add_enum_member(id,"D3DFMT_LE_LIN_UYVY",	0X1A20000C,	-1);
	add_enum_member(id,"D3DFMT_LIN_YUY2",	0X1A20004B,	-1);
	add_enum_member(id,"D3DFMT_LIN_UYVY",	0X1A20004C,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT1",	0X1A200052,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT2",	0X1A200053,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT3",	0X1A200053,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT4",	0X1A200054,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT5",	0X1A200054,	-1);
	add_enum_member(id,"D3DFMT_LIN_A16B16G16R16",	0X1A20005A,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXN",	0X1A200071,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT3A",	0X1A20007A,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT5A",	0X1A20007B,	-1);
	add_enum_member(id,"D3DFMT_LIN_CTX1",	0X1A20007C,	-1);
	add_enum_member(id,"D3DFMT_LIN_DXT3A_1111",	0X1A20007D,	-1);
	add_enum_member(id,"D3DFMT_LIN_A8B8G8R8",	0X1A200086,	-1);
	add_enum_member(id,"D3DFMT_LIN_A32B32G32R32",	0X1A2000A3,	-1);
	add_enum_member(id,"D3DFMT_LIN_A2B10G10R10",	0X1A2000B6,	-1);
	add_enum_member(id,"D3DFMT_LE_YUY2",	0X1A20010B,	-1);
	add_enum_member(id,"D3DFMT_LE_UYVY",	0X1A20010C,	-1);
	add_enum_member(id,"D3DFMT_YUY2",	0X1A20014B,	-1);
	add_enum_member(id,"D3DFMT_UYVY",	0X1A20014C,	-1);
	add_enum_member(id,"D3DFMT_DXT1",	0X1A200152,	-1);
	add_enum_member(id,"D3DFMT_DXT2",	0X1A200153,	-1);
	add_enum_member(id,"D3DFMT_DXT3",	0X1A200153,	-1);
	add_enum_member(id,"D3DFMT_DXT4",	0X1A200154,	-1);
	add_enum_member(id,"D3DFMT_DXT5",	0X1A200154,	-1);
	add_enum_member(id,"D3DFMT_A16B16G16R16",	0X1A20015A,	-1);
	add_enum_member(id,"D3DFMT_DXN",	0X1A200171,	-1);
	add_enum_member(id,"D3DFMT_DXT3A",	0X1A20017A,	-1);
	add_enum_member(id,"D3DFMT_DXT5A",	0X1A20017B,	-1);
	add_enum_member(id,"D3DFMT_CTX1",	0X1A20017C,	-1);
	add_enum_member(id,"D3DFMT_DXT3A_1111",	0X1A20017D,	-1);
	add_enum_member(id,"D3DFMT_A8B8G8R8",	0X1A200186,	-1);
	add_enum_member(id,"D3DFMT_A32B32G32R32",	0X1A2001A3,	-1);
	add_enum_member(id,"D3DFMT_A2B10G10R10",	0X1A2001B6,	-1);
	add_enum_member(id,"D3DFMT_LIN_A2W10V10U10",	0X1A202AB6,	-1);
	add_enum_member(id,"D3DFMT_A2W10V10U10",	0X1A202BB6,	-1);
	add_enum_member(id,"D3DFMT_LIN_Q4W4V4U4",	0X1A20AA4F,	-1);
	add_enum_member(id,"D3DFMT_LIN_Q16W16V16U16",	0X1A20AA5A,	-1);
	add_enum_member(id,"D3DFMT_LIN_Q8W8V8U8",	0X1A20AA86,	-1);
	add_enum_member(id,"D3DFMT_LIN_Q32W32V32U32",	0X1A20AAA3,	-1);
	add_enum_member(id,"D3DFMT_Q4W4V4U4",	0X1A20AB4F,	-1);
	add_enum_member(id,"D3DFMT_A16B16G16R16_EDRAM",	0X1A20AB55,	-1);
	add_enum_member(id,"D3DFMT_Q16W16V16U16",	0X1A20AB5A,	-1);
	add_enum_member(id,"D3DFMT_Q8W8V8U8",	0X1A20AB86,	-1);
	add_enum_member(id,"D3DFMT_Q32W32V32U32",	0X1A20ABA3,	-1);
	add_enum_member(id,"D3DFMT_LIN_D16",	0X1A220058,	-1);
	add_enum_member(id,"D3DFMT_LIN_D24FS8",	0X1A220097,	-1);
	add_enum_member(id,"D3DFMT_LIN_D32",	0X1A2200A1,	-1);
	add_enum_member(id,"D3DFMT_D16",	0X1A220158,	-1);
	add_enum_member(id,"D3DFMT_D24FS8",	0X1A220197,	-1);
	add_enum_member(id,"D3DFMT_D32",	0X1A2201A1,	-1);
	add_enum_member(id,"D3DFMT_A2B10G10R10F_EDRAM",	0X1A2201BF,	-1);
	add_enum_member(id,"D3DFMT_LIN_A16B16G16R16F_EXPAND",	0X1A22AA5D,	-1);
	add_enum_member(id,"D3DFMT_LIN_A16B16G16R16F",	0X1A22AA60,	-1);
	add_enum_member(id,"D3DFMT_LIN_A32B32G32R32F",	0X1A22AAA6,	-1);
	add_enum_member(id,"D3DFMT_A16B16G16R16F_EXPAND",	0X1A22AB5D,	-1);
	add_enum_member(id,"D3DFMT_A16B16G16R16F",	0X1A22AB60,	-1);
	add_enum_member(id,"D3DFMT_A32B32G32R32F",	0X1A22ABA6,	-1);
	add_enum_member(id,"D3DFMT_LIN_L8",	0X28000002,	-1);
	add_enum_member(id,"D3DFMT_LIN_L16",	0X28000058,	-1);
	add_enum_member(id,"D3DFMT_LIN_L32",	0X280000A1,	-1);
	add_enum_member(id,"D3DFMT_L8",	0X28000102,	-1);
	add_enum_member(id,"D3DFMT_L16",	0X28000158,	-1);
	add_enum_member(id,"D3DFMT_L32",	0X280001A1,	-1);
	add_enum_member(id,"D3DFMT_LIN_X1R5G5B5",	0X28280043,	-1);
	add_enum_member(id,"D3DFMT_LIN_R5G6B5",	0X28280044,	-1);
	add_enum_member(id,"D3DFMT_LIN_R6G5B5",	0X28280045,	-1);
	add_enum_member(id,"D3DFMT_LIN_X4R4G4B4",	0X2828004F,	-1);
	add_enum_member(id,"D3DFMT_LIN_X8R8G8B8",	0X28280086,	-1);
	add_enum_member(id,"D3DFMT_LIN_X2R10G10B10",	0X282800B6,	-1);
	add_enum_member(id,"D3DFMT_LIN_R10G11B11",	0X282800B7,	-1);
	add_enum_member(id,"D3DFMT_LIN_R11G11B10",	0X282800B8,	-1);
	add_enum_member(id,"D3DFMT_LE_X8R8G8B8",	0X28280106,	-1);
	add_enum_member(id,"D3DFMT_LE_X2R10G10B10",	0X28280136,	-1);
	add_enum_member(id,"D3DFMT_X1R5G5B5",	0X28280143,	-1);
	add_enum_member(id,"D3DFMT_R5G6B5",	0X28280144,	-1);
	add_enum_member(id,"D3DFMT_R6G5B5",	0X28280145,	-1);
	add_enum_member(id,"D3DFMT_X4R4G4B4",	0X2828014F,	-1);
	add_enum_member(id,"D3DFMT_X8R8G8B8",	0X28280186,	-1);
	add_enum_member(id,"D3DFMT_X2R10G10B10",	0X282801B6,	-1);
	add_enum_member(id,"D3DFMT_R10G11B11",	0X282801B7,	-1);
	add_enum_member(id,"D3DFMT_R11G11B10",	0X282801B8,	-1);
	add_enum_member(id,"D3DFMT_LIN_X8B8G8R8",	0X2A200086,	-1);
	add_enum_member(id,"D3DFMT_X8B8G8R8",	0X2A200186,	-1);
	add_enum_member(id,"D3DFMT_LIN_L6V5U5",	0X2A200A45,	-1);
	add_enum_member(id,"D3DFMT_LIN_X8L8V8U8",	0X2A200A86,	-1);
	add_enum_member(id,"D3DFMT_L6V5U5",	0X2A200B45,	-1);
	add_enum_member(id,"D3DFMT_X8L8V8U8",	0X2A200B86,	-1);
	add_enum_member(id,"D3DFMT_LIN_W10V11U11",	0X2A20AAB7,	-1);
	add_enum_member(id,"D3DFMT_LIN_W11V11U10",	0X2A20AAB8,	-1);
	add_enum_member(id,"D3DFMT_W10V11U11",	0X2A20ABB7,	-1);
	add_enum_member(id,"D3DFMT_W11V11U10",	0X2A20ABB8,	-1);
	add_enum_member(id,"D3DFMT_LIN_G8R8",	0X2D20004A,	-1);
	add_enum_member(id,"D3DFMT_LIN_D24S8",	0X2D200096,	-1);
	add_enum_member(id,"D3DFMT_LIN_G16R16",	0X2D200099,	-1);
	add_enum_member(id,"D3DFMT_LIN_G32R32",	0X2D2000A2,	-1);
	add_enum_member(id,"D3DFMT_G8R8",	0X2D20014A,	-1);
	add_enum_member(id,"D3DFMT_D24S8",	0X2D200196,	-1);
	add_enum_member(id,"D3DFMT_G16R16",	0X2D200199,	-1);
	add_enum_member(id,"D3DFMT_G32R32",	0X2D2001A2,	-1);
	add_enum_member(id,"D3DFMT_LIN_V8U8",	0X2D20AA4A,	-1);
	add_enum_member(id,"D3DFMT_LIN_V16U16",	0X2D20AA99,	-1);
	add_enum_member(id,"D3DFMT_LIN_V32U32",	0X2D20AAA2,	-1);
	add_enum_member(id,"D3DFMT_V8U8",	0X2D20AB4A,	-1);
	add_enum_member(id,"D3DFMT_G16R16_EDRAM",	0X2D20AB8D,	-1);
	add_enum_member(id,"D3DFMT_V16U16",	0X2D20AB99,	-1);
	add_enum_member(id,"D3DFMT_V32U32",	0X2D20ABA2,	-1);
	add_enum_member(id,"D3DFMT_LIN_G16R16F_EXPAND",	0X2D22AA9C,	-1);
	add_enum_member(id,"D3DFMT_LIN_G16R16F",	0X2D22AA9F,	-1);
	add_enum_member(id,"D3DFMT_LIN_G32R32F",	0X2D22AAA5,	-1);
	add_enum_member(id,"D3DFMT_G16R16F_EXPAND",	0X2D22AB9C,	-1);
	add_enum_member(id,"D3DFMT_G16R16F",	0X2D22AB9F,	-1);
	add_enum_member(id,"D3DFMT_G32R32F",	0X2D22ABA5,	-1);
	add_enum_member(id,"D3DFMT_LIN_D24X8",	0X2DA00096,	-1);
	add_enum_member(id,"D3DFMT_D24X8",	0X2DA00196,	-1);
	add_enum_member(id,"D3DFMT_LIN_R16F_EXPAND",	0X2DA2AA5B,	-1);
	add_enum_member(id,"D3DFMT_LIN_R16F",	0X2DA2AA5E,	-1);
	add_enum_member(id,"D3DFMT_LIN_R32F",	0X2DA2AAA4,	-1);
	add_enum_member(id,"D3DFMT_R16F_EXPAND",	0X2DA2AB5B,	-1);
	add_enum_member(id,"D3DFMT_R16F",	0X2DA2AB5E,	-1);
	add_enum_member(id,"D3DFMT_R32F",	0X2DA2ABA4,	-1);
	add_enum_member(id,"D3DFMT_FORCE_DWORD",	0X7FFFFFFF,	-1);
	add_enum_member(id,"D3DFMT_UNKNOWN",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"_D3DXFORMAT_TYPE",0x1100000);
	add_enum_member(id,"D3DXFI_ARGB",	0,	-1);
	add_enum_member(id,"D3DXFI_AP",	0X1,	-1);
	add_enum_member(id,"D3DXFI_AL",	0X2,	-1);
	add_enum_member(id,"D3DXFI_UVL",	0X3,	-1);
	add_enum_member(id,"D3DXFI_ZS",	0X4,	-1);
	id = add_enum(-1,"_D3DRESOURCETYPE",0x1100000);
	add_enum_member(id,"D3DRTYPE_NONE",	0,	-1);
	add_enum_member(id,"D3DRTYPE_VERTEXBUFFER",	0X1,	-1);
	add_enum_member(id,"D3DRTYPE_INDEXBUFFER",	0X2,	-1);
	add_enum_member(id,"D3DRTYPE_TEXTURE",	0X3,	-1);
	add_enum_member(id,"D3DRTYPE_SURFACE",	0X4,	-1);
	add_enum_member(id,"D3DRTYPE_VERTEXDECLARATION",	0X5,	-1);
	add_enum_member(id,"D3DRTYPE_VERTEXSHADER",	0X6,	-1);
	add_enum_member(id,"D3DRTYPE_PIXELSHADER",	0X7,	-1);
	add_enum_member(id,"D3DRTYPE_CONSTANTBUFFER",	0X8,	-1);
	add_enum_member(id,"D3DRTYPE_COMMANDBUFFER",	0X9,	-1);
	add_enum_member(id,"D3DRTYPE_VOLUME",	0X10,	-1);
	add_enum_member(id,"D3DRTYPE_VOLUMETEXTURE",	0X11,	-1);
	add_enum_member(id,"D3DRTYPE_CUBETEXTURE",	0X12,	-1);
	add_enum_member(id,"D3DRTYPE_ARRAYTEXTURE",	0X13,	-1);
	add_enum_member(id,"D3DRTYPE_LINETEXTURE",	0X14,	-1);
	add_enum_member(id,"D3DRTYPE_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"D3DXShader::_D3DXTYPE_TEMPLATE",0x1100000);
	add_enum_member(id,"D3DXTT_SCALAR",	0,	-1);
	add_enum_member(id,"D3DXTT_VECTOR",	0X1,	-1);
	add_enum_member(id,"D3DXTT_MATRIX",	0X2,	-1);
	add_enum_member(id,"D3DXTT_OBJECT",	0X3,	-1);
	add_enum_member(id,"D3DXTT_STRUCT",	0X4,	-1);
	add_enum_member(id,"D3DXTT_UNKNOWN",	0X5,	-1);
	id = add_enum(-1,"D3DXShader::_D3DXCOMPONENT_TYPE",0x1100000);
	add_enum_member(id,"D3DXCT_BOOL",	0,	-1);
	add_enum_member(id,"D3DXCT_INT",	0X1,	-1);
	add_enum_member(id,"D3DXCT_INT8",	0X2,	-1);
	add_enum_member(id,"D3DXCT_INT16",	0X3,	-1);
	add_enum_member(id,"D3DXCT_INT32",	0X4,	-1);
	add_enum_member(id,"D3DXCT_UINT",	0X5,	-1);
	add_enum_member(id,"D3DXCT_UINT8",	0X6,	-1);
	add_enum_member(id,"D3DXCT_UINT16",	0X7,	-1);
	add_enum_member(id,"D3DXCT_UINT32",	0X8,	-1);
	add_enum_member(id,"D3DXCT_FLOAT",	0X9,	-1);
	add_enum_member(id,"D3DXCT_FLOAT16",	0XA,	-1);
	add_enum_member(id,"D3DXCT_FLOAT32",	0XB,	-1);
	add_enum_member(id,"D3DXCT_FLOAT64",	0XC,	-1);
	add_enum_member(id,"D3DXCT_NULL",	0XD,	-1);
	add_enum_member(id,"D3DXCT_STRING",	0XE,	-1);
	add_enum_member(id,"D3DXCT_TEXTURE",	0XF,	-1);
	add_enum_member(id,"D3DXCT_TEXTURE1D",	0X10,	-1);
	add_enum_member(id,"D3DXCT_TEXTURE2D",	0X11,	-1);
	add_enum_member(id,"D3DXCT_TEXTURE3D",	0X12,	-1);
	add_enum_member(id,"D3DXCT_TEXTURECUBE",	0X13,	-1);
	add_enum_member(id,"D3DXCT_SAMPLER",	0X14,	-1);
	add_enum_member(id,"D3DXCT_SAMPLER1D",	0X15,	-1);
	add_enum_member(id,"D3DXCT_SAMPLER2D",	0X16,	-1);
	add_enum_member(id,"D3DXCT_SAMPLER3D",	0X17,	-1);
	add_enum_member(id,"D3DXCT_SAMPLERCUBE",	0X18,	-1);
	add_enum_member(id,"D3DXCT_PIXELSHADER",	0X19,	-1);
	add_enum_member(id,"D3DXCT_VERTEXSHADER",	0X1A,	-1);
	add_enum_member(id,"D3DXCT_PIXELFRAGMENT",	0X1B,	-1);
	add_enum_member(id,"D3DXCT_VERTEXFRAGMENT",	0X1C,	-1);
	add_enum_member(id,"D3DXCT_STATEBLOCK",	0X1D,	-1);
	add_enum_member(id,"D3DXCT_UNKNOWN",	0X1E,	-1);
	id = add_enum(-1,"D3DXShader::_D3DXINTRINSIC_OP",0x1100000);
	add_enum_member(id,"D3DXIOP_ABS",	0,	-1);
	add_enum_member(id,"D3DXIOP_ACOS",	0X1,	-1);
	add_enum_member(id,"D3DXIOP_ALL",	0X2,	-1);
	add_enum_member(id,"D3DXIOP_ANY",	0X3,	-1);
	add_enum_member(id,"D3DXIOP_ASIN",	0X4,	-1);
	add_enum_member(id,"D3DXIOP_ATAN",	0X5,	-1);
	add_enum_member(id,"D3DXIOP_ATAN2",	0X6,	-1);
	add_enum_member(id,"D3DXIOP_CEIL",	0X7,	-1);
	add_enum_member(id,"D3DXIOP_CLAMP",	0X8,	-1);
	add_enum_member(id,"D3DXIOP_CLIP",	0X9,	-1);
	add_enum_member(id,"D3DXIOP_COS",	0XA,	-1);
	add_enum_member(id,"D3DXIOP_COSH",	0XB,	-1);
	add_enum_member(id,"D3DXIOP_CROSS",	0XC,	-1);
	add_enum_member(id,"D3DXIOP_DDX",	0XD,	-1);
	add_enum_member(id,"D3DXIOP_DDY",	0XE,	-1);
	add_enum_member(id,"D3DXIOP_DEGREES",	0XF,	-1);
	add_enum_member(id,"D3DXIOP_DETERMINANT",	0X10,	-1);
	add_enum_member(id,"D3DXIOP_DISTANCE",	0X11,	-1);
	add_enum_member(id,"D3DXIOP_DOT",	0X12,	-1);
	add_enum_member(id,"D3DXIOP_DST",	0X13,	-1);
	add_enum_member(id,"D3DXIOP_EXP",	0X14,	-1);
	add_enum_member(id,"D3DXIOP_EXP2",	0X15,	-1);
	add_enum_member(id,"D3DXIOP_FACEFORWARD",	0X16,	-1);
	add_enum_member(id,"D3DXIOP_FLOOR",	0X17,	-1);
	add_enum_member(id,"D3DXIOP_FMOD",	0X18,	-1);
	add_enum_member(id,"D3DXIOP_FRAC",	0X19,	-1);
	add_enum_member(id,"D3DXIOP_FREXP",	0X1A,	-1);
	add_enum_member(id,"D3DXIOP_FWIDTH",	0X1B,	-1);
	add_enum_member(id,"D3DXIOP_ISFINITE",	0X1C,	-1);
	add_enum_member(id,"D3DXIOP_ISINF",	0X1D,	-1);
	add_enum_member(id,"D3DXIOP_ISNAN",	0X1E,	-1);
	add_enum_member(id,"D3DXIOP_LDEXP",	0X1F,	-1);
	add_enum_member(id,"D3DXIOP_LENGTH",	0X20,	-1);
	add_enum_member(id,"D3DXIOP_LERP",	0X21,	-1);
	add_enum_member(id,"D3DXIOP_LIT",	0X22,	-1);
	add_enum_member(id,"D3DXIOP_LOG",	0X23,	-1);
	add_enum_member(id,"D3DXIOP_LOG10",	0X24,	-1);
	add_enum_member(id,"D3DXIOP_LOG2",	0X25,	-1);
	add_enum_member(id,"D3DXIOP_MAX",	0X26,	-1);
	add_enum_member(id,"D3DXIOP_MIN",	0X27,	-1);
	add_enum_member(id,"D3DXIOP_MODF",	0X28,	-1);
	add_enum_member(id,"D3DXIOP_MUL_SS",	0X29,	-1);
	add_enum_member(id,"D3DXIOP_MUL_SV",	0X2A,	-1);
	add_enum_member(id,"D3DXIOP_MUL_SM",	0X2B,	-1);
	add_enum_member(id,"D3DXIOP_MUL_VS",	0X2C,	-1);
	add_enum_member(id,"D3DXIOP_MUL_VV",	0X2D,	-1);
	add_enum_member(id,"D3DXIOP_MUL_VM",	0X2E,	-1);
	add_enum_member(id,"D3DXIOP_MUL_MS",	0X2F,	-1);
	add_enum_member(id,"D3DXIOP_MUL_MV",	0X30,	-1);
	add_enum_member(id,"D3DXIOP_MUL_MM",	0X31,	-1);
	add_enum_member(id,"D3DXIOP_NOISE",	0X32,	-1);
	add_enum_member(id,"D3DXIOP_NORMALIZE",	0X33,	-1);
	add_enum_member(id,"D3DXIOP_POW",	0X34,	-1);
	add_enum_member(id,"D3DXIOP_RADIANS",	0X35,	-1);
	add_enum_member(id,"D3DXIOP_REFLECT",	0X36,	-1);
	add_enum_member(id,"D3DXIOP_REFRACT",	0X37,	-1);
	add_enum_member(id,"D3DXIOP_ROUND",	0X38,	-1);
	add_enum_member(id,"D3DXIOP_RSQRT",	0X39,	-1);
	add_enum_member(id,"D3DXIOP_SATURATE",	0X3A,	-1);
	add_enum_member(id,"D3DXIOP_SIGN",	0X3B,	-1);
	add_enum_member(id,"D3DXIOP_SIN",	0X3C,	-1);
	add_enum_member(id,"D3DXIOP_SINCOS",	0X3D,	-1);
	add_enum_member(id,"D3DXIOP_SINH",	0X3E,	-1);
	add_enum_member(id,"D3DXIOP_SMOOTHSTEP",	0X3F,	-1);
	add_enum_member(id,"D3DXIOP_SQRT",	0X40,	-1);
	add_enum_member(id,"D3DXIOP_STEP",	0X41,	-1);
	add_enum_member(id,"D3DXIOP_TAN",	0X42,	-1);
	add_enum_member(id,"D3DXIOP_TANH",	0X43,	-1);
	add_enum_member(id,"D3DXIOP_TEX1D",	0X44,	-1);
	add_enum_member(id,"D3DXIOP_TEX1D_DD",	0X45,	-1);
	add_enum_member(id,"D3DXIOP_TEX1D_PROJ",	0X46,	-1);
	add_enum_member(id,"D3DXIOP_TEX1D_BIAS",	0X47,	-1);
	add_enum_member(id,"D3DXIOP_TEX1D_LOD",	0X48,	-1);
	add_enum_member(id,"D3DXIOP_TEX2D",	0X49,	-1);
	add_enum_member(id,"D3DXIOP_TEX2D_DD",	0X4A,	-1);
	add_enum_member(id,"D3DXIOP_TEX2D_PROJ",	0X4B,	-1);
	add_enum_member(id,"D3DXIOP_TEX2D_BIAS",	0X4C,	-1);
	add_enum_member(id,"D3DXIOP_TEX2D_LOD",	0X4D,	-1);
	add_enum_member(id,"D3DXIOP_TEX3D",	0X4E,	-1);
	add_enum_member(id,"D3DXIOP_TEX3D_DD",	0X4F,	-1);
	add_enum_member(id,"D3DXIOP_TEX3D_PROJ",	0X50,	-1);
	add_enum_member(id,"D3DXIOP_TEX3D_BIAS",	0X51,	-1);
	add_enum_member(id,"D3DXIOP_TEX3D_LOD",	0X52,	-1);
	add_enum_member(id,"D3DXIOP_TEXCUBE",	0X53,	-1);
	add_enum_member(id,"D3DXIOP_TEXCUBE_DD",	0X54,	-1);
	add_enum_member(id,"D3DXIOP_TEXCUBE_PROJ",	0X55,	-1);
	add_enum_member(id,"D3DXIOP_TEXCUBE_BIAS",	0X56,	-1);
	add_enum_member(id,"D3DXIOP_TEXCUBE_LOD",	0X57,	-1);
	add_enum_member(id,"D3DXIOP_TRANSPOSE",	0X58,	-1);
	add_enum_member(id,"D3DXIOP_D3DCOLORTOUBYTE4",	0X59,	-1);
	id = add_enum(-1,"GPUALUSRCSELECT",0x1100000);
	add_enum_member(id,"GPUALUSRCSELECT_C",	0,	-1);
	add_enum_member(id,"GPUALUSRCSELECT_R",	0X1,	-1);
	id = add_enum(-1,"ColorFormat",0x1100000);
	add_enum_member(id,"COLOR_8",	0X2,	-1);
	add_enum_member(id,"COLOR_1_5_5_5",	0X3,	-1);
	add_enum_member(id,"COLOR_5_6_5",	0X4,	-1);
	add_enum_member(id,"COLOR_6_5_5",	0X5,	-1);
	add_enum_member(id,"COLOR_8_8_8_8",	0X6,	-1);
	add_enum_member(id,"COLOR_2_10_10_10",	0X7,	-1);
	add_enum_member(id,"COLOR_8_A",	0X8,	-1);
	add_enum_member(id,"COLOR_8_B",	0X9,	-1);
	add_enum_member(id,"COLOR_8_8",	0XA,	-1);
	add_enum_member(id,"COLOR_8_8_8_8_A",	0XE,	-1);
	add_enum_member(id,"COLOR_4_4_4_4",	0XF,	-1);
	add_enum_member(id,"COLOR_10_11_11",	0X10,	-1);
	add_enum_member(id,"COLOR_11_11_10",	0X11,	-1);
	add_enum_member(id,"COLOR_16",	0X18,	-1);
	add_enum_member(id,"COLOR_16_16",	0X19,	-1);
	add_enum_member(id,"COLOR_16_16_16_16",	0X1A,	-1);
	add_enum_member(id,"COLOR_16_FLOAT",	0X1E,	-1);
	add_enum_member(id,"COLOR_16_16_FLOAT",	0X1F,	-1);
	add_enum_member(id,"COLOR_16_16_16_16_FLOAT",	0X20,	-1);
	add_enum_member(id,"COLOR_32_FLOAT",	0X24,	-1);
	add_enum_member(id,"COLOR_32_32_FLOAT",	0X25,	-1);
	add_enum_member(id,"COLOR_32_32_32_32_FLOAT",	0X26,	-1);
	id = add_enum(-1,"XGRAPHICS::_E_AS_STATE",0x1100000);
	add_enum_member(id,"AS_VS_HANDLE",	0,	-1);
	add_enum_member(id,"AS_PS_HANDLE",	0X1,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_ENABLE",	0X2,	-1);
	add_enum_member(id,"AS_ALPHA_TEST_ENABLE",	0X1B,	-1);
	add_enum_member(id,"AS_ALPHA_TEST_FUNC",	0X1C,	-1);
	add_enum_member(id,"AS_ALPHA_TO_MASK_ENABLE",	0X1D,	-1);
	add_enum_member(id,"AS_ROP3",	0X22,	-1);
	add_enum_member(id,"AS_Z_ENABLE",	0X23,	-1);
	add_enum_member(id,"AS_Z_WRITE_ENABLE",	0X24,	-1);
	add_enum_member(id,"AS_Z_FUNC",	0X25,	-1);
	add_enum_member(id,"AS_POLYOFFSET_ENABLE_FRONT",	0X26,	-1);
	add_enum_member(id,"AS_POLYOFFSET_BIAS_FRONT",	0X27,	-1);
	add_enum_member(id,"AS_POLYOFFSET_SCALE_FRONT",	0X28,	-1);
	add_enum_member(id,"AS_POLYOFFSET_ENABLE_BACK",	0X29,	-1);
	add_enum_member(id,"AS_POLYOFFSET_BIAS_BACK",	0X2A,	-1);
	add_enum_member(id,"AS_POLYOFFSET_SCALE_BACK",	0X2B,	-1);
	add_enum_member(id,"AS_POLYOFFSET_ENABLE_NON_TRI",	0X2C,	-1);
	add_enum_member(id,"AS_Z_HIZENABLE",	0X2D,	-1);
	add_enum_member(id,"AS_Z_BASEADDRESS",	0X2E,	-1);
	add_enum_member(id,"AS_Z_HEAP",	0X2F,	-1);
	add_enum_member(id,"AS_Z_FORMAT",	0X30,	-1);
	add_enum_member(id,"AS_Z_SURFACE_FMT",	0X31,	-1);
	add_enum_member(id,"AS_Z_SURFACE_NUMERIC",	0X32,	-1);
	add_enum_member(id,"AS_Z_ENDIAN",	0X33,	-1);
	add_enum_member(id,"AS_Z_MASKENABLE",	0X34,	-1);
	add_enum_member(id,"AS_Z_CLEARVALUE",	0X35,	-1);
	add_enum_member(id,"AS_Z_RANGEENABLE",	0X36,	-1);
	add_enum_member(id,"AS_Z_FAST_CLEAR_ENABLE",	0X37,	-1);
	add_enum_member(id,"AS_Z_FAST_EXPAND_ENABLE",	0X38,	-1);
	add_enum_member(id,"AS_ZPASS_COUNT_ENABLE",	0X39,	-1);
	add_enum_member(id,"AS_ZPASS_COUNT_TYPE",	0X3A,	-1);
	add_enum_member(id,"AS_ZPASS_COUNT_ADDRESS",	0X3B,	-1);
	add_enum_member(id,"AS_TILE_Z_WRITE_ENABLE",	0X3C,	-1);
	add_enum_member(id,"AS_TILE_Z_ENABLE",	0X3D,	-1);
	add_enum_member(id,"AS_TILE_STENCIL_WRITE_ENABLE",	0X3E,	-1);
	add_enum_member(id,"AS_TILE_STENCIL_ENABLE",	0X3F,	-1);
	add_enum_member(id,"AS_TILE_ZFUNC",	0X40,	-1);
	add_enum_member(id,"AS_TILE_STENCILFUNC",	0X41,	-1);
	add_enum_member(id,"AS_TILE_STENCILREF",	0X42,	-1);
	add_enum_member(id,"AS_TILE_BASE_ADDR",	0X43,	-1);
	add_enum_member(id,"AS_TILE_CLEAR",	0X44,	-1);
	add_enum_member(id,"AS_COPY_SURFACE_SLICE",	0X45,	-1);
	add_enum_member(id,"AS_STENCIL_ENABLE",	0X46,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_FAIL",	0X47,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_Z_FAIL",	0X48,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_Z_PASS",	0X49,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_FUNC",	0X4A,	-1);
	add_enum_member(id,"AS_STENCIL_TWO_SIDED_ENABLE",	0X4B,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_FAIL",	0X4C,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_Z_FAIL",	0X4D,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_Z_PASS",	0X4E,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_FUNC",	0X4F,	-1);
	add_enum_member(id,"AS_STENCIL_MASKENABLE",	0X50,	-1);
	add_enum_member(id,"AS_STENCIL_CLEARVALUE",	0X51,	-1);
	add_enum_member(id,"AS_STENCIL_COMPAREVALUE",	0X52,	-1);
	add_enum_member(id,"AS_STENCIL_MINVALUE",	0X53,	-1);
	add_enum_member(id,"AS_STENCIL_FAST_CLEAR_ENABLE",	0X54,	-1);
	add_enum_member(id,"AS_STENCIL_FAST_EXPAND_ENABLE",	0X55,	-1);
	add_enum_member(id,"AS_STENCIL_HISTENCIL_ENABLE",	0X56,	-1);
	add_enum_member(id,"AS_SCISSOR_ENABLE",	0X57,	-1);
	add_enum_member(id,"AS_SCISSOR_TOPLEFT_X",	0X58,	-1);
	add_enum_member(id,"AS_SCISSOR_TOPLEFT_Y",	0X59,	-1);
	add_enum_member(id,"AS_SCISSOR_BOTTOMRIGHT_X",	0X5A,	-1);
	add_enum_member(id,"AS_SCISSOR_BOTTOMRIGHT_Y",	0X5B,	-1);
	add_enum_member(id,"AS_CULL_FRONT",	0X5C,	-1);
	add_enum_member(id,"AS_CULL_BACK",	0X5D,	-1);
	add_enum_member(id,"AS_CULL_FACE",	0X5E,	-1);
	add_enum_member(id,"AS_CLIP_ENABLE",	0X5F,	-1);
	add_enum_member(id,"AS_CLIP_SPACE_DEF",	0X7E,	-1);
	add_enum_member(id,"AS_POINTSPRITE_ENABLE",	0X7F,	-1);
	add_enum_member(id,"AS_POINTSPRITE_SIZE",	0X80,	-1);
	add_enum_member(id,"AS_POINTSPRITE_MINSIZE",	0X81,	-1);
	add_enum_member(id,"AS_POINTSPRITE_MAXSIZE",	0X82,	-1);
	add_enum_member(id,"AS_POINTSPRITE_X_RAD",	0X83,	-1);
	add_enum_member(id,"AS_POINTSPRITE_Y_RAD",	0X84,	-1);
	add_enum_member(id,"AS_POINTSPRITE_CULL_RAD",	0X85,	-1);
	add_enum_member(id,"AS_POINTSPRITE_CLIPPLANE_MODE",	0X86,	-1);
	add_enum_member(id,"AS_POINTSPRITE_REPLACE_MODE",	0X87,	-1);
	add_enum_member(id,"AS_WFAR",	0X98,	-1);
	add_enum_member(id,"AS_WNEAR",	0X99,	-1);
	add_enum_member(id,"AS_VP_ENABLES_PACKED",	0X9A,	-1);
	add_enum_member(id,"AS_VTX_XYFMT",	0X9B,	-1);
	add_enum_member(id,"AS_VTX_ZFMT",	0X9C,	-1);
	add_enum_member(id,"AS_VTX_WFMT",	0X9D,	-1);
	add_enum_member(id,"AS_VP_SERIALPROC_ENABLE",	0X9E,	-1);
	add_enum_member(id,"AS_GB_VERT_CLIP_ADJ",	0X9F,	-1);
	add_enum_member(id,"AS_GB_VERT_DISC_ADJ",	0XA0,	-1);
	add_enum_member(id,"AS_GB_HORZ_CLIP_ADJ",	0XA1,	-1);
	add_enum_member(id,"AS_GB_HORZ_DISC_ADJ",	0XA2,	-1);
	add_enum_member(id,"AS_FOG_ENABLE",	0XA3,	-1);
	add_enum_member(id,"AS_RANGE_FOG_ENABLE",	0XA4,	-1);
	add_enum_member(id,"AS_FOG_TABLE_MODE",	0XA5,	-1);
	add_enum_member(id,"AS_FOG_START",	0XA6,	-1);
	add_enum_member(id,"AS_FOG_END",	0XA7,	-1);
	add_enum_member(id,"AS_FOG_DENSITY",	0XA8,	-1);
	add_enum_member(id,"AS_FOG_VERTEX_MODE",	0XA9,	-1);
	add_enum_member(id,"AS_TABLE_FOG_INDEX",	0XAA,	-1);
	add_enum_member(id,"AS_FOG_TABLE_METHOD",	0XAB,	-1);
	add_enum_member(id,"AS_PRIM_ENABLE",	0X236,	-1);
	add_enum_member(id,"AS_PRIM_TYPE",	0X237,	-1);
	add_enum_member(id,"AS_PRIM_ORDER",	0X238,	-1);
	add_enum_member(id,"AS_PRIM_INDEX_SIZE",	0X239,	-1);
	add_enum_member(id,"AS_FILL_MODE_FRONT",	0X23A,	-1);
	add_enum_member(id,"AS_FILL_MODE_BACK",	0X23B,	-1);
	add_enum_member(id,"AS_SHADE_MODE",	0X23C,	-1);
	add_enum_member(id,"AS_LINE_WIDTH",	0X23D,	-1);
	add_enum_member(id,"AS_LINE_STIPPLE_ENABLE",	0X23E,	-1);
	add_enum_member(id,"AS_LINE_STIPPLE_PATTERN",	0X23F,	-1);
	add_enum_member(id,"AS_LINE_STIPPLE_REPEAT_COUNT",	0X240,	-1);
	add_enum_member(id,"AS_LINE_STIPPLE_AUTO_RESET",	0X241,	-1);
	add_enum_member(id,"AS_LINE_DRAW_LAST_PIXEL",	0X242,	-1);
	add_enum_member(id,"AS_PROVOKING_VERTEX",	0X243,	-1);
	add_enum_member(id,"AS_REND_WINDOW_HEIGHT",	0X244,	-1);
	add_enum_member(id,"AS_REND_INVERTED_ENABLE",	0X245,	-1);
	add_enum_member(id,"AS_POLY_STIPPLE_ENABLE",	0X246,	-1);
	add_enum_member(id,"AS_LIGHT_TWO_SIDED_ENABLE",	0X267,	-1);
	add_enum_member(id,"AS_COLOR_DITHER",	0X268,	-1);
	add_enum_member(id,"AS_ALPHA_DITHER",	0X269,	-1);
	add_enum_member(id,"AS_CB_FAST_CLEAR_ENABLE",	0X26A,	-1);
	add_enum_member(id,"AS_CB_FAST_EXPAND_ENABLE",	0X26B,	-1);
	add_enum_member(id,"AS_REND_TILE_ENABLE",	0X26C,	-1);
	add_enum_member(id,"AS_REND_SLICE",	0X26D,	-1);
	add_enum_member(id,"AS_REND_ARRAY",	0X26E,	-1);
	add_enum_member(id,"AS_CB_MASKENABLE",	0X26F,	-1);
	add_enum_member(id,"AS_CB_CLEARCOLOR_RED",	0X270,	-1);
	add_enum_member(id,"AS_CB_CLEARCOLOR_GREEN",	0X271,	-1);
	add_enum_member(id,"AS_CB_CLEARCOLOR_BLUE",	0X272,	-1);
	add_enum_member(id,"AS_CB_CLEARCOLOR_ALPHA",	0X273,	-1);
	add_enum_member(id,"AS_REND_PITCH",	0X28C,	-1);
	add_enum_member(id,"AS_REND_MSAA_SAMPLES",	0X28D,	-1);
	add_enum_member(id,"AS_MSAA_SAMPLE_MODE",	0X28E,	-1);
	add_enum_member(id,"AS_TILEDATA_BASEADDRESS",	0X28F,	-1);
	add_enum_member(id,"AS_COLORKEY_ENABLE",	0X290,	-1);
	add_enum_member(id,"AS_COLORKEY_SRC_CLRCMP_MODE",	0X291,	-1);
	add_enum_member(id,"AS_COLORKEY_DST_CLRCMP_MODE",	0X292,	-1);
	add_enum_member(id,"AS_COLORKEY_SRC_RED",	0X293,	-1);
	add_enum_member(id,"AS_COLORKEY_SRC_GREEN",	0X294,	-1);
	add_enum_member(id,"AS_COLORKEY_SRC_BLUE",	0X295,	-1);
	add_enum_member(id,"AS_COLORKEY_SRC_ALPHA",	0X296,	-1);
	add_enum_member(id,"AS_COLORKEY_DST_RED",	0X297,	-1);
	add_enum_member(id,"AS_COLORKEY_DST_GREEN",	0X298,	-1);
	add_enum_member(id,"AS_COLORKEY_DST_BLUE",	0X299,	-1);
	add_enum_member(id,"AS_COLORKEY_DST_ALPHA",	0X29A,	-1);
	add_enum_member(id,"AS_PIXEL_CENTER",	0X29B,	-1);
	add_enum_member(id,"AS_ROUND_MODE",	0X29C,	-1);
	add_enum_member(id,"AS_CB_REPLICATE_OUTPUT",	0X29D,	-1);
	add_enum_member(id,"AS_COPY_DEST_FORMAT",	0X29E,	-1);
	add_enum_member(id,"AS_EDRAM_MODE",	0X29F,	-1);
	add_enum_member(id,"AS_EDRAM_RT_SRC_SEL",	0X2A0,	-1);
	add_enum_member(id,"AS_EDRAM_SAMP_SEL",	0X2A1,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_COMMAND",	0X2A2,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_DST_BASE",	0X2A3,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_ENDIAN",	0X2A4,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_NUMBER",	0X2A5,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_EXP_BIAS",	0X2A6,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_DST_SWAP",	0X2A7,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_DST_PITCH",	0X2A8,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_DST_HEIGHT",	0X2A9,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_FUNC_RED",	0X2AA,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_FUNC_BLUE",	0X2AB,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_FUNC_GREEN",	0X2AC,	-1);
	add_enum_member(id,"AS_EDRAM_COPY_FUNC_ALPHA",	0X2AD,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_ENABLE",	0X39E,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_OFFSET",	0X39F,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_STRIDE",	0X3A0,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_TYPE_FORMAT",	0X3A1,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_TYPE_DIMENSION",	0X3A2,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_TYPE_SIGNED",	0X3A3,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_TYPE_NORMALIZE",	0X3A4,	-1);
	add_enum_member(id,"AS_EDGEFLAG_DECL_USAGE",	0X3A5,	-1);
	add_enum_member(id,"AS_AA_REND_POINT_ENABLE",	0X3A6,	-1);
	add_enum_member(id,"AS_AA_REND_LINE_ENABLE",	0X3A7,	-1);
	add_enum_member(id,"AS_AA_REND_SAMPLE_TABLE_ENABLE",	0X3A8,	-1);
	add_enum_member(id,"AS_AA_REND_SAMPLE_TABLE_X_DIMENSION",	0X3A9,	-1);
	add_enum_member(id,"AS_AA_REND_SAMPLE_TABLE_Y_DIMENSION",	0X3AA,	-1);
	add_enum_member(id,"AS_AA_REND_MASK",	0X3BB,	-1);
	add_enum_member(id,"AS_MSAA_REND_ENABLE",	0X3BC,	-1);
	add_enum_member(id,"AS_MSAA_REND_NUM_SAMPLES",	0X3BD,	-1);
	add_enum_member(id,"AS_MSAA_TEX_NUM_SAMPLES",	0X3BE,	-1);
	add_enum_member(id,"AS_MSAA_TEX_RESULT_FORMAT",	0X3BF,	-1);
	add_enum_member(id,"AS_MSAA_TEX_SURFACE_FMT",	0X3C0,	-1);
	add_enum_member(id,"AS_MSAA_TEX_SURFACE_PACKED_NUMERIC",	0X3C1,	-1);
	add_enum_member(id,"AS_MSAA_TEX_FILTER_FUNCTION",	0X3C2,	-1);
	add_enum_member(id,"AS_MSAA_TEX_TILEDATA_BASEADDRESS",	0X3C3,	-1);
	add_enum_member(id,"AS_MSAA_TEX_CLEARCOLOR_RED",	0X3C4,	-1);
	add_enum_member(id,"AS_MSAA_TEX_CLEARCOLOR_GREEN",	0X3C5,	-1);
	add_enum_member(id,"AS_MSAA_TEX_CLEARCOLOR_BLUE",	0X3C6,	-1);
	add_enum_member(id,"AS_MSAA_TEX_CLEARCOLOR_ALPHA",	0X3C7,	-1);
	add_enum_member(id,"AS_MSAA_TEX_BASEADDRESS",	0X3C8,	-1);
	add_enum_member(id,"AS_MSAA_TEX_PITCH_IN_TEXELS",	0X3C9,	-1);
	add_enum_member(id,"AS_MSAA_TEX_SLICE_STRIDE_IN_TEXELS",	0X3CA,	-1);
	add_enum_member(id,"AS_HOS_ENABLE",	0X3CB,	-1);
	add_enum_member(id,"AS_HOS_MIN_TESS_LEVEL",	0X3CC,	-1);
	add_enum_member(id,"AS_HOS_MAX_TESS_LEVEL",	0X3CD,	-1);
	add_enum_member(id,"AS_HOS_TESS_MODE",	0X3CE,	-1);
	add_enum_member(id,"AS_VIZ_QUERY_ENABLE",	0X3CF,	-1);
	add_enum_member(id,"AS_VIZ_QUERY_ID",	0X3D0,	-1);
	add_enum_member(id,"AS_VIZ_QUERY_KILL_PIX_POST_HI_Z_ENABLE",	0X3D1,	-1);
	add_enum_member(id,"AS_VIZ_QUERY_KILL_PIX_POST_DETAIL_MASK",	0X3D2,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_CONST_RED",	0X3D3,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_CONST_GREEN",	0X3D4,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_CONST_BLUE",	0X3D5,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_CONST_ALPHA",	0X3D6,	-1);
	add_enum_member(id,"AS_ALPHA_TEST_REF",	0X3D7,	-1);
	add_enum_member(id,"AS_MIP_PACKING_ENABLE",	0X3D8,	-1);
	add_enum_member(id,"AS_NEAREST_CLAMP_POLICY",	0X3D9,	-1);
	add_enum_member(id,"AS_EDGEFLAG_STREAM_BASE",	0X3DA,	-1);
	add_enum_member(id,"AS_EDGEFLAG_STREAM_LIMIT",	0X3DB,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_REF",	0X3DC,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_MASK",	0X3DD,	-1);
	add_enum_member(id,"AS_STENCIL_FRONT_WRITEMASK",	0X3DE,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_REF",	0X3DF,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_MASK",	0X3E0,	-1);
	add_enum_member(id,"AS_STENCIL_BACK_WRITEMASK",	0X3E1,	-1);
	add_enum_member(id,"AS_VP_XSCALE",	0X3E2,	-1);
	add_enum_member(id,"AS_VP_XOFFSET",	0X3E3,	-1);
	add_enum_member(id,"AS_VP_YSCALE",	0X3E4,	-1);
	add_enum_member(id,"AS_VP_YOFFSET",	0X3E5,	-1);
	add_enum_member(id,"AS_VP_ZSCALE",	0X3E6,	-1);
	add_enum_member(id,"AS_VP_ZOFFSET",	0X3E7,	-1);
	add_enum_member(id,"AS_FOGCOLOR_RED",	0X3E8,	-1);
	add_enum_member(id,"AS_FOGCOLOR_GREEN",	0X3E9,	-1);
	add_enum_member(id,"AS_FOGCOLOR_BLUE",	0X3EA,	-1);
	add_enum_member(id,"AS_MIN_VTX_INDEX",	0X3EB,	-1);
	add_enum_member(id,"AS_MAX_VTX_INDEX",	0X3EC,	-1);
	add_enum_member(id,"AS_BASE_VERTEX_INDEX",	0X3ED,	-1);
	id = add_enum(-1,"XGRAPHICS::_E_AS_ARRAY_STATE",0x1100000);
	add_enum_member(id,"AS_ALPHA_BLEND_COLOR_SRC_FACTOR_N",	0,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_COLOR_OP_N",	0X1,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_COLOR_DST_FACTOR_N",	0X2,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_ALPHA_SRC_FACTOR_N",	0X3,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_ALPHA_OP_N",	0X4,	-1);
	add_enum_member(id,"AS_ALPHA_BLEND_ALPHA_DST_FACTOR_N",	0X5,	-1);
	add_enum_member(id,"AS_ALPHA_TO_MASK_OFFSET_N",	0X6,	-1);
	add_enum_member(id,"AS_CLIPPLANE_ENABLE_N",	0X7,	-1);
	add_enum_member(id,"AS_CLIPPLANE_X_N",	0X8,	-1);
	add_enum_member(id,"AS_CLIPPLANE_Y_N",	0X9,	-1);
	add_enum_member(id,"AS_CLIPPLANE_Z_N",	0XA,	-1);
	add_enum_member(id,"AS_CLIPPLANE_W_N",	0XB,	-1);
	add_enum_member(id,"AS_POINTSPRITE_REPLACE_ENABLE_N",	0XC,	-1);
	add_enum_member(id,"AS_TEXCOORD_CYLINDRICAL_WRAP_N",	0XD,	-1);
	add_enum_member(id,"AS_TEX_PROJECTED_N",	0XE,	-1);
	add_enum_member(id,"AS_TEX_DENORM_N",	0XF,	-1);
	add_enum_member(id,"AS_TEX_BORDER_COLOR_RED_N",	0X10,	-1);
	add_enum_member(id,"AS_TEX_BORDER_COLOR_GREEN_N",	0X11,	-1);
	add_enum_member(id,"AS_TEX_BORDER_COLOR_BLUE_N",	0X12,	-1);
	add_enum_member(id,"AS_TEX_BORDER_COLOR_ALPHA_N",	0X13,	-1);
	add_enum_member(id,"AS_TEX_SHADOW_ENABLE_N",	0X14,	-1);
	add_enum_member(id,"AS_TEX_SHADOW_FILTER_N",	0X15,	-1);
	add_enum_member(id,"AS_TEX_SHADOW_USAGE_N",	0X16,	-1);
	add_enum_member(id,"AS_TEX_SHADOW_COMPARE_FUNC_N",	0X17,	-1);
	add_enum_member(id,"AS_TEX_LODCLAMP_ENABLE_N",	0X18,	-1);
	add_enum_member(id,"AS_TEX_LODCLAMP_MIN_N",	0X19,	-1);
	add_enum_member(id,"AS_TEX_LODCLAMP_MAX_N",	0X1A,	-1);
	add_enum_member(id,"AS_INTERNAL_TEX_TYPE_N",	0X1B,	-1);
	add_enum_member(id,"AS_INTERNAL_TEX_FORMAT_N",	0X1C,	-1);
	add_enum_member(id,"AS_INTERNAL_TEX_CLAMP_X_N",	0X1D,	-1);
	add_enum_member(id,"AS_INTERNAL_TEX_CLAMP_Y_N",	0X1E,	-1);
	add_enum_member(id,"AS_INTERNAL_TEX_CLAMP_Z_N",	0X1F,	-1);
	add_enum_member(id,"AS_POLY_STIPPLE_PATTERN_N",	0X20,	-1);
	add_enum_member(id,"AS_CB_BASEADDRESS_N",	0X21,	-1);
	add_enum_member(id,"AS_CB_SURFACE_FMT_N",	0X22,	-1);
	add_enum_member(id,"AS_CB_SURFACE_NUMERIC_PACKED_N",	0X23,	-1);
	add_enum_member(id,"AS_CB_SURFACE_SWIZZLE_PACKED_N",	0X24,	-1);
	add_enum_member(id,"AS_CB_CLAMP_MODE_N",	0X25,	-1);
	add_enum_member(id,"AS_CB_EXP_BIAS_N",	0X26,	-1);
	add_enum_member(id,"AS_VS_DECL_ENABLE_N",	0X27,	-1);
	add_enum_member(id,"AS_VS_DECL_STREAM_NUM_N",	0X28,	-1);
	add_enum_member(id,"AS_VS_DECL_OFFSET_N",	0X29,	-1);
	add_enum_member(id,"AS_VS_DECL_STRIDE_N",	0X2A,	-1);
	add_enum_member(id,"AS_VS_DECL_TYPE_FORMAT_N",	0X2B,	-1);
	add_enum_member(id,"AS_VS_DECL_TYPE_DIMENSION_N",	0X2C,	-1);
	add_enum_member(id,"AS_VS_DECL_TYPE_SIGNED_N",	0X2D,	-1);
	add_enum_member(id,"AS_VS_DECL_TYPE_NORMALIZE_N",	0X2E,	-1);
	add_enum_member(id,"AS_VS_DECL_USAGE_N",	0X2F,	-1);
	add_enum_member(id,"AS_VS_DECL_STREAM_FREQ_N",	0X30,	-1);
	add_enum_member(id,"AS_AA_REND_SAMPLE_TABLE_INDEX_N",	0X31,	-1);
	add_enum_member(id,"AS_CB_WRITEMASK_RED_N",	0X32,	-1);
	add_enum_member(id,"AS_CB_WRITEMASK_GREEN_N",	0X33,	-1);
	add_enum_member(id,"AS_CB_WRITEMASK_BLUE_N",	0X34,	-1);
	add_enum_member(id,"AS_CB_WRITEMASK_ALPHA_N",	0X35,	-1);
	add_enum_member(id,"AS_VS_STREAM_BASE_N",	0X36,	-1);
	add_enum_member(id,"AS_VS_STREAM_LIMIT_N",	0X37,	-1);
	add_enum_member(id,"AS_TEX_ENABLE_N",	0X38,	-1);
	add_enum_member(id,"AS_TEX_BASEADDRESS_N",	0X39,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_PITCH_IN_TEXELS_N",	0X3A,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_SLICE_STRIDE_IN_TEXELS_N",	0X3B,	-1);
	add_enum_member(id,"AS_TEX_MAG_FILTER_N",	0X3C,	-1);
	add_enum_member(id,"AS_TEX_MIN_FILTER_N",	0X3D,	-1);
	add_enum_member(id,"AS_TEX_MIP_FILTER_N",	0X3E,	-1);
	add_enum_member(id,"AS_TEX_ANISO_FILTER_N",	0X3F,	-1);
	add_enum_member(id,"AS_TEX_VOL_MAG_FILTER_N",	0X40,	-1);
	add_enum_member(id,"AS_TEX_VOL_MIN_FILTER_N",	0X41,	-1);
	add_enum_member(id,"AS_TEX_MAX_MIP_LEVEL_N",	0X42,	-1);
	add_enum_member(id,"AS_TEX_MIN_MIP_LEVEL_N",	0X43,	-1);
	add_enum_member(id,"AS_TEX_LODBIAS_N",	0X44,	-1);
	add_enum_member(id,"AS_TEX_BORDER_SIZE_N",	0X45,	-1);
	add_enum_member(id,"AS_TEX_FORMAT_N",	0X46,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_FMT_N",	0X47,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_NUMERIC_PACKED_N",	0X48,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_SWIZZLE_PACKED_N",	0X49,	-1);
	add_enum_member(id,"AS_TEX_HEAP_N",	0X4A,	-1);
	add_enum_member(id,"AS_TEX_MIP_CHAIN_ADDRESS_N",	0X4B,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_WIDTH_N",	0X4C,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_HEIGHT_N",	0X4D,	-1);
	add_enum_member(id,"AS_TEX_SURFACE_DEPTH_N",	0X4E,	-1);
	add_enum_member(id,"AS_TEX_TYPE_N",	0X4F,	-1);
	add_enum_member(id,"AS_TEX_TILING_ENABLE_N",	0X50,	-1);
	add_enum_member(id,"AS_TEX_TRI_JUICE_N",	0X51,	-1);
	add_enum_member(id,"AS_TEX_CLAMP_X_N",	0X52,	-1);
	add_enum_member(id,"AS_TEX_CLAMP_Y_N",	0X53,	-1);
	add_enum_member(id,"AS_TEX_CLAMP_Z_N",	0X54,	-1);
	add_enum_member(id,"AS_TEX_VALUE_NORMALIZATION_N",	0X55,	-1);
	add_enum_member(id,"AS_TEX_SHADOW_COMPARE_FAIL_VALUE_N",	0X56,	-1);
	add_enum_member(id,"AS_TEX_EXP_ADJUST_N",	0X57,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_ENABLE_N",	0X58,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_BASE_N",	0X59,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_MAX_INDEX_N",	0X5A,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_FORMAT_N",	0X5B,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_DIMENSION_N",	0X5C,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_ELEM_STRIDE_N",	0X5D,	-1);
	add_enum_member(id,"AS_VS_EXPORT_STREAM_STRIDE_N",	0X5E,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_ENABLE_N",	0X5F,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_BASE_N",	0X60,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_MAX_INDEX_N",	0X61,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_FORMAT_N",	0X62,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_DIMENSION_N",	0X63,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_ELEM_STRIDE_N",	0X64,	-1);
	add_enum_member(id,"AS_PS_EXPORT_STREAM_STRIDE_N",	0X65,	-1);
	id = add_enum(-1,"SurfaceFormat",0x1100000);
	add_enum_member(id,"FMT_1_REVERSE",	0,	-1);
	add_enum_member(id,"FMT_1",	0X1,	-1);
	add_enum_member(id,"FMT_8",	0X2,	-1);
	add_enum_member(id,"FMT_1_5_5_5",	0X3,	-1);
	add_enum_member(id,"FMT_5_6_5",	0X4,	-1);
	add_enum_member(id,"FMT_6_5_5",	0X5,	-1);
	add_enum_member(id,"FMT_8_8_8_8",	0X6,	-1);
	add_enum_member(id,"FMT_2_10_10_10",	0X7,	-1);
	add_enum_member(id,"FMT_8_A",	0X8,	-1);
	add_enum_member(id,"FMT_8_B",	0X9,	-1);
	add_enum_member(id,"FMT_8_8",	0XA,	-1);
	add_enum_member(id,"FMT_Cr_Y1_Cb_Y0",	0XB,	-1);
	add_enum_member(id,"FMT_Y1_Cr_Y0_Cb",	0XC,	-1);
	add_enum_member(id,"FMT_8_8_8_8_A",	0XE,	-1);
	add_enum_member(id,"FMT_4_4_4_4",	0XF,	-1);
	add_enum_member(id,"FMT_10_11_11",	0X10,	-1);
	add_enum_member(id,"FMT_11_11_10",	0X11,	-1);
	add_enum_member(id,"FMT_DXT1",	0X12,	-1);
	add_enum_member(id,"FMT_DXT2_3",	0X13,	-1);
	add_enum_member(id,"FMT_DXT4_5",	0X14,	-1);
	add_enum_member(id,"FMT_24_8",	0X16,	-1);
	add_enum_member(id,"FMT_24_8_FLOAT",	0X17,	-1);
	add_enum_member(id,"FMT_16",	0X18,	-1);
	add_enum_member(id,"FMT_16_16",	0X19,	-1);
	add_enum_member(id,"FMT_16_16_16_16",	0X1A,	-1);
	add_enum_member(id,"FMT_16_EXPAND",	0X1B,	-1);
	add_enum_member(id,"FMT_16_16_EXPAND",	0X1C,	-1);
	add_enum_member(id,"FMT_16_16_16_16_EXPAND",	0X1D,	-1);
	add_enum_member(id,"FMT_16_FLOAT",	0X1E,	-1);
	add_enum_member(id,"FMT_16_16_FLOAT",	0X1F,	-1);
	add_enum_member(id,"FMT_16_16_16_16_FLOAT",	0X20,	-1);
	add_enum_member(id,"FMT_32",	0X21,	-1);
	add_enum_member(id,"FMT_32_32",	0X22,	-1);
	add_enum_member(id,"FMT_32_32_32_32",	0X23,	-1);
	add_enum_member(id,"FMT_32_FLOAT",	0X24,	-1);
	add_enum_member(id,"FMT_32_32_FLOAT",	0X25,	-1);
	add_enum_member(id,"FMT_32_32_32_32_FLOAT",	0X26,	-1);
	add_enum_member(id,"FMT_32_AS_8",	0X27,	-1);
	add_enum_member(id,"FMT_32_AS_8_8",	0X28,	-1);
	add_enum_member(id,"FMT_16_MPEG",	0X29,	-1);
	add_enum_member(id,"FMT_16_16_MPEG",	0X2A,	-1);
	add_enum_member(id,"FMT_8_INTERLACED",	0X2B,	-1);
	add_enum_member(id,"FMT_32_AS_8_INTERLACED",	0X2C,	-1);
	add_enum_member(id,"FMT_32_AS_8_8_INTERLACED",	0X2D,	-1);
	add_enum_member(id,"FMT_16_INTERLACED",	0X2E,	-1);
	add_enum_member(id,"FMT_16_MPEG_INTERLACED",	0X2F,	-1);
	add_enum_member(id,"FMT_16_16_MPEG_INTERLACED",	0X30,	-1);
	add_enum_member(id,"FMT_DXN",	0X31,	-1);
	add_enum_member(id,"FMT_8_8_8_8_AS_16_16_16_16",	0X32,	-1);
	add_enum_member(id,"FMT_DXT1_AS_16_16_16_16",	0X33,	-1);
	add_enum_member(id,"FMT_DXT2_3_AS_16_16_16_16",	0X34,	-1);
	add_enum_member(id,"FMT_DXT4_5_AS_16_16_16_16",	0X35,	-1);
	add_enum_member(id,"FMT_2_10_10_10_AS_16_16_16_16",	0X36,	-1);
	add_enum_member(id,"FMT_10_11_11_AS_16_16_16_16",	0X37,	-1);
	add_enum_member(id,"FMT_11_11_10_AS_16_16_16_16",	0X38,	-1);
	add_enum_member(id,"FMT_32_32_32_FLOAT",	0X39,	-1);
	add_enum_member(id,"FMT_DXT3A",	0X3A,	-1);
	add_enum_member(id,"FMT_DXT5A",	0X3B,	-1);
	add_enum_member(id,"FMT_CTX1",	0X3C,	-1);
	add_enum_member(id,"FMT_DXT3A_AS_1_1_1_1",	0X3D,	-1);
	id = add_enum(-1,"ColorformatX",0x1100000);
	add_enum_member(id,"COLORX_8_8_8_8",	0,	-1);
	add_enum_member(id,"COLORX_8_8_8_8_GAMMA",	0X1,	-1);
	add_enum_member(id,"COLORX_2_10_10_10",	0X2,	-1);
	add_enum_member(id,"COLORX_2_10_10_10_FLOAT",	0X3,	-1);
	add_enum_member(id,"COLORX_16_16",	0X4,	-1);
	add_enum_member(id,"COLORX_16_16_16_16",	0X5,	-1);
	add_enum_member(id,"COLORX_16_16_FLOAT",	0X6,	-1);
	add_enum_member(id,"COLORX_16_16_16_16_FLOAT",	0X7,	-1);
	add_enum_member(id,"COLORX_2_10_10_10_AS_10_10_10_10",	0XA,	-1);
	add_enum_member(id,"COLORX_2_10_10_10_FLOAT_AS_16_16_16_16",	0XC,	-1);
	add_enum_member(id,"COLORX_32_FLOAT",	0XE,	-1);
	add_enum_member(id,"COLORX_32_32_FLOAT",	0XF,	-1);
	id = add_enum(-1,"XGRAPHICS::_E_COMPILED_PROGRAM_TYPE",0x1100000);
	add_enum_member(id,"E_CP_NON_REALTIME",	0,	-1);
	add_enum_member(id,"E_CP_NON_REALTIME_HOS",	0X1,	-1);
	add_enum_member(id,"E_CP_REALTIME",	0X2,	-1);
	id = add_enum(-1,"D3DXShader::Component",0x1100000);
	add_enum_member(id,"COMP_X",	0,	-1);
	add_enum_member(id,"COMP_R",	0,	-1);
	add_enum_member(id,"COMP_Y",	0X1,	-1);
	add_enum_member(id,"COMP_G",	0X1,	-1);
	add_enum_member(id,"COMP_Z",	0X2,	-1);
	add_enum_member(id,"COMP_B",	0X2,	-1);
	add_enum_member(id,"COMP_W",	0X3,	-1);
	add_enum_member(id,"COMP_A",	0X3,	-1);
	add_enum_member(id,"COMP_INVALID",	0X4,	-1);
	id = add_enum(-1,"D3DXShader::AttributeType",0x1100000);
	add_enum_member(id,"ATTR_INVALID",	0,	-1);
	add_enum_member(id,"ATTR_NO_EXPRESSION_OPTIMIZATIONS",	0X1,	-1);
	add_enum_member(id,"ATTR_ISOLATE",	0X2,	-1);
	add_enum_member(id,"ATTR_BRANCH",	0X3,	-1);
	add_enum_member(id,"ATTR_FLATTEN",	0X4,	-1);
	add_enum_member(id,"ATTR_PREDICATE",	0X5,	-1);
	add_enum_member(id,"ATTR_PREDICATE_BLOCK",	0X6,	-1);
	add_enum_member(id,"ATTR_LOOP",	0X7,	-1);
	add_enum_member(id,"ATTR_UNROLL",	0X8,	-1);
	add_enum_member(id,"ATTR_NOINLINE",	0X9,	-1);
	add_enum_member(id,"ATTR_UNUSED",	0XA,	-1);
	add_enum_member(id,"ATTR_MAXEXPORTS",	0XB,	-1);
	add_enum_member(id,"ATTR_MAXTEMPREG",	0XC,	-1);
	add_enum_member(id,"ATTR_SAMPREG",	0XD,	-1);
	add_enum_member(id,"ATTR_REDUCE_TEMP_REG_USAGE",	0XE,	-1);
	add_enum_member(id,"ATTR_OPTIMIZE_AUTOZ",	0XF,	-1);
	add_enum_member(id,"ATTR_REGISTER_GROUP",	0X10,	-1);
	add_enum_member(id,"ATTR_REMOVE_UNUSED_INPUTS",	0X11,	-1);
	id = add_enum(-1,"R400Tables::ModDestChannel",0x1100000);
	add_enum_member(id,"DEST_CHANNEL_NOMASK",	0,	-1);
	add_enum_member(id,"DEST_CHANNEL_MASK",	0X1,	-1);
	add_enum_member(id,"DEST_CHANNEL_ZERO",	0X2,	-1);
	add_enum_member(id,"DEST_CHANNEL_ONE",	0X3,	-1);
	add_enum_member(id,"DEST_CHANNEL_X",	0X4,	-1);
	add_enum_member(id,"DEST_CHANNEL_Y",	0X5,	-1);
	add_enum_member(id,"DEST_CHANNEL_Z",	0X6,	-1);
	add_enum_member(id,"DEST_CHANNEL_W",	0X7,	-1);
	add_enum_member(id,"LAST_DEST_CHANNEL",	0X8,	-1);
	id = add_enum(-1,"R400Tables::RelOp",0x1100000);
	add_enum_member(id,"EQ",	0,	-1);
	add_enum_member(id,"NE",	0X1,	-1);
	add_enum_member(id,"GT",	0X2,	-1);
	add_enum_member(id,"GE",	0X3,	-1);
	add_enum_member(id,"LT",	0X4,	-1);
	add_enum_member(id,"LE",	0X5,	-1);
	add_enum_member(id,"LAST_REL_OP",	0X6,	-1);
	id = add_enum(-1,"XGRAPHICS::ILRegTypeExt",0x1100000);
	add_enum_member(id,"IL_REGTYPE_MULTIPASS",	0X19,	-1);
	add_enum_member(id,"IL_REGTYPE_CONST_INDEX_X",	0X1A,	-1);
	add_enum_member(id,"IL_REGTYPE_CONST_INDEX_Y",	0X1B,	-1);
	add_enum_member(id,"IL_REGTYPE_CONST_INDEX_Z",	0X1C,	-1);
	add_enum_member(id,"IL_REGTYPE_CONST_INDEX_W",	0X1D,	-1);
	add_enum_member(id,"IL_REGTYPE_CONST_LOOP_INDEX",	0X1E,	-1);
	add_enum_member(id,"IL_REGTYPE_INPUT_LOOP_INDEX",	0X1F,	-1);
	add_enum_member(id,"IL_REGTYPE_OUTPUT_LOOP_INDEX",	0X20,	-1);
	add_enum_member(id,"IL_REGTYPE_EXT_LAST",	0X21,	-1);
	id = add_enum(-1,"TexelType",0x1100000);
	add_enum_member(id,"TEXEL_INTEGER",	0,	-1);
	add_enum_member(id,"TEXEL_FLOAT",	0X1,	-1);
	add_enum_member(id,"TEXEL_COMPRESSED",	0X2,	-1);
	add_enum_member(id,"TEXEL_MIXED",	0X3,	-1);
	id = add_enum(-1,"OpCode",0x1100000);
	add_enum_member(id,"OP_MOVE",	0,	-1);
	add_enum_member(id,"OP_LOADK",	0X1,	-1);
	add_enum_member(id,"OP_LOADBOOL",	0X2,	-1);
	add_enum_member(id,"OP_LOADNIL",	0X3,	-1);
	add_enum_member(id,"OP_GETUPVAL",	0X4,	-1);
	add_enum_member(id,"OP_GETGLOBAL",	0X5,	-1);
	add_enum_member(id,"OP_GETTABLE",	0X6,	-1);
	add_enum_member(id,"OP_SETGLOBAL",	0X7,	-1);
	add_enum_member(id,"OP_SETUPVAL",	0X8,	-1);
	add_enum_member(id,"OP_SETTABLE",	0X9,	-1);
	add_enum_member(id,"OP_NEWTABLE",	0XA,	-1);
	add_enum_member(id,"OP_SELF",	0XB,	-1);
	add_enum_member(id,"OP_ADD",	0XC,	-1);
	add_enum_member(id,"OP_SUB",	0XD,	-1);
	add_enum_member(id,"OP_MUL",	0XE,	-1);
	add_enum_member(id,"OP_DIV",	0XF,	-1);
	add_enum_member(id,"OP_POW",	0X10,	-1);
	add_enum_member(id,"OP_UNM",	0X11,	-1);
	add_enum_member(id,"OP_NOT",	0X12,	-1);
	add_enum_member(id,"OP_CONCAT",	0X13,	-1);
	add_enum_member(id,"OP_JMP",	0X14,	-1);
	add_enum_member(id,"OP_EQ",	0X15,	-1);
	add_enum_member(id,"OP_LT",	0X16,	-1);
	add_enum_member(id,"OP_LE",	0X17,	-1);
	add_enum_member(id,"OP_TEST",	0X18,	-1);
	add_enum_member(id,"OP_CALL",	0X19,	-1);
	add_enum_member(id,"OP_TAILCALL",	0X1A,	-1);
	add_enum_member(id,"OP_RETURN",	0X1B,	-1);
	add_enum_member(id,"OP_FORLOOP",	0X1C,	-1);
	add_enum_member(id,"OP_TFORLOOP",	0X1D,	-1);
	add_enum_member(id,"OP_TFORPREP",	0X1E,	-1);
	add_enum_member(id,"OP_SETLIST",	0X1F,	-1);
	add_enum_member(id,"OP_SETLISTO",	0X20,	-1);
	add_enum_member(id,"OP_CLOSE",	0X21,	-1);
	add_enum_member(id,"OP_CLOSURE",	0X22,	-1);
	id = add_enum(-1,"$D283E5A92EBEB600100C8EBC9C67A011",0x1100000);
	add_enum_member(id,"lkNormal",	0,	-1);
	add_enum_member(id,"lkPrealloc",	0X1,	-1);
	add_enum_member(id,"lkDeleted",	0X2,	-1);
	id = add_enum(-1,"_D3DMULTISAMPLE_TYPE",0x1100000);
	add_enum_member(id,"D3DMULTISAMPLE_NONE",	0,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_2_SAMPLES",	0X1,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_4_SAMPLES",	0X2,	-1);
	add_enum_member(id,"D3DMULTISAMPLE_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"_D3DSWAPEFFECT",0x1100000);
	add_enum_member(id,"D3DSWAPEFFECT_DISCARD",	0X1,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_FLIP",	0X2,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_COPY",	0X3,	-1);
	add_enum_member(id,"D3DSWAPEFFECT_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"_D3DCOLORSPACE",0x1100000);
	add_enum_member(id,"D3DCOLORSPACE_RGB",	0,	-1);
	add_enum_member(id,"D3DCOLORSPACE_YCbCr601",	0X1,	-1);
	add_enum_member(id,"D3DCOLORSPACE_YCbCr709",	0X2,	-1);
	add_enum_member(id,"D3DCOLORSPACE_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"XGRAPHICS::AddrArray",0x1100000);
	add_enum_member(id,"ADDR_INVALID",	0,	-1);
	add_enum_member(id,"ADDR_1D_LINEAR",	0X1,	-1);
	add_enum_member(id,"ADDR_2D_LINEAR",	0X2,	-1);
	add_enum_member(id,"ADDR_2D_TILED0",	0X4,	-1);
	add_enum_member(id,"ADDR_2D_TILED1",	0X5,	-1);
	add_enum_member(id,"ADDR_2D_TILED2",	0X6,	-1);
	add_enum_member(id,"ADDR_2D_TILED3",	0X7,	-1);
	add_enum_member(id,"ADDR_2D_COLOR0",	0X8,	-1);
	add_enum_member(id,"ADDR_2D_COLOR1",	0X9,	-1);
	add_enum_member(id,"ADDR_2D_COLOR2",	0XA,	-1);
	add_enum_member(id,"ADDR_2D_COLOR3",	0XB,	-1);
	add_enum_member(id,"ADDR_2D_DEPTH0",	0XC,	-1);
	add_enum_member(id,"ADDR_2D_DEPTH1",	0XD,	-1);
	add_enum_member(id,"ADDR_2D_DEPTH2",	0XE,	-1);
	add_enum_member(id,"ADDR_2D_DEPTH3",	0XF,	-1);
	add_enum_member(id,"ADDR_2D_MASKS0",	0X10,	-1);
	add_enum_member(id,"ADDR_2D_MASKS1",	0X11,	-1);
	add_enum_member(id,"ADDR_2D_MASKS2",	0X12,	-1);
	add_enum_member(id,"ADDR_2D_MASKS3",	0X13,	-1);
	add_enum_member(id,"ADDR_2D_EDRAMC",	0X14,	-1);
	add_enum_member(id,"ADDR_2D_EDRAMZ",	0X15,	-1);
	add_enum_member(id,"ADDR_3D_LINEAR",	0X16,	-1);
	add_enum_member(id,"ADDR_3D_TILED",	0X17,	-1);
	add_enum_member(id,"ADDR_3D_SLICE0",	0X18,	-1);
	add_enum_member(id,"ADDR_3D_SLICE1",	0X19,	-1);
	add_enum_member(id,"ADDR_3D_SLICE2",	0X1A,	-1);
	add_enum_member(id,"ADDR_3D_SLICE3",	0X1B,	-1);
	add_enum_member(id,"ADDR_3D_SLICE4",	0X1C,	-1);
	add_enum_member(id,"ADDR_3D_SLICE5",	0X1D,	-1);
	add_enum_member(id,"ADDR_3D_SLICE6",	0X1E,	-1);
	add_enum_member(id,"ADDR_3D_SLICE7",	0X1F,	-1);
	add_enum_member(id,"ADDR_3D_STACK0",	0X20,	-1);
	add_enum_member(id,"ADDR_3D_STACK1",	0X21,	-1);
	add_enum_member(id,"ADDR_3D_STACK2",	0X22,	-1);
	add_enum_member(id,"ADDR_3D_STACK3",	0X23,	-1);
	id = add_enum(-1,"R400Tables::RegType",0x1100000);
	add_enum_member(id,"REGTYPE_TEMP",	0,	-1);
	add_enum_member(id,"REGTYPE_CONST",	0X1,	-1);
	add_enum_member(id,"REGTYPE_CONST_BOOL",	0X2,	-1);
	add_enum_member(id,"REGTYPE_CONST_INT",	0X3,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_INTERP",	0X4,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_POS",	0X5,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_SPRITE",	0X6,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_Z",	0X7,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_COLOR",	0X8,	-1);
	add_enum_member(id,"REGTYPE_EXPORT_MULTIPASS",	0X9,	-1);
	add_enum_member(id,"REGTYPE_FETCH_CONST",	0XA,	-1);
	add_enum_member(id,"REGTYPE_CONST_INTERNAL",	0XB,	-1);
	add_enum_member(id,"REGTYPE_BARYCENTRIC_COORD",	0XC,	-1);
	add_enum_member(id,"REGTYPE_PRIMITIVE_INDEX",	0XD,	-1);
	add_enum_member(id,"REGTYPE_QUAD_INDEX",	0XE,	-1);
	add_enum_member(id,"REGTYPE_PHYSICAL",	0XF,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_AUTOGEN_INDEX_PS",	0X10,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_AUTOGEN_INDEX_VS",	0X11,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_PARAM",	0X12,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_INTERP",	0X13,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_TEXCOORD",	0X14,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_COLOR0",	0X15,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_COLOR1",	0X16,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_FOG",	0X17,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_SINTERP",	0X18,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_VERTEX",	0X19,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_FACE",	0X1A,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_SPRITECOORD",	0X1B,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_LOD",	0X1C,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_GRADIENT",	0X1D,	-1);
	add_enum_member(id,"REGTYPE_VERTEX_INDEX",	0X1E,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_NTUPLE",	0X1F,	-1);
	add_enum_member(id,"REGTYPE_PSEUDO_WINCOORD",	0X20,	-1);
	add_enum_member(id,"REGTYPE_PSIN_VSOUT",	0X21,	-1);
	add_enum_member(id,"REGTYPE_ADDR",	0X22,	-1);
	add_enum_member(id,"REGTYPE_CONST_INDEX_X",	0X23,	-1);
	add_enum_member(id,"REGTYPE_CONST_INDEX_Y",	0X24,	-1);
	add_enum_member(id,"REGTYPE_CONST_INDEX_Z",	0X25,	-1);
	add_enum_member(id,"REGTYPE_CONST_INDEX_W",	0X26,	-1);
	add_enum_member(id,"REGTYPE_LOOP_CONTROL",	0X27,	-1);
	add_enum_member(id,"REGTYPE_CONST_LOOP_INDEX",	0X28,	-1);
	add_enum_member(id,"REGTYPE_INPUT_LOOP_INDEX",	0X29,	-1);
	add_enum_member(id,"REGTYPE_OUTPUT_LOOP_INDEX",	0X2A,	-1);
	add_enum_member(id,"REGTYPE_MEMEXPORT_ADDRESS",	0X2B,	-1);
	add_enum_member(id,"REGTYPE_MEMEXPORT_SLOT",	0X2C,	-1);
	add_enum_member(id,"REGTYPE_YIELD_IC_RESOURCE",	0X2D,	-1);
	add_enum_member(id,"REGTYPE_YIELD_P_RESOURCE",	0X2E,	-1);
	add_enum_member(id,"REGTYPE_YIELD_M_RESOURCE",	0X2F,	-1);
	add_enum_member(id,"LAST_REGTYPE",	0X30,	-1);
	id = add_enum(-1,"_PixDataOpcodesType",0x1100000);
	add_enum_member(id,"PIXOP_Clear",	0,	-1);
	add_enum_member(id,"PIXOP_DrawVertUP",	0X2,	-1);
	add_enum_member(id,"PIXOP_DrawIVertUP",	0X4,	-1);
	add_enum_member(id,"PIXOP_Swap",	0X5,	-1);
	add_enum_member(id,"PIXOP_VBlank",	0X6,	-1);
	add_enum_member(id,"PIXOP_VBlankMissed",	0X7,	-1);
	add_enum_member(id,"PIXOP_VBlankSwap",	0X8,	-1);
	add_enum_member(id,"PIXOP_ActiveResourceLock",	0X9,	-1);
	add_enum_member(id,"PIXOP_ResourceLock",	0XA,	-1);
	add_enum_member(id,"PIXOP_PrimaryOverrun",	0XB,	-1);
	add_enum_member(id,"PIXOP_SecondaryOverrun",	0XC,	-1);
	add_enum_member(id,"PIXOP_BlockOnTime",	0XD,	-1);
	add_enum_member(id,"PIXOP_BlockUntilIdle",	0XE,	-1);
	add_enum_member(id,"PIXOP_SwapThrottle",	0XF,	-1);
	add_enum_member(id,"PIXOP_LockVertex",	0X10,	-1);
	add_enum_member(id,"PIXOP_LockIndex",	0X11,	-1);
	add_enum_member(id,"PIXOP_LockTexture",	0X12,	-1);
	add_enum_member(id,"PIXOP_LockSurface",	0X13,	-1);
	add_enum_member(id,"PIXOP_UserEvent",	0X14,	-1);
	add_enum_member(id,"PIXOP_UserMarker",	0X15,	-1);
	add_enum_member(id,"PIXOP_UserString",	0X16,	-1);
	add_enum_member(id,"PIXOP_Last",	0X18,	-1);
	add_enum_member(id,"PIXOP_QPCFreq",	0X19,	-1);
	add_enum_member(id,"PIXOP_SingleR300",	0X1A,	-1);
	add_enum_member(id,"PIXOP_CModel",	0X1B,	-1);
	add_enum_member(id,"PIXOP_CModelFrame",	0X1C,	-1);
	add_enum_member(id,"PIXOP_CModelStatsColumn",	0X1D,	-1);
	add_enum_member(id,"PIXOP_CModelImage",	0X1E,	-1);
	add_enum_member(id,"PIXOP_CModelCompressedImage",	0X1F,	-1);
	add_enum_member(id,"PIXOP_CModelData",	0X20,	-1);
	add_enum_member(id,"PIXOP_CModelRenderData",	0X22,	-1);
	add_enum_member(id,"PIXOP_EmulatorImageNative",	0X23,	-1);
	add_enum_member(id,"PIXOP_EmulatorCompressedImageNative",	0X24,	-1);
	add_enum_member(id,"PIXOP_XPS",	0X25,	-1);
	add_enum_member(id,"PIXOP_BlockOnResourceRelease",	0X26,	-1);
	add_enum_member(id,"PIXOP_BlockOnVertexBufferRelease",	0X27,	-1);
	add_enum_member(id,"PIXOP_BlockOnIndexBufferRelease",	0X28,	-1);
	add_enum_member(id,"PIXOP_BlockOnTextureRelease",	0X29,	-1);
	add_enum_member(id,"PIXOP_BlockOnSurfaceRelease",	0X2A,	-1);
	add_enum_member(id,"PIXOP_BlockOnVertexShaderRelease",	0X2B,	-1);
	add_enum_member(id,"PIXOP_BlockOnPixelShaderRelease",	0X2C,	-1);
	add_enum_member(id,"PIXOP_BlockOnResourceLock",	0X2D,	-1);
	add_enum_member(id,"PIXOP_BlockOnVertexBufferLock",	0X2E,	-1);
	add_enum_member(id,"PIXOP_BlockOnIndexBufferLock",	0X2F,	-1);
	add_enum_member(id,"PIXOP_BlockOnTextureLock",	0X30,	-1);
	add_enum_member(id,"PIXOP_BlockOnResourceBusy",	0X31,	-1);
	add_enum_member(id,"PIXOP_SysMon",	0X32,	-1);
	add_enum_member(id,"PIXOP_LockVolume",	0X33,	-1);
	add_enum_member(id,"PIXOP_GPU",	0X34,	-1);
	add_enum_member(id,"PIXOP_Kickoff",	0X38,	-1);
	add_enum_member(id,"PIXOP_Synchronize",	0X39,	-1);
	add_enum_member(id,"PIXOP_PIXOverhead",	0X3D,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage0",	0X3E,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage1",	0X3F,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage2",	0X40,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage3",	0X41,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage4",	0X42,	-1);
	add_enum_member(id,"PIXOP_PIXThreadPage5",	0X43,	-1);
	add_enum_member(id,"PIXOP_PIXThreadedTiming",	0X44,	-1);
	add_enum_member(id,"PIXOP_ContextSwap",	0X45,	-1);
	add_enum_member(id,"PIXOP_InitialThreads",	0X46,	-1);
	add_enum_member(id,"PIXOP_Truncated",	0X48,	-1);
	add_enum_member(id,"PIXOP_ThreadName",	0X4A,	-1);
	add_enum_member(id,"PIXOP_BatchCommands",	0X4B,	-1);
	add_enum_member(id,"PIXOP_TimeStamp",	0X4C,	-1);
	add_enum_member(id,"PIXOP_ImageBufferHeader",	0X4D,	-1);
	add_enum_member(id,"PIXOP_ImageHeaderName",	0X4E,	-1);
	add_enum_member(id,"PIXOP_EDRAMClear",	0X4F,	-1);
	add_enum_member(id,"PIXOP_SetRenderTarget",	0X51,	-1);
	add_enum_member(id,"PIXOP_BeginTiling",	0X52,	-1);
	add_enum_member(id,"PIXOP_EndTiling",	0X53,	-1);
	add_enum_member(id,"PIXOP_BeginZPass",	0X54,	-1);
	add_enum_member(id,"PIXOP_EndZPass",	0X55,	-1);
	add_enum_member(id,"PIXOP_TileCount",	0X56,	-1);
	add_enum_member(id,"PIXOP_BlockOnCommandBufferRelease",	0X57,	-1);
	add_enum_member(id,"PIXOP_BlockOnCommandBufferLock",	0X58,	-1);
	add_enum_member(id,"PIXOP_BlockOnConstantBufferRelease",	0X59,	-1);
	add_enum_member(id,"PIXOP_BlockOnConstantBufferLock",	0X5A,	-1);
	add_enum_member(id,"PIXOP_LockConstantBuffer",	0X5B,	-1);
	add_enum_member(id,"PIXOP_OnePassTileCount",	0X5C,	-1);
	add_enum_member(id,"PIXOP_DrawVert",	0X100001,	-1);
	add_enum_member(id,"PIXOP_DrawIVert",	0X100003,	-1);
	add_enum_member(id,"PIXOP_Resolve",	0X100017,	-1);
	add_enum_member(id,"PIXOP_ClearF",	0X100021,	-1);
	add_enum_member(id,"PIXOP_DrawTessVertices",	0X100035,	-1);
	add_enum_member(id,"PIXOP_DrawITessVertices",	0X100036,	-1);
	add_enum_member(id,"PIXOP_GPUSync",	0X100037,	-1);
	add_enum_member(id,"PIXOP_BeginVertices",	0X10003A,	-1);
	add_enum_member(id,"PIXOP_SyncToVBlank",	0X10003B,	-1);
	add_enum_member(id,"PIXOP_GPUBegin",	0X10003C,	-1);
	add_enum_member(id,"PIXOP_XAMCommandBuffer",	0X100047,	-1);
	add_enum_member(id,"PIXOP_BeginIVertices",	0X100049,	-1);
	add_enum_member(id,"PIXOP_InsertCallback",	0X100050,	-1);
	id = add_enum(-1,"XGRAPHICS::_E_SSM_DEBUGLEVEL",0x1100000);
	add_enum_member(id,"E_SSM_ASSERTION",	0,	-1);
	add_enum_member(id,"E_SSM_GENERAL_ENTRY_EXIT",	0X1,	-1);
	add_enum_member(id,"E_SSM_INFO_MESSAGE",	0X2,	-1);
	add_enum_member(id,"E_SSM_ERROR_MESSAGE",	0X3,	-1);
	add_enum_member(id,"E_SSM_DEBUG1",	0X4,	-1);
	add_enum_member(id,"E_SSM_DEBUG2",	0X5,	-1);
	add_enum_member(id,"E_SSM_STATE_DATA",	0X6,	-1);
	add_enum_member(id,"E_SSM_PIXELSHADER_IL",	0X7,	-1);
	add_enum_member(id,"E_SSM_VERTEXSHADER_IL",	0X8,	-1);
	add_enum_member(id,"E_SSM_XLT_DATA",	0X9,	-1);
	add_enum_member(id,"E_SSM_POSTPROCESSOR_DATA",	0XA,	-1);
	add_enum_member(id,"E_SSM_MEMTRACK",	0XB,	-1);
	add_enum_member(id,"E_SSM_SHADER_RECYCLER",	0XC,	-1);
	add_enum_member(id,"E_SSM_STATE_CACHE",	0XD,	-1);
	add_enum_member(id,"E_SSM_COMPILER_DATA",	0XE,	-1);
	add_enum_member(id,"E_SSM_DEBUGLEVEL_TOO_BIG",	0XF,	-1);
	id = add_enum(-1,"XGRAPHICS::E_SSM_DEBUG_DEST",0x1100000);
	add_enum_member(id,"E_NO_OUTPUT",	0,	-1);
	add_enum_member(id,"E_TO_SCREEN",	0X1,	-1);
	add_enum_member(id,"E_TO_FILE",	0X2,	-1);
	id = add_enum(-1,"R400Tables::Op",0x1100000);
	add_enum_member(id,"NOP",	0,	-1);
	add_enum_member(id,"EXECUTE",	0X1,	-1);
	add_enum_member(id,"EXECUTE_END",	0X2,	-1);
	add_enum_member(id,"COND_EXECUTE",	0X3,	-1);
	add_enum_member(id,"COND_EXECUTE_END",	0X4,	-1);
	add_enum_member(id,"COND_PRED_EXECUTE",	0X5,	-1);
	add_enum_member(id,"COND_PRED_EXECUTE_END",	0X6,	-1);
	add_enum_member(id,"LOOP_START",	0X7,	-1);
	add_enum_member(id,"LOOP_END",	0X8,	-1);
	add_enum_member(id,"COND_CALL",	0X9,	-1);
	add_enum_member(id,"RETURN",	0XA,	-1);
	add_enum_member(id,"COND_JMP",	0XB,	-1);
	add_enum_member(id,"ALLOCATE",	0XC,	-1);
	add_enum_member(id,"COND_EXECUTE_PRED_CLEAN",	0XD,	-1);
	add_enum_member(id,"COND_EXECUTE_PRED_CLEAN_END",	0XE,	-1);
	add_enum_member(id,"MARK_VS_FETCH_DONE",	0XF,	-1);
	id = add_enum(-1,"XGRAPHICS::ILImportComponent",0x1100000);
	add_enum_member(id,"IL_IMPORTSEL_UNUSED",	0,	-1);
	add_enum_member(id,"IL_IMPORTSEL_DEFAULT0",	0X1,	-1);
	add_enum_member(id,"IL_IMPORTSEL_DEFAULT1",	0X2,	-1);
	add_enum_member(id,"IL_IMPORTSEL_UNDEFINED",	0X3,	-1);
	add_enum_member(id,"IL_IMPORTSEL_LAST",	0X4,	-1);
	id = add_enum(-1,"XGRAPHICS::ILOpCode",0x1100000);
	add_enum_member(id,"IL_OP_UNKNOWN",	0,	-1);
	add_enum_member(id,"IL_OP_ABS",	0X1,	-1);
	add_enum_member(id,"IL_OP_ACOS",	0X2,	-1);
	add_enum_member(id,"IL_OP_ADD",	0X3,	-1);
	add_enum_member(id,"IL_OP_ASIN",	0X4,	-1);
	add_enum_member(id,"IL_OP_ATAN",	0X5,	-1);
	add_enum_member(id,"IL_OP_BREAK",	0X6,	-1);
	add_enum_member(id,"IL_OP_BREAKC",	0X7,	-1);
	add_enum_member(id,"IL_OP_CALL",	0X8,	-1);
	add_enum_member(id,"IL_OP_CALLNZ",	0X9,	-1);
	add_enum_member(id,"IL_OP_CLAMP",	0XA,	-1);
	add_enum_member(id,"IL_OP_CLG",	0XB,	-1);
	add_enum_member(id,"IL_OP_CMOV",	0XC,	-1);
	add_enum_member(id,"IL_OP_CMP",	0XD,	-1);
	add_enum_member(id,"IL_OP_COLORCLAMP",	0XE,	-1);
	add_enum_member(id,"IL_OP_COMMENT",	0XF,	-1);
	add_enum_member(id,"IL_OP_CONTINUE",	0X10,	-1);
	add_enum_member(id,"IL_OP_CONTINUEC",	0X11,	-1);
	add_enum_member(id,"IL_OP_COS",	0X12,	-1);
	add_enum_member(id,"IL_OP_CRS",	0X13,	-1);
	add_enum_member(id,"IL_OP_DCLARRAY",	0X14,	-1);
	add_enum_member(id,"IL_OP_DCLDEF",	0X15,	-1);
	add_enum_member(id,"IL_OP_DCLPI",	0X16,	-1);
	add_enum_member(id,"IL_OP_DCLPIN",	0X17,	-1);
	add_enum_member(id,"IL_OP_DCLPP",	0X18,	-1);
	add_enum_member(id,"IL_OP_DCLPT",	0X19,	-1);
	add_enum_member(id,"IL_OP_DCLV",	0X1A,	-1);
	add_enum_member(id,"IL_OP_DCLVOUT",	0X1B,	-1);
	add_enum_member(id,"IL_OP_DEF",	0X1C,	-1);
	add_enum_member(id,"IL_OP_DEFB",	0X1D,	-1);
	add_enum_member(id,"IL_OP_DET",	0X1E,	-1);
	add_enum_member(id,"IL_OP_DIST",	0X1F,	-1);
	add_enum_member(id,"IL_OP_DIV",	0X20,	-1);
	add_enum_member(id,"IL_OP_DP2ADD",	0X21,	-1);
	add_enum_member(id,"IL_OP_DP3",	0X22,	-1);
	add_enum_member(id,"IL_OP_DP4",	0X23,	-1);
	add_enum_member(id,"IL_OP_DST",	0X24,	-1);
	add_enum_member(id,"IL_OP_DSX",	0X25,	-1);
	add_enum_member(id,"IL_OP_DSY",	0X26,	-1);
	add_enum_member(id,"IL_OP_ELSE",	0X27,	-1);
	add_enum_member(id,"IL_OP_END",	0X28,	-1);
	add_enum_member(id,"IL_OP_ENDIF",	0X29,	-1);
	add_enum_member(id,"IL_OP_ENDLOOP",	0X2A,	-1);
	add_enum_member(id,"IL_OP_ENDMAIN",	0X2B,	-1);
	add_enum_member(id,"IL_OP_EXN",	0X2C,	-1);
	add_enum_member(id,"IL_OP_EXP",	0X2D,	-1);
	add_enum_member(id,"IL_OP_EXPP",	0X2E,	-1);
	add_enum_member(id,"IL_OP_FACEFORWARD",	0X2F,	-1);
	add_enum_member(id,"IL_OP_FLR",	0X30,	-1);
	add_enum_member(id,"IL_OP_FRC",	0X31,	-1);
	add_enum_member(id,"IL_OP_FUNC",	0X32,	-1);
	add_enum_member(id,"IL_OP_FWIDTH",	0X33,	-1);
	add_enum_member(id,"IL_OP_IFC",	0X34,	-1);
	add_enum_member(id,"IL_OP_IFNZ",	0X35,	-1);
	add_enum_member(id,"IL_OP_INITV",	0X36,	-1);
	add_enum_member(id,"IL_OP_KILL",	0X37,	-1);
	add_enum_member(id,"IL_OP_LEN",	0X38,	-1);
	add_enum_member(id,"IL_OP_LIT",	0X39,	-1);
	add_enum_member(id,"IL_OP_LN",	0X3A,	-1);
	add_enum_member(id,"IL_OP_LOD",	0X3B,	-1);
	add_enum_member(id,"IL_OP_LOG",	0X3C,	-1);
	add_enum_member(id,"IL_OP_LOGP",	0X3D,	-1);
	add_enum_member(id,"IL_OP_LOOP",	0X3E,	-1);
	add_enum_member(id,"IL_OP_LRP",	0X3F,	-1);
	add_enum_member(id,"IL_OP_MAD",	0X40,	-1);
	add_enum_member(id,"IL_OP_MAX",	0X41,	-1);
	add_enum_member(id,"IL_OP_MEMEXPORT",	0X42,	-1);
	add_enum_member(id,"IL_OP_MEMIMPORT",	0X43,	-1);
	add_enum_member(id,"IL_OP_MIN",	0X44,	-1);
	add_enum_member(id,"IL_OP_MMUL",	0X45,	-1);
	add_enum_member(id,"IL_OP_MOD",	0X46,	-1);
	add_enum_member(id,"IL_OP_MOV",	0X47,	-1);
	add_enum_member(id,"IL_OP_MOVA",	0X48,	-1);
	add_enum_member(id,"IL_OP_MUL",	0X49,	-1);
	add_enum_member(id,"IL_OP_NOISE",	0X4A,	-1);
	add_enum_member(id,"IL_OP_NOP",	0X4B,	-1);
	add_enum_member(id,"IL_OP_NRM",	0X4C,	-1);
	add_enum_member(id,"IL_OP_PIREDUCE",	0X4D,	-1);
	add_enum_member(id,"IL_OP_POW",	0X4E,	-1);
	add_enum_member(id,"IL_OP_PRECOMP",	0X4F,	-1);
	add_enum_member(id,"IL_OP_PROJECT",	0X50,	-1);
	add_enum_member(id,"IL_OP_RCP",	0X51,	-1);
	add_enum_member(id,"IL_OP_REFLECT",	0X52,	-1);
	add_enum_member(id,"IL_OP_RET",	0X53,	-1);
	add_enum_member(id,"IL_OP_RND",	0X54,	-1);
	add_enum_member(id,"IL_OP_RSQ",	0X55,	-1);
	add_enum_member(id,"IL_OP_SET",	0X56,	-1);
	add_enum_member(id,"IL_OP_SGN",	0X57,	-1);
	add_enum_member(id,"IL_OP_SIN",	0X58,	-1);
	add_enum_member(id,"IL_OP_SINCOS",	0X59,	-1);
	add_enum_member(id,"IL_OP_SQRT",	0X5A,	-1);
	add_enum_member(id,"IL_OP_SUB",	0X5B,	-1);
	add_enum_member(id,"IL_OP_TAN",	0X5C,	-1);
	add_enum_member(id,"IL_OP_TEXLD",	0X5D,	-1);
	add_enum_member(id,"IL_OP_TEXLDB",	0X5E,	-1);
	add_enum_member(id,"IL_OP_TEXLDD",	0X5F,	-1);
	add_enum_member(id,"IL_OP_TEXLDMS",	0X60,	-1);
	add_enum_member(id,"IL_OP_TEXWEIGHT",	0X61,	-1);
	add_enum_member(id,"IL_OP_TRANSPOSE",	0X62,	-1);
	add_enum_member(id,"IL_OP_TRC",	0X63,	-1);
	add_enum_member(id,"IL_OP_LAST",	0X64,	-1);
	id = add_enum(-1,"_D3DXPARAMETER_TYPE",0x1100000);
	add_enum_member(id,"D3DXPT_VOID",	0,	-1);
	add_enum_member(id,"D3DXPT_BOOL",	0X1,	-1);
	add_enum_member(id,"D3DXPT_INT",	0X2,	-1);
	add_enum_member(id,"D3DXPT_FLOAT",	0X3,	-1);
	add_enum_member(id,"D3DXPT_STRING",	0X4,	-1);
	add_enum_member(id,"D3DXPT_TEXTURE",	0X5,	-1);
	add_enum_member(id,"D3DXPT_TEXTURE1D",	0X6,	-1);
	add_enum_member(id,"D3DXPT_TEXTURE2D",	0X7,	-1);
	add_enum_member(id,"D3DXPT_TEXTURE3D",	0X8,	-1);
	add_enum_member(id,"D3DXPT_TEXTURECUBE",	0X9,	-1);
	add_enum_member(id,"D3DXPT_SAMPLER",	0XA,	-1);
	add_enum_member(id,"D3DXPT_SAMPLER1D",	0XB,	-1);
	add_enum_member(id,"D3DXPT_SAMPLER2D",	0XC,	-1);
	add_enum_member(id,"D3DXPT_SAMPLER3D",	0XD,	-1);
	add_enum_member(id,"D3DXPT_SAMPLERCUBE",	0XE,	-1);
	add_enum_member(id,"D3DXPT_PIXELSHADER",	0XF,	-1);
	add_enum_member(id,"D3DXPT_VERTEXSHADER",	0X10,	-1);
	add_enum_member(id,"D3DXPT_PIXELFRAGMENT",	0X11,	-1);
	add_enum_member(id,"D3DXPT_VERTEXFRAGMENT",	0X12,	-1);
	add_enum_member(id,"D3DXPT_FORCE_DWORD",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"_D3DDEVTYPE",0x1100000);
	add_enum_member(id,"D3DDEVTYPE_HAL",	0X1,	-1);
	add_enum_member(id,"D3DDEVTYPE_COMMAND_BUFFER",	0X2,	-1);
	add_enum_member(id,"D3DDEVTYPE_FORCE_DWORD",	0X7FFFFFFF,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("XGRAPHICS::SwizzleOrMaskInfo");
	SetType(get_member_id(id, 0x0), "XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>");
	SetType(get_member_id(id, 0x1), "XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>");
	SetType(get_member_id(id, 0x2), "unsigned int");
	SetType(get_member_id(id, 0x3), "unsigned __int8[4]");
	id = get_struc_id("XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	id = get_struc_id("XGRAPHICS::expansion_token");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x1), "float");
	id = get_struc_id("_XMMATRIX");
	SetType(get_member_id(id, 0x0), "$C5674FA6E936604C8D0348C8574C7D4B");
	id = get_struc_id("$C5674FA6E936604C8D0348C8574C7D4B");
	SetType(get_member_id(id, 0x0), "__vector4[4]");
	SetType(get_member_id(id, 0x1), "$40942CBCB8F0A1CDBC81269929B28324");
	SetType(get_member_id(id, 0x2), "float[4][4]");
	id = get_struc_id("__vector4");
	SetType(get_member_id(id, 0x0), "$8E5A9F1BC9F6778EEF541196ACEE5BBE");
	id = get_struc_id("$8E5A9F1BC9F6778EEF541196ACEE5BBE");
	SetType(get_member_id(id, 0x0), "$91D1B2149FAC90180ECB9AC277F76009");
	SetType(get_member_id(id, 0x1), "float[4]");
	SetType(get_member_id(id, 0x2), "unsigned int[4]");
	id = get_struc_id("$91D1B2149FAC90180ECB9AC277F76009");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("$40942CBCB8F0A1CDBC81269929B28324");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "float");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	id = get_struc_id("Xui::SimplePolygonTriangulator::Point");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	id = get_struc_id("XUIElementPropVal");
	SetType(get_member_id(id, 0x0), "XUI_ELEMENT_PROPERTY_TYPE");
	SetType(get_member_id(id, 0x4), "$E8BD8723B7223D62283B5C78BA618057");
	id = get_struc_id("$E8BD8723B7223D62283B5C78BA618057");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x1), "int");
	SetType(get_member_id(id, 0x2), "unsigned int");
	SetType(get_member_id(id, 0x3), "float");
	SetType(get_member_id(id, 0x4), "wchar_t *");
	SetType(get_member_id(id, 0x5), "_D3DVECTOR");
	SetType(get_member_id(id, 0x6), "XUIQuaternion");
	SetType(get_member_id(id, 0x7), "IXUIPropObj *");
	SetType(get_member_id(id, 0x8), "XUIElementPropVal::<unnamed_tag>::<unnamed_tag>");
	id = get_struc_id("_D3DVECTOR");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	id = get_struc_id("XUIQuaternion");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("XUIElementPropVal::<unnamed_tag>::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "XUICustomPropHandler *");
	id = get_struc_id("Xui::CXuiStringMap<TypefaceDescriptor *>");
	SetType(get_member_id(id, 0x0), "Xui::CXuiSimpleMap<Xui::CXuiString,TypefaceDescriptor *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,TypefaceDescriptor *> >");
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,TypefaceDescriptor *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,TypefaceDescriptor *> >");
	SetType(get_member_id(id, 0x0), "Xui::CXuiString *");
	SetType(get_member_id(id, 0x4), "TypefaceDescriptor **");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("Xui::XUIVisualFallback");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "const wchar_t *");
	SetType(get_member_id(id, 0x8), "const wchar_t *");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("Xui::CXuiStringMap<Xui::_XuiVisualEntry>");
	SetType(get_member_id(id, 0x0), "Xui::CXuiSimpleMap<Xui::CXuiString,Xui::_XuiVisualEntry,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::_XuiVisualEntry> >");
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::_XuiVisualEntry,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::_XuiVisualEntry> >");
	SetType(get_member_id(id, 0x0), "Xui::CXuiString *");
	SetType(get_member_id(id, 0x4), "Xui::_XuiVisualEntry *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("Xui::CXuiStringMap<Xui::VisualData *>");
	SetType(get_member_id(id, 0x0), "Xui::CXuiSimpleMap<Xui::CXuiString,Xui::VisualData *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::VisualData *> >");
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::VisualData *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::VisualData *> >");
	SetType(get_member_id(id, 0x0), "Xui::CXuiString *");
	SetType(get_member_id(id, 0x4), "Xui::VisualData **");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("Xui::GdipFontRenderer");
	SetType(get_member_id(id, 0x0), "IXuiFontRenderer");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "Graphics *");
	SetType(get_member_id(id, 0x18), "Bitmap *");
	SetType(get_member_id(id, 0x1C), "Xui::GdipFont *");
	id = get_struc_id("IXuiFontRenderer");
	SetType(get_member_id(id, 0x0), "IXuiFontRenderer_vtbl *");
	id = get_struc_id("Xui::GetBreakInfo::__l2::BreakInfo");
	SetType(get_member_id(id, 0x0), "wchar_t");
	SetType(get_member_id(id, 0x2), "bool");
	SetType(get_member_id(id, 0x3), "bool");
	id = get_struc_id("Xui::CXuiStringHashTable<void *>");
	SetType(get_member_id(id, 0x0), "Xui::CXuiStringHashTable<void *>::Node *[27]");
	id = get_struc_id("XUIElementPropDef");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "const wchar_t *");
	SetType(get_member_id(id, 0x14), "XUI_ELEMENT_PROPERTY_TYPE");
	SetType(get_member_id(id, 0x18), "const XUIElementPropVal *");
	SetType(get_member_id(id, 0x1C), "XUICustomPropHandler *");
	SetType(get_member_id(id, 0x20), "HRESULT (__cdecl *)(unsigned int, void *, XUIElementPropVal *)");
	SetType(get_member_id(id, 0x24), "HRESULT (__cdecl *)(unsigned int, void *, const XUIElementPropVal *)");
	SetType(get_member_id(id, 0x28), "const XUIElementPropDef *(__cdecl *)(unsigned int *)");
	SetType(get_member_id(id, 0x2C), "HRESULT (__cdecl *)(void *, unsigned int *)");
	id = get_struc_id("std::map<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC>>>,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC>>> > >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC>>>,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC>>> > >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	id = get_struc_id("std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0>");
	id = get_struc_id("std::less<Sonicteam::Player::State::IMachine *>");
	id = get_struc_id("std::binary_function<Sonicteam::Player::State::IMachine *,Sonicteam::Player::State::IMachine *,bool>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >");
	id = get_struc_id("std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >");
	id = get_struc_id("boost::arg<1>");
	id = get_struc_id("Sonicteam::Player::Array<char const *>");
	SetType(get_member_id(id, 0x0), "const char **");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("Sonicteam::Player::CharacterStateAnimationTableStruct");
	SetType(get_member_id(id, 0x0), "Sonicteam::Player::Array<char const *>");
	SetType(get_member_id(id, 0x8), "Sonicteam::Player::AIMArray");
	SetType(get_member_id(id, 0x14), "Sonicteam::Player::Array<char const *>");
	SetType(get_member_id(id, 0x1C), "Sonicteam::Player::Array<Sonicteam::Player::UACSATIndexTable>");
	id = get_struc_id("Sonicteam::Player::AIMArray");
	SetType(get_member_id(id, 0x0), "Sonicteam::Player::AnimIDMap *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("Sonicteam::Player::Array<Sonicteam::Player::UACSATIndexTable>");
	SetType(get_member_id(id, 0x0), "Sonicteam::Player::UACSATIndexTable *");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("boost::arg<2>");
	id = get_struc_id("boost::arg<3>");
	id = get_struc_id("boost::arg<4>");
	id = get_struc_id("boost::arg<5>");
	id = get_struc_id("boost::arg<6>");
	id = get_struc_id("boost::arg<7>");
	id = get_struc_id("boost::arg<8>");
	id = get_struc_id("boost::arg<9>");
	id = get_struc_id("std::vector<int,std::allocator<int> >");
	SetType(get_member_id(id, 0x4), "int *");
	SetType(get_member_id(id, 0x8), "int *");
	SetType(get_member_id(id, 0xC), "int *");
	id = get_struc_id("std::_Vector_val<int,std::allocator<int> >");
	id = get_struc_id("std::allocator<int>");
	id = get_struc_id("std::_Allocator_base<int>");
	id = get_struc_id("_XMFLOAT4");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("std::map<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave>,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave> > >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave>,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave> > >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	id = get_struc_id("std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >");
	id = get_struc_id("std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >");
	id = get_struc_id("ZLua");
	SetType(get_member_id(id, 0x0), "std::string");
	SetType(get_member_id(id, 0x1C), "lua_State *");
	SetType(get_member_id(id, 0x20), "bool");
	SetType(get_member_id(id, 0x21), "bool");
	id = get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >");
	SetType(get_member_id(id, 0x4), "std::string::_Bxty");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	id = get_struc_id("std::_String_val<char,std::allocator<char> >");
	id = get_struc_id("std::allocator<char>");
	id = get_struc_id("std::_Allocator_base<char>");
	id = get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty");
	SetType(get_member_id(id, 0x0), "char[16]");
	SetType(get_member_id(id, 0x1), "char *");
	id = get_struc_id("Sonicteam::System::Peripheral::XINPUT_GAMEPAD_BUTTONS_REMAP_TABLE_STRUCT");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("Sonicteam::SoX::PerformanceFrequency");
	SetType(get_member_id(id, 0x0), "_LARGE_INTEGER");
	id = get_struc_id("_LARGE_INTEGER");
	SetType(get_member_id(id, 0x0), "$BD17ED5EF6FA8CE7398C97BF41535960");
	SetType(get_member_id(id, 0x1), "_LARGE_INTEGER::<unnamed_tag>");
	SetType(get_member_id(id, 0x2), "__int64");
	id = get_struc_id("$BD17ED5EF6FA8CE7398C97BF41535960");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("_LARGE_INTEGER::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("Sonicteam::Player::State::OtherCommonContext::StateTableBase");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("Sonicteam::MyPhysicsSystemFactory");
	SetType(get_member_id(id, 0x0), "Sonicteam::MyPhysicsSystemFactory_vtbl *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("std::map<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	id = get_struc_id("std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0>");
	id = get_struc_id("std::less<int>");
	id = get_struc_id("std::binary_function<int,int,bool>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<int const ,char const *> >");
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,char const *> >");
	id = get_struc_id("TagBattleMain::PLAYERS_DATA");
	SetType(get_member_id(id, 0x0), "__vector4");
	SetType(get_member_id(id, 0x10), "__vector4");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int[2]");
	SetType(get_member_id(id, 0x38), "float");
	SetType(get_member_id(id, 0x3C), "float");
	SetType(get_member_id(id, 0x40), "int");
	id = get_struc_id("luaL_reg");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(lua_State *)");
	id = get_struc_id("boost::any");
	SetType(get_member_id(id, 0x0), "boost::any::placeholder *");
	id = get_struc_id("DebugLogRestore::tust");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("ExFileSystem");
	SetType(get_member_id(id, 0x0), "std::vector<std::string>");
	SetType(get_member_id(id, 0x10), "std::vector<std::string>");
	id = get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >");
	SetType(get_member_id(id, 0x4), "std::string *");
	SetType(get_member_id(id, 0x8), "std::string *");
	SetType(get_member_id(id, 0xC), "std::string *");
	id = get_struc_id("std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >");
	id = get_struc_id("std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	id = get_struc_id("std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	id = get_struc_id("D3D::DecodeTable");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("_D3DVERTEXELEMENT9");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned __int8");
	SetType(get_member_id(id, 0x9), "unsigned __int8");
	SetType(get_member_id(id, 0xA), "unsigned __int8");
	id = get_struc_id("_D3DPOINT");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("D3D::_CounterRecord");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("D3D::PatchSwizzleMask");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x1), "$962BCC0D412F05716FE036E439E27E12");
	id = get_struc_id("$962BCC0D412F05716FE036E439E27E12");
	SetType(get_member_id(id, 0x0), "__int16");
	id = get_struc_id("D3D::StatusRegister");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("D3D::HangRegister");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("D3D::HangGroup");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "char *");
	id = get_struc_id("GPU_COLORINFO");
	SetType(get_member_id(id, 0x0), "$DE3078EF908BB06695CE963821AC4563");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("$DE3078EF908BB06695CE963821AC4563");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int8");
	SetType(get_member_id(id, 0x3), "__int8");
	id = get_struc_id("D3DX::ct_data_s");
	SetType(get_member_id(id, 0x0), "D3DX::ct_data_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x2), "D3DX::ct_data_s::<unnamed_tag>");
	id = get_struc_id("D3DX::ct_data_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x1), "unsigned __int16");
	id = get_struc_id("D3DX::static_tree_desc_s");
	SetType(get_member_id(id, 0x0), "const D3DX::ct_data_s *");
	SetType(get_member_id(id, 0x4), "const int *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("D3DX::inflate_huft_s");
	SetType(get_member_id(id, 0x0), "D3DX::inflate_huft_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "D3DX::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	id = get_struc_id("D3DX::config_s");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "D3DX::block_state (__cdecl *)(D3DX::internal_state *, int)");
	id = get_struc_id("_D3DXFORMAT_INFO");
	SetType(get_member_id(id, 0x0), "_D3DFORMAT");
	SetType(get_member_id(id, 0x4), "_D3DXFORMAT_TYPE");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int[5]");
	SetType(get_member_id(id, 0x20), "int");
	id = get_struc_id("D3DXTex::DDS_FORMAT_DDPF");
	SetType(get_member_id(id, 0x0), "_D3DFORMAT");
	SetType(get_member_id(id, 0x4), "D3DXTex::DDS_PIXELFORMAT");
	id = get_struc_id("D3DXTex::DDS_PIXELFORMAT");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "unsigned int");
	id = get_struc_id("D3DXCOLOR");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("D3DXShader::D3DX_MATCHENTRY");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int[3]");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "unsigned int");
	id = get_struc_id("D3DXShader::_D3DXINTRINSIC");
	SetType(get_member_id(id, 0x0), "D3DXShader::_D3DXINTRINSIC_OP");
	SetType(get_member_id(id, 0x4), "D3DXShader::_D3DXINTRINSIC_ARGUMENT[5]");
	id = get_struc_id("D3DXShader::_D3DXINTRINSIC_ARGUMENT");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "const D3DXShader::_D3DXTYPE_TEMPLATE *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "const D3DXShader::_D3DXCOMPONENT_TYPE *");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "unsigned int");
	id = get_struc_id("D3DXShader::CParse::GetComponentType::__l2::INFO");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("D3DXShader::_SHADER_OPCODE");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int[16]");
	id = get_struc_id("D3DXShader::_SHADER_REGISTER");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned __int16[3]");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	id = get_struc_id("_D3DXTARGET_DESC");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("XG_D3DXTex::D3DXCOLOR");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "float");
	id = get_struc_id("XGRAPHICS::AS_ARRAY_STATE_TRL_ENTRY");
	SetType(get_member_id(id, 0x0), "XGRAPHICS::_E_AS_ARRAY_STATE");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("XGRAPHICS::_R400_TXFORMAT_INFO");
	SetType(get_member_id(id, 0x0), "SurfaceFormat");
	SetType(get_member_id(id, 0x4), "SurfaceFormat");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("XGRAPHICS::_R400_CBFORMAT_INFO");
	SetType(get_member_id(id, 0x0), "SurfaceFormat");
	SetType(get_member_id(id, 0x4), "SurfaceFormat");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("XGRAPHICS::_XENOS_CBFORMAT_INFO");
	SetType(get_member_id(id, 0x0), "ColorformatX");
	SetType(get_member_id(id, 0x4), "ColorformatX");
	SetType(get_member_id(id, 0x8), "ColorformatX");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("XGRAPHICS::_FORMAT_DATA");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "const int *");
	id = get_struc_id("XGRAPHICS::__HW_STATE_MAP_ENTRY");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	id = get_struc_id("XGRAPHICS::_SSM_SETTING_INFO");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("XGRAPHICS::_HWINFO_LCC");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("XGRAPHICS::__AS_STATE_MAP_ENTRY");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("XGRAPHICS::__AS_ARRAY_STATE_MAP_ENTRY");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("D3DXShader::Compiler::PrepareTessellatorInputs::__l11::PossibleModeInfo");
	SetType(get_member_id(id, 0x0), "__int16");
	id = get_struc_id("D3DXShader::Compiler::PrepareTessellatorInputs::__l24::ModeInfo");
	SetType(get_member_id(id, 0x0), "__int32");
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	SetType(get_member_id(id, 0x0), "$3F5BD159CB39977520C06306145A6051");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "void *");
	id = get_struc_id("$3F5BD159CB39977520C06306145A6051");
	SetType(get_member_id(id, 0x0), "unsigned int[4]");
	id = get_struc_id("XGRAPHICS::konst");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "XGRAPHICS::konst::<unnamed_tag>");
	id = get_struc_id("XGRAPHICS::konst::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x1), "XGRAPHICS::named_value");
	SetType(get_member_id(id, 0x2), "float");
	id = get_struc_id("XGRAPHICS::named_value");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	id = get_struc_id("XGRAPHICS::ArgInfo");
	SetType(get_member_id(id, 0x0), "__int32");
	SetType(get_member_id(id, 0x4), "__int8");
	SetType(get_member_id(id, 0x5), "_BYTE[3]");
	SetType(get_member_id(id, 0x8), "__int32");
	SetType(get_member_id(id, 0xC), "char");
	id = get_struc_id("TexelDesc");
	SetType(get_member_id(id, 0x0), "TexelType");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int[4]");
	SetType(get_member_id(id, 0x1C), "unsigned int[4]");
	SetType(get_member_id(id, 0x2C), "unsigned int[4]");
	id = get_struc_id("XuiTex::ct_data_s");
	SetType(get_member_id(id, 0x0), "XuiTex::ct_data_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x2), "XuiTex::ct_data_s::<unnamed_tag>");
	id = get_struc_id("XuiTex::ct_data_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x1), "unsigned __int16");
	id = get_struc_id("XuiTex::static_tree_desc_s");
	SetType(get_member_id(id, 0x0), "const XuiTex::ct_data_s *");
	SetType(get_member_id(id, 0x4), "const int *");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("XuiTex::inflate_huft_s");
	SetType(get_member_id(id, 0x0), "XuiTex::inflate_huft_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "XuiTex::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	id = get_struc_id("XuiTex::config_s");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "XuiTex::block_state (__cdecl *)(XuiTex::internal_state *, int)");
	id = get_struc_id("_XPointINT16");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int16");
	id = get_struc_id("_XLinkedList");
	SetType(get_member_id(id, 0x0), "_XLink");
	SetType(get_member_id(id, 0x8), "_XLink");
	id = get_struc_id("_XLink");
	SetType(get_member_id(id, 0x0), "_XLink *");
	SetType(get_member_id(id, 0x4), "_XLink *");
	id = get_struc_id("$387DCFD6EBE3575BD4ECFC73A7DC2704");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	id = get_struc_id("std::list<wchar_t const *,std::allocator<wchar_t const *> >");
	SetType(get_member_id(id, 0x4), "std::_List_nod<wchar_t const *>::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_List_val<wchar_t const *,std::allocator<wchar_t const *> >");
	id = get_struc_id("std::_List_ptr<wchar_t const *,std::allocator<wchar_t const *> >");
	id = get_struc_id("std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >");
	id = get_struc_id("std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>");
	id = get_struc_id("std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>");
	id = get_struc_id("std::allocator<wchar_t const *>");
	id = get_struc_id("std::_Allocator_base<wchar_t const *>");
	id = get_struc_id("std::vector<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >");
	SetType(get_member_id(id, 0x4), "struct ATG::D3DDevice::CreateVertexDeclaration::__l2::VTX_DECL *");
	SetType(get_member_id(id, 0x8), "struct ATG::D3DDevice::CreateVertexDeclaration::__l2::VTX_DECL *");
	SetType(get_member_id(id, 0xC), "struct ATG::D3DDevice::CreateVertexDeclaration::__l2::VTX_DECL *");
	id = get_struc_id("std::_Vector_val<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >");
	id = get_struc_id("std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>");
	id = get_struc_id("std::_Allocator_base<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>");
	id = get_struc_id("std::_Init_locks");
	id = get_struc_id("std::basic_filebuf<char,std::char_traits<char> >");
	SetType(get_member_id(id, 0x0), "std::streambuf");
	SetType(get_member_id(id, 0x3C), "std::codecvt<char,char,int> *");
	SetType(get_member_id(id, 0x40), "char");
	SetType(get_member_id(id, 0x41), "bool");
	SetType(get_member_id(id, 0x44), "int");
	SetType(get_member_id(id, 0x48), "bool");
	SetType(get_member_id(id, 0x4C), "_iobuf *");
	id = get_struc_id("std::basic_streambuf<char,std::char_traits<char> >");
	SetType(get_member_id(id, 0x0), "std::streambuf_vtbl *");
	SetType(get_member_id(id, 0x4), "std::_Mutex");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "char **");
	SetType(get_member_id(id, 0x14), "char **");
	SetType(get_member_id(id, 0x18), "char *");
	SetType(get_member_id(id, 0x1C), "char *");
	SetType(get_member_id(id, 0x20), "char **");
	SetType(get_member_id(id, 0x24), "char **");
	SetType(get_member_id(id, 0x28), "int");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int *");
	SetType(get_member_id(id, 0x34), "int *");
	SetType(get_member_id(id, 0x38), "std::locale *");
	id = get_struc_id("std::_Mutex");
	SetType(get_member_id(id, 0x0), "void *");
	id = get_struc_id("std::_Init_cerr");
	id = get_struc_id("std::_Init_cout");
	id = get_struc_id("_Init_atexit");
	id = get_struc_id("std::locale");
	SetType(get_member_id(id, 0x0), "std::locale::_Locimp *");
	id = get_struc_id("std::bad_alloc");
	SetType(get_member_id(id, 0x0), "std::exception");
	id = get_struc_id("std::exception");
	SetType(get_member_id(id, 0x0), "std::exception_vtbl *");
	SetType(get_member_id(id, 0x4), "const char *");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("HeapManager");
	SetType(get_member_id(id, 0x0), "void *(__cdecl *)(unsigned int)");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(void *)");
	SetType(get_member_id(id, 0x8), "HeapManager::Block *");
	SetType(get_member_id(id, 0xC), "HeapManager::Block *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("EHExceptionRecord");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "_EXCEPTION_RECORD *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "EHExceptionRecord::EHParameters");
	id = get_struc_id("EHExceptionRecord::EHParameters");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "const _s_ThrowInfo *");
	id = get_struc_id("_dbl");
	SetType(get_member_id(id, 0x0), "int[2]");
	SetType(get_member_id(id, 0x1), "long double");
	id = get_struc_id("constant");
	SetType(get_member_id(id, 0x0), "const long double");
	SetType(get_member_id(id, 0x8), "const long double");
	SetType(get_member_id(id, 0x10), "const long double");
	SetType(get_member_id(id, 0x18), "const float");
	SetType(get_member_id(id, 0x1C), "const float");
	SetType(get_member_id(id, 0x20), "const float");
	SetType(get_member_id(id, 0x24), "const float");
	SetType(get_member_id(id, 0x28), "const _dbl");
	SetType(get_member_id(id, 0x30), "const _dbl");
	SetType(get_member_id(id, 0x38), "const long double");
	SetType(get_member_id(id, 0x40), "const long double");
	SetType(get_member_id(id, 0x48), "const long double");
	SetType(get_member_id(id, 0x50), "const long double");
	SetType(get_member_id(id, 0x58), "const long double");
	SetType(get_member_id(id, 0x60), "const long double");
	SetType(get_member_id(id, 0x68), "const long double");
	SetType(get_member_id(id, 0x70), "const long double");
	id = get_struc_id("$0150E98714E487A73922B8E8C3EF0A8E");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("FpFormatDescriptor");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	id = get_struc_id("_TIME_ZONE_INFORMATION");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "wchar_t[32]");
	SetType(get_member_id(id, 0x44), "_SYSTEMTIME");
	SetType(get_member_id(id, 0x54), "int");
	SetType(get_member_id(id, 0x58), "wchar_t[32]");
	SetType(get_member_id(id, 0x98), "_SYSTEMTIME");
	SetType(get_member_id(id, 0xA8), "int");
	id = get_struc_id("_SYSTEMTIME");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int16");
	SetType(get_member_id(id, 0xA), "unsigned __int16");
	SetType(get_member_id(id, 0xC), "unsigned __int16");
	SetType(get_member_id(id, 0xE), "unsigned __int16");
	id = get_struc_id("transitiondate");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("_XTHREAD_NOTIFICATION");
	SetType(get_member_id(id, 0x0), "_LIST_ENTRY");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(int)");
	id = get_struc_id("_LIST_ENTRY");
	SetType(get_member_id(id, 0x0), "_LIST_ENTRY *");
	SetType(get_member_id(id, 0x4), "_LIST_ENTRY *");
	id = get_struc_id("$2EF6E85F416F493748553FF8C8F7A390");
	SetType(get_member_id(id, 0x0), "_RTL_CRITICAL_SECTION *");
	SetType(get_member_id(id, 0x4), "$D283E5A92EBEB600100C8EBC9C67A011");
	id = get_struc_id("rterrmsgs");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("_EXCEPTION_RECORD");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "_EXCEPTION_RECORD *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int[15]");
	id = get_struc_id("_CONTEXT");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned __int64");
	SetType(get_member_id(id, 0x18), "unsigned __int64");
	SetType(get_member_id(id, 0x20), "unsigned __int64");
	SetType(get_member_id(id, 0x28), "unsigned __int64");
	SetType(get_member_id(id, 0x30), "unsigned __int64");
	SetType(get_member_id(id, 0x38), "unsigned __int64");
	SetType(get_member_id(id, 0x40), "unsigned __int64");
	SetType(get_member_id(id, 0x48), "unsigned __int64");
	SetType(get_member_id(id, 0x50), "unsigned __int64");
	SetType(get_member_id(id, 0x58), "unsigned __int64");
	SetType(get_member_id(id, 0x60), "unsigned __int64");
	SetType(get_member_id(id, 0x68), "unsigned __int64");
	SetType(get_member_id(id, 0x70), "unsigned __int64");
	SetType(get_member_id(id, 0x78), "unsigned __int64");
	SetType(get_member_id(id, 0x80), "unsigned __int64");
	SetType(get_member_id(id, 0x88), "unsigned __int64");
	SetType(get_member_id(id, 0x90), "unsigned __int64");
	SetType(get_member_id(id, 0x98), "unsigned __int64");
	SetType(get_member_id(id, 0xA0), "unsigned __int64");
	SetType(get_member_id(id, 0xA8), "unsigned __int64");
	SetType(get_member_id(id, 0xB0), "unsigned __int64");
	SetType(get_member_id(id, 0xB8), "unsigned __int64");
	SetType(get_member_id(id, 0xC0), "unsigned __int64");
	SetType(get_member_id(id, 0xC8), "unsigned __int64");
	SetType(get_member_id(id, 0xD0), "unsigned __int64");
	SetType(get_member_id(id, 0xD8), "unsigned __int64");
	SetType(get_member_id(id, 0xE0), "unsigned __int64");
	SetType(get_member_id(id, 0xE8), "unsigned __int64");
	SetType(get_member_id(id, 0xF0), "unsigned __int64");
	SetType(get_member_id(id, 0xF8), "unsigned __int64");
	SetType(get_member_id(id, 0x100), "unsigned __int64");
	SetType(get_member_id(id, 0x108), "unsigned __int64");
	SetType(get_member_id(id, 0x110), "unsigned __int64");
	SetType(get_member_id(id, 0x118), "unsigned int");
	SetType(get_member_id(id, 0x11C), "unsigned int");
	SetType(get_member_id(id, 0x120), "long double");
	SetType(get_member_id(id, 0x128), "long double");
	SetType(get_member_id(id, 0x130), "long double");
	SetType(get_member_id(id, 0x138), "long double");
	SetType(get_member_id(id, 0x140), "long double");
	SetType(get_member_id(id, 0x148), "long double");
	SetType(get_member_id(id, 0x150), "long double");
	SetType(get_member_id(id, 0x158), "long double");
	SetType(get_member_id(id, 0x160), "long double");
	SetType(get_member_id(id, 0x168), "long double");
	SetType(get_member_id(id, 0x170), "long double");
	SetType(get_member_id(id, 0x178), "long double");
	SetType(get_member_id(id, 0x180), "long double");
	SetType(get_member_id(id, 0x188), "long double");
	SetType(get_member_id(id, 0x190), "long double");
	SetType(get_member_id(id, 0x198), "long double");
	SetType(get_member_id(id, 0x1A0), "long double");
	SetType(get_member_id(id, 0x1A8), "long double");
	SetType(get_member_id(id, 0x1B0), "long double");
	SetType(get_member_id(id, 0x1B8), "long double");
	SetType(get_member_id(id, 0x1C0), "long double");
	SetType(get_member_id(id, 0x1C8), "long double");
	SetType(get_member_id(id, 0x1D0), "long double");
	SetType(get_member_id(id, 0x1D8), "long double");
	SetType(get_member_id(id, 0x1E0), "long double");
	SetType(get_member_id(id, 0x1E8), "long double");
	SetType(get_member_id(id, 0x1F0), "long double");
	SetType(get_member_id(id, 0x1F8), "long double");
	SetType(get_member_id(id, 0x200), "long double");
	SetType(get_member_id(id, 0x208), "long double");
	SetType(get_member_id(id, 0x210), "long double");
	SetType(get_member_id(id, 0x218), "long double");
	SetType(get_member_id(id, 0x220), "long double");
	SetType(get_member_id(id, 0x228), "unsigned int");
	SetType(get_member_id(id, 0x22C), "unsigned int");
	SetType(get_member_id(id, 0x230), "float[4]");
	SetType(get_member_id(id, 0x240), "float[4]");
	SetType(get_member_id(id, 0x250), "float[4]");
	SetType(get_member_id(id, 0x260), "float[4]");
	SetType(get_member_id(id, 0x270), "float[4]");
	SetType(get_member_id(id, 0x280), "float[4]");
	SetType(get_member_id(id, 0x290), "float[4]");
	SetType(get_member_id(id, 0x2A0), "float[4]");
	SetType(get_member_id(id, 0x2B0), "float[4]");
	SetType(get_member_id(id, 0x2C0), "float[4]");
	SetType(get_member_id(id, 0x2D0), "float[4]");
	SetType(get_member_id(id, 0x2E0), "float[4]");
	SetType(get_member_id(id, 0x2F0), "float[4]");
	SetType(get_member_id(id, 0x300), "float[4]");
	SetType(get_member_id(id, 0x310), "float[4]");
	SetType(get_member_id(id, 0x320), "float[4]");
	SetType(get_member_id(id, 0x330), "float[4]");
	SetType(get_member_id(id, 0x340), "float[4]");
	SetType(get_member_id(id, 0x350), "float[4]");
	SetType(get_member_id(id, 0x360), "float[4]");
	SetType(get_member_id(id, 0x370), "float[4]");
	SetType(get_member_id(id, 0x380), "float[4]");
	SetType(get_member_id(id, 0x390), "float[4]");
	SetType(get_member_id(id, 0x3A0), "float[4]");
	SetType(get_member_id(id, 0x3B0), "float[4]");
	SetType(get_member_id(id, 0x3C0), "float[4]");
	SetType(get_member_id(id, 0x3D0), "float[4]");
	SetType(get_member_id(id, 0x3E0), "float[4]");
	SetType(get_member_id(id, 0x3F0), "float[4]");
	SetType(get_member_id(id, 0x400), "float[4]");
	SetType(get_member_id(id, 0x410), "float[4]");
	SetType(get_member_id(id, 0x420), "float[4]");
	SetType(get_member_id(id, 0x430), "float[4]");
	SetType(get_member_id(id, 0x440), "float[4]");
	SetType(get_member_id(id, 0x450), "float[4]");
	SetType(get_member_id(id, 0x460), "float[4]");
	SetType(get_member_id(id, 0x470), "float[4]");
	SetType(get_member_id(id, 0x480), "float[4]");
	SetType(get_member_id(id, 0x490), "float[4]");
	SetType(get_member_id(id, 0x4A0), "float[4]");
	SetType(get_member_id(id, 0x4B0), "float[4]");
	SetType(get_member_id(id, 0x4C0), "float[4]");
	SetType(get_member_id(id, 0x4D0), "float[4]");
	SetType(get_member_id(id, 0x4E0), "float[4]");
	SetType(get_member_id(id, 0x4F0), "float[4]");
	SetType(get_member_id(id, 0x500), "float[4]");
	SetType(get_member_id(id, 0x510), "float[4]");
	SetType(get_member_id(id, 0x520), "float[4]");
	SetType(get_member_id(id, 0x530), "float[4]");
	SetType(get_member_id(id, 0x540), "float[4]");
	SetType(get_member_id(id, 0x550), "float[4]");
	SetType(get_member_id(id, 0x560), "float[4]");
	SetType(get_member_id(id, 0x570), "float[4]");
	SetType(get_member_id(id, 0x580), "float[4]");
	SetType(get_member_id(id, 0x590), "float[4]");
	SetType(get_member_id(id, 0x5A0), "float[4]");
	SetType(get_member_id(id, 0x5B0), "float[4]");
	SetType(get_member_id(id, 0x5C0), "float[4]");
	SetType(get_member_id(id, 0x5D0), "float[4]");
	SetType(get_member_id(id, 0x5E0), "float[4]");
	SetType(get_member_id(id, 0x5F0), "float[4]");
	SetType(get_member_id(id, 0x600), "float[4]");
	SetType(get_member_id(id, 0x610), "float[4]");
	SetType(get_member_id(id, 0x620), "float[4]");
	SetType(get_member_id(id, 0x630), "float[4]");
	SetType(get_member_id(id, 0x640), "float[4]");
	SetType(get_member_id(id, 0x650), "float[4]");
	SetType(get_member_id(id, 0x660), "float[4]");
	SetType(get_member_id(id, 0x670), "float[4]");
	SetType(get_member_id(id, 0x680), "float[4]");
	SetType(get_member_id(id, 0x690), "float[4]");
	SetType(get_member_id(id, 0x6A0), "float[4]");
	SetType(get_member_id(id, 0x6B0), "float[4]");
	SetType(get_member_id(id, 0x6C0), "float[4]");
	SetType(get_member_id(id, 0x6D0), "float[4]");
	SetType(get_member_id(id, 0x6E0), "float[4]");
	SetType(get_member_id(id, 0x6F0), "float[4]");
	SetType(get_member_id(id, 0x700), "float[4]");
	SetType(get_member_id(id, 0x710), "float[4]");
	SetType(get_member_id(id, 0x720), "float[4]");
	SetType(get_member_id(id, 0x730), "float[4]");
	SetType(get_member_id(id, 0x740), "float[4]");
	SetType(get_member_id(id, 0x750), "float[4]");
	SetType(get_member_id(id, 0x760), "float[4]");
	SetType(get_member_id(id, 0x770), "float[4]");
	SetType(get_member_id(id, 0x780), "float[4]");
	SetType(get_member_id(id, 0x790), "float[4]");
	SetType(get_member_id(id, 0x7A0), "float[4]");
	SetType(get_member_id(id, 0x7B0), "float[4]");
	SetType(get_member_id(id, 0x7C0), "float[4]");
	SetType(get_member_id(id, 0x7D0), "float[4]");
	SetType(get_member_id(id, 0x7E0), "float[4]");
	SetType(get_member_id(id, 0x7F0), "float[4]");
	SetType(get_member_id(id, 0x800), "float[4]");
	SetType(get_member_id(id, 0x810), "float[4]");
	SetType(get_member_id(id, 0x820), "float[4]");
	SetType(get_member_id(id, 0x830), "float[4]");
	SetType(get_member_id(id, 0x840), "float[4]");
	SetType(get_member_id(id, 0x850), "float[4]");
	SetType(get_member_id(id, 0x860), "float[4]");
	SetType(get_member_id(id, 0x870), "float[4]");
	SetType(get_member_id(id, 0x880), "float[4]");
	SetType(get_member_id(id, 0x890), "float[4]");
	SetType(get_member_id(id, 0x8A0), "float[4]");
	SetType(get_member_id(id, 0x8B0), "float[4]");
	SetType(get_member_id(id, 0x8C0), "float[4]");
	SetType(get_member_id(id, 0x8D0), "float[4]");
	SetType(get_member_id(id, 0x8E0), "float[4]");
	SetType(get_member_id(id, 0x8F0), "float[4]");
	SetType(get_member_id(id, 0x900), "float[4]");
	SetType(get_member_id(id, 0x910), "float[4]");
	SetType(get_member_id(id, 0x920), "float[4]");
	SetType(get_member_id(id, 0x930), "float[4]");
	SetType(get_member_id(id, 0x940), "float[4]");
	SetType(get_member_id(id, 0x950), "float[4]");
	SetType(get_member_id(id, 0x960), "float[4]");
	SetType(get_member_id(id, 0x970), "float[4]");
	SetType(get_member_id(id, 0x980), "float[4]");
	SetType(get_member_id(id, 0x990), "float[4]");
	SetType(get_member_id(id, 0x9A0), "float[4]");
	SetType(get_member_id(id, 0x9B0), "float[4]");
	SetType(get_member_id(id, 0x9C0), "float[4]");
	SetType(get_member_id(id, 0x9D0), "float[4]");
	SetType(get_member_id(id, 0x9E0), "float[4]");
	SetType(get_member_id(id, 0x9F0), "float[4]");
	SetType(get_member_id(id, 0xA00), "float[4]");
	SetType(get_member_id(id, 0xA10), "float[4]");
	SetType(get_member_id(id, 0xA20), "float[4]");
	SetType(get_member_id(id, 0xA30), "float[4]");
	id = get_struc_id("_EXCEPTION_POINTERS");
	SetType(get_member_id(id, 0x0), "_EXCEPTION_RECORD *");
	SetType(get_member_id(id, 0x4), "_CONTEXT *");
	id = get_struc_id("errentry");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("D3DXShader::D3DX_SEMANTIC");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "_BYTE[2]");
	SetType(get_member_id(id, 0x8), "__int32");
	SetType(get_member_id(id, 0xC), "const char *");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "unsigned int");
	SetType(get_member_id(id, 0x20), "unsigned int");
	id = get_struc_id("Xui::SubstituteGlyphList");
	SetType(get_member_id(id, 0x0), "Xui::SubstituteGlyphList::SubstituteGlyph *");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("_D3DPRESENT_PARAMETERS_");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "_D3DFORMAT");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "_D3DMULTISAMPLE_TYPE");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "_D3DSWAPEFFECT");
	SetType(get_member_id(id, 0x1C), "HWND__ *");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "_D3DFORMAT");
	SetType(get_member_id(id, 0x2C), "unsigned int");
	SetType(get_member_id(id, 0x30), "unsigned int");
	SetType(get_member_id(id, 0x34), "unsigned int");
	SetType(get_member_id(id, 0x38), "int");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "_D3DFORMAT");
	SetType(get_member_id(id, 0x44), "_D3DCOLORSPACE");
	SetType(get_member_id(id, 0x48), "_D3DRING_BUFFER_PARAMETERS");
	SetType(get_member_id(id, 0x60), "_D3DVIDEO_SCALER_PARAMETERS");
	id = get_struc_id("_D3DRING_BUFFER_PARAMETERS");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x14), "unsigned int");
	id = get_struc_id("_D3DVIDEO_SCALER_PARAMETERS");
	SetType(get_member_id(id, 0x0), "_D3DRECT");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	id = get_struc_id("_D3DRECT");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("_GUID");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("GUID");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	SetType(get_member_id(id, 0x6), "unsigned __int16");
	SetType(get_member_id(id, 0x8), "unsigned __int8[8]");
	id = get_struc_id("D3DXShader::Instruction");
	SetType(get_member_id(id, 0x0), "D3DXShader::Dependency *");
	SetType(get_member_id(id, 0x4), "D3DXShader::Dependency *");
	SetType(get_member_id(id, 0x8), "$665826B505A046B569F58BC9139171BA");
	SetType(get_member_id(id, 0x14), "D3DXShader::Block *");
	SetType(get_member_id(id, 0x18), "D3DXShader::Instruction *");
	SetType(get_member_id(id, 0x1C), "D3DXShader::DoubleLinkListEntry<D3DXShader::Instruction>");
	SetType(get_member_id(id, 0x24), "D3DXShader::Dependency *[]");
	id = get_struc_id("$665826B505A046B569F58BC9139171BA");
	SetType(get_member_id(id, 0x0), "$0815C1C1A85AC50DDFE07E82C29940CF");
	SetType(get_member_id(id, 0x1), "$FF8E3624358BAB6D773B76DDA5D9BAB4");
	SetType(get_member_id(id, 0x2), "$274417349B89E7D50B02F7FF5244FC2F");
	SetType(get_member_id(id, 0x3), "$4F3878224017A26FA63C9490D3998581");
	id = get_struc_id("$0815C1C1A85AC50DDFE07E82C29940CF");
	SetType(get_member_id(id, 0x0), "__int32");
	SetType(get_member_id(id, 0x4), "D3DXShader::Constraint *");
	SetType(get_member_id(id, 0x8), "__int32");
	id = get_struc_id("$FF8E3624358BAB6D773B76DDA5D9BAB4");
	SetType(get_member_id(id, 0x0), "_BYTE[4]");
	SetType(get_member_id(id, 0x4), "__int32");
	SetType(get_member_id(id, 0x8), "__int32");
	id = get_struc_id("$274417349B89E7D50B02F7FF5244FC2F");
	SetType(get_member_id(id, 0x0), "_BYTE[8]");
	SetType(get_member_id(id, 0x8), "__int32");
	id = get_struc_id("$4F3878224017A26FA63C9490D3998581");
	SetType(get_member_id(id, 0x0), "_BYTE[8]");
	SetType(get_member_id(id, 0x8), "__int32");
	id = get_struc_id("D3DXShader::DoubleLinkListEntry<D3DXShader::Instruction>");
	SetType(get_member_id(id, 0x0), "D3DXShader::Instruction **");
	SetType(get_member_id(id, 0x4), "D3DXShader::Instruction *");
	id = get_struc_id("_Dconst");
	SetType(get_member_id(id, 0x0), "unsigned __int16[8]");
	SetType(get_member_id(id, 0x1), "float");
	SetType(get_member_id(id, 0x2), "long double");
	SetType(get_member_id(id, 0x3), "long double");
	id = get_struc_id("_XOVERLAPPED");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "void (__cdecl *)(unsigned int, unsigned int, _XOVERLAPPED *)");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	id = get_struc_id("D3DXShader::FIELD_ENTRY");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	id = get_struc_id("std::map<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store>>>>,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store>>>> > >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store>>>>,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store>>>> > >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	return id;
}

static ApplyStrucTInfos_1(void) {
        auto id;
	id = get_struc_id("std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >");
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >");
	id = get_struc_id("ATG::Font");
	SetType(get_member_id(id, 0x0), "ATG::PackedResource");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "float");
	SetType(get_member_id(id, 0x20), "float");
	SetType(get_member_id(id, 0x24), "float");
	SetType(get_member_id(id, 0x28), "float");
	SetType(get_member_id(id, 0x2C), "float");
	SetType(get_member_id(id, 0x30), "float");
	SetType(get_member_id(id, 0x34), "_D3DRECT");
	SetType(get_member_id(id, 0x44), "float");
	SetType(get_member_id(id, 0x48), "float");
	SetType(get_member_id(id, 0x4C), "wchar_t");
	SetType(get_member_id(id, 0x50), "__int16 *");
	SetType(get_member_id(id, 0x54), "unsigned int");
	SetType(get_member_id(id, 0x58), "ATG::GLYPH_ATTR *");
	SetType(get_member_id(id, 0x5C), "int");
	SetType(get_member_id(id, 0x60), "unsigned int[15]");
	SetType(get_member_id(id, 0x9C), "unsigned int");
	SetType(get_member_id(id, 0xA0), "D3DTexture *");
	id = get_struc_id("ATG::PackedResource");
	SetType(get_member_id(id, 0x0), "unsigned __int8 *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned __int8 *");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "ATG::RESOURCE *");
	SetType(get_member_id(id, 0x14), "unsigned int");
	id = get_struc_id("RValue");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("_MESSAGEBOX_RESULT");
	SetType(get_member_id(id, 0x0), "$85E3DB0AE782B0314B343BB09609F631");
	id = get_struc_id("$85E3DB0AE782B0314B343BB09609F631");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x1), "unsigned __int16[4]");
	id = get_struc_id("std::locale::id");
	SetType(get_member_id(id, 0x0), "unsigned int");
	id = get_struc_id("std::map<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	id = get_struc_id("std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >");
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >");
	id = get_struc_id("ATG::StringID");
	SetType(get_member_id(id, 0x0), "const wchar_t *");
	id = get_struc_id("D3DXShader::CONFIG_FIELD_ENTRY");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	id = get_struc_id("XGRAPHICS::EnumStringTableEntry");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "const char *");
	id = get_struc_id("D3D::SamplerStateInit");
	SetType(get_member_id(id, 0x0), "unsigned int (__cdecl *)(D3DDevice *, unsigned int)");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(D3DDevice *, unsigned int, unsigned int)");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("R400Tables::ILRegTypeMap");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "R400Tables::RegType");
	id = get_struc_id("_D3DDISPLAYMODE");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "_D3DFORMAT");
	id = get_struc_id("ATG::EnumStringMap");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "const wchar_t *");
	id = get_struc_id("D3DXShader::CONFIG_REGISTER_FIELD");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "unsigned __int8");
	SetType(get_member_id(id, 0xD), "unsigned __int8");
	SetType(get_member_id(id, 0x10), "unsigned int");
	id = get_struc_id("D3DXShader::TFETCH_FIELD");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	SetType(get_member_id(id, 0x5), "unsigned __int8");
	SetType(get_member_id(id, 0x8), "const D3DXShader::FIELD_ENTRY *");
	id = get_struc_id("D3DXShader::FETCH_FIELD");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	SetType(get_member_id(id, 0x5), "unsigned __int8");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "const D3DXShader::FIELD_ENTRY *");
	SetType(get_member_id(id, 0x14), "unsigned int");
	id = get_struc_id("std::vector<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >");
	SetType(get_member_id(id, 0x4), "Multiplayer4P::uni *");
	SetType(get_member_id(id, 0x8), "Multiplayer4P::uni *");
	SetType(get_member_id(id, 0xC), "Multiplayer4P::uni *");
	id = get_struc_id("std::_Vector_val<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >");
	id = get_struc_id("std::allocator<Multiplayer4P::uni>");
	id = get_struc_id("std::_Allocator_base<Multiplayer4P::uni>");
	id = get_struc_id("D3D::MajorMode1InputRegs");
	SetType(get_member_id(id, 0x0), "GPU_GROUPVECTCONTROL");
	SetType(get_member_id(id, 0x4), "GPU_GROUPVECTCONTROL");
	id = get_struc_id("GPU_GROUPVECTCONTROL");
	SetType(get_member_id(id, 0x0), "$799B73217A750012B2D231F9F49E8B35");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("$799B73217A750012B2D231F9F49E8B35");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int8");
	id = get_struc_id("XGRAPHICS::SSM_DEBUGENTRY");
	SetType(get_member_id(id, 0x0), "XGRAPHICS::_E_SSM_DEBUGLEVEL");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "XGRAPHICS::E_SSM_DEBUG_DEST");
	id = get_struc_id("XGRAPHICS::inst_ctor_st");
	SetType(get_member_id(id, 0x0), "XGRAPHICS::IRInst *(__cdecl *)(R400Tables::Op, XGRAPHICS::Compiler *)");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("_XMatrixFIX16");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	id = get_struc_id("_EX_TITLE_TERMINATE_REGISTRATION");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(_EX_TITLE_TERMINATE_REGISTRATION *)");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "_LIST_ENTRY");
	id = get_struc_id("Multiplayer4P::MPL");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x10), "Multiplayer4P::CSST");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "int[2]");
	SetType(get_member_id(id, 0x3C), "int");
	SetType(get_member_id(id, 0x40), "int");
	SetType(get_member_id(id, 0x44), "int");
	id = get_struc_id("Multiplayer4P::CSST");
	SetType(get_member_id(id, 0x0), "__vector4");
	SetType(get_member_id(id, 0x10), "__vector4");
	id = get_struc_id("D3DXShader::ExportSemantic");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "__int32");
	id = get_struc_id("D3DXShader::InputSemantic");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "__int32");
	SetType(get_member_id(id, 0x8), "__int32");
	id = get_struc_id("ATG::GAMEPAD");
	SetType(get_member_id(id, 0x0), "_XINPUT_GAMEPAD");
	SetType(get_member_id(id, 0xC), "float");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	SetType(get_member_id(id, 0x18), "float");
	SetType(get_member_id(id, 0x1C), "unsigned __int16");
	SetType(get_member_id(id, 0x20), "int");
	SetType(get_member_id(id, 0x24), "int");
	SetType(get_member_id(id, 0x28), "unsigned __int16");
	SetType(get_member_id(id, 0x2C), "int");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "_XINPUT_CAPABILITIES");
	SetType(get_member_id(id, 0x48), "int");
	SetType(get_member_id(id, 0x4C), "int");
	SetType(get_member_id(id, 0x50), "int");
	SetType(get_member_id(id, 0x54), "unsigned int");
	id = get_struc_id("_XINPUT_GAMEPAD");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	SetType(get_member_id(id, 0x4), "__int16");
	SetType(get_member_id(id, 0x6), "__int16");
	SetType(get_member_id(id, 0x8), "__int16");
	SetType(get_member_id(id, 0xA), "__int16");
	id = get_struc_id("_XINPUT_CAPABILITIES");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "_XINPUT_GAMEPAD");
	SetType(get_member_id(id, 0x10), "_XINPUT_VIBRATION");
	id = get_struc_id("_XINPUT_VIBRATION");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	id = get_struc_id("XGRAPHICS::hos_mode_split_item");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("R400Tables::R400_INST");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "R400Tables::Op");
	SetType(get_member_id(id, 0x8), "R400Tables::Op");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "char[30]");
	SetType(get_member_id(id, 0x30), "int");
	id = get_struc_id("XGRAPHICS::__AS_STATE_MAP_INFO");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "const XGRAPHICS::__AS_STATE_MAP_ENTRY *");
	SetType(get_member_id(id, 0x10), "const XGRAPHICS::__AS_ARRAY_STATE_MAP_ENTRY *");
	SetType(get_member_id(id, 0x14), "const unsigned int *");
	id = get_struc_id("std::map<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	id = get_struc_id("std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0>");
	id = get_struc_id("std::less<unsigned __int64>");
	id = get_struc_id("std::binary_function<unsigned __int64,unsigned __int64,bool>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >");
	id = get_struc_id("std::_Allocator_base<std::pair<unsigned __int64 const ,PPL_DATA> >");
	id = get_struc_id("XGRAPHICS::RegTypeProps");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x5), "bool");
	SetType(get_member_id(id, 0x6), "unsigned __int8");
	SetType(get_member_id(id, 0x7), "unsigned __int8");
	SetType(get_member_id(id, 0x8), "XGRAPHICS::VRegInfo *(__cdecl *)(int, R400Tables::RegType, XGRAPHICS::Compiler *)");
	id = get_struc_id("XGRAPHICS::_R400VSDECLTYPE");
	SetType(get_member_id(id, 0x0), "unsigned __int8");
	SetType(get_member_id(id, 0x1), "unsigned __int8");
	SetType(get_member_id(id, 0x2), "unsigned __int8");
	SetType(get_member_id(id, 0x3), "unsigned __int8");
	id = get_struc_id("DFastActions");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)()");
	id = get_struc_id("_LDBL12");
	SetType(get_member_id(id, 0x0), "unsigned __int8[12]");
	id = get_struc_id("_D3DADAPTER_IDENTIFIER9");
	SetType(get_member_id(id, 0x0), "char[512]");
	SetType(get_member_id(id, 0x200), "char[512]");
	SetType(get_member_id(id, 0x400), "char[32]");
	SetType(get_member_id(id, 0x420), "_LARGE_INTEGER");
	SetType(get_member_id(id, 0x428), "unsigned int");
	SetType(get_member_id(id, 0x42C), "unsigned int");
	SetType(get_member_id(id, 0x430), "unsigned int");
	SetType(get_member_id(id, 0x434), "unsigned int");
	SetType(get_member_id(id, 0x438), "_GUID");
	SetType(get_member_id(id, 0x448), "unsigned int");
	id = get_struc_id("Multiplayer4P::PLRS");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int[3]");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	id = get_struc_id("D3D::RenderStateInit");
	SetType(get_member_id(id, 0x0), "unsigned int (__cdecl *)(D3DDevice *)");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(D3DDevice *, unsigned int)");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("Xui::ObjectPool");
	SetType(get_member_id(id, 0x0), "Xui::TextureBlock *[100]");
	SetType(get_member_id(id, 0x190), "int");
	SetType(get_member_id(id, 0x194), "Xui::Glyph *[100]");
	SetType(get_member_id(id, 0x324), "int");
	id = get_struc_id("Xui::CXuiSimpleArray<XUITimeline *,Xui::CXuiSimpleArrayEqualHelper<XUITimeline *> >");
	SetType(get_member_id(id, 0x0), "XUITimeline **");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("_iobuf");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "int");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "char *");
	id = get_struc_id("lua_TObject");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x8), "Value");
	id = get_struc_id("Value");
	SetType(get_member_id(id, 0x0), "GCObject *");
	SetType(get_member_id(id, 0x1), "void *");
	SetType(get_member_id(id, 0x2), "long double");
	SetType(get_member_id(id, 0x3), "int");
	id = get_struc_id("XGRAPHICS::hos_mode_index_item");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "XGRAPHICS::SwizzleOrMaskInfo");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "XGRAPHICS::SwizzleOrMaskInfo");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "XGRAPHICS::SwizzleOrMaskInfo");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "XGRAPHICS::SwizzleOrMaskInfo");
	id = get_struc_id("Xui::HandleTable");
	SetType(get_member_id(id, 0x0), "Xui::HandleTableEntry *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("_D3DVIEWPORT9");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "float");
	SetType(get_member_id(id, 0x14), "float");
	id = get_struc_id("D3DXShader::Dependency");
	SetType(get_member_id(id, 0x0), "__int32");
	SetType(get_member_id(id, 0x4), "D3DXShader::Dependency *");
	SetType(get_member_id(id, 0x8), "D3DXShader::Dependency *");
	SetType(get_member_id(id, 0xC), "D3DXShader::Instruction *");
	SetType(get_member_id(id, 0x10), "D3DXShader::Instruction *");
	id = get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >");
	SetType(get_member_id(id, 0x4), "std::string **");
	SetType(get_member_id(id, 0x8), "std::string **");
	SetType(get_member_id(id, 0xC), "std::string **");
	id = get_struc_id("std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >");
	id = get_struc_id("std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>");
	id = get_struc_id("std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>");
	id = get_struc_id("_XCPT_ACTION");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(int)");
	id = get_struc_id("Xui::VisualData");
	SetType(get_member_id(id, 0x0), "Xui::CXuiString");
	SetType(get_member_id(id, 0xC), "Xui::XuiStringTable *");
	id = get_struc_id("Xui::CXuiString");
	SetType(get_member_id(id, 0x0), "wchar_t *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	id = get_struc_id("std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<int,std::vector<int>,std::less<int>,std::allocator<std::pair<int const ,std::vector<int> > >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<int,std::vector<int>,std::less<int>,std::allocator<std::pair<int const ,std::vector<int> > >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	id = get_struc_id("std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >");
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::vector<int,std::allocator<int> > > >");
	id = get_struc_id("Socket");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "std::map<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> > >");
	SetType(get_member_id(id, 0x14), "std::map<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> > >");
	SetType(get_member_id(id, 0x20), "sockaddr");
	SetType(get_member_id(id, 0x30), "int");
	SetType(get_member_id(id, 0x34), "bool");
	SetType(get_member_id(id, 0x35), "bool");
	SetType(get_member_id(id, 0x38), "void (__cdecl *)(Socket *, unsigned int, SocketMessage *)");
	SetType(get_member_id(id, 0x3C), "void (__cdecl *)(Socket *, unsigned int)");
	SetType(get_member_id(id, 0x40), "void (__cdecl *)(Socket *, unsigned int)");
	SetType(get_member_id(id, 0x44), "void (__cdecl *)(Socket *, unsigned int, SocketMessage *)");
	SetType(get_member_id(id, 0x48), "void (__cdecl *)(Socket *, unsigned int)");
	SetType(get_member_id(id, 0x4C), "void (__cdecl *)(Socket *, unsigned int)");
	SetType(get_member_id(id, 0x50), "void (__cdecl *)(Socket *, unsigned int, unsigned __int64)");
	SetType(get_member_id(id, 0x54), "void (__cdecl *)(Socket *, unsigned int, unsigned __int64)");
	SetType(get_member_id(id, 0x58), "void (__cdecl *)(Socket *, unsigned int, unsigned __int64)");
	SetType(get_member_id(id, 0x5C), "void (__cdecl *)(Socket *, unsigned int, unsigned __int64)");
	id = get_struc_id("std::map<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	id = get_struc_id("std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0>");
	id = get_struc_id("SockaddrComparator");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<sockaddr const ,SocketData> >");
	id = get_struc_id("std::_Allocator_base<std::pair<sockaddr const ,SocketData> >");
	id = get_struc_id("std::map<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	id = get_struc_id("std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<sockaddr const ,bool> >");
	id = get_struc_id("std::_Allocator_base<std::pair<sockaddr const ,bool> >");
	id = get_struc_id("sockaddr");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "char[14]");
	id = get_struc_id("XGRAPHICS::_R400DX_TO_IL");
	SetType(get_member_id(id, 0x0), "XGRAPHICS::ILOpCode");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(unsigned int **, unsigned int, XGRAPHICS::ILOpCode, XGRAPHICS::_R400IL_RECORDED_INFO *, unsigned int **)");
	id = get_struc_id("LValue");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "_D3DXPARAMETER_TYPE");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "const RValue *");
	id = get_struc_id("GPU_GROUPVECTFMTCONTROL");
	SetType(get_member_id(id, 0x0), "$0B5F7FB2731F71913AC6525C5F302169");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("$0B5F7FB2731F71913AC6525C5F302169");
	SetType(get_member_id(id, 0x0), "__int32");
	id = get_struc_id("Xui::CXuiScratchAllocator");
	SetType(get_member_id(id, 0x0), "unsigned __int8 *");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("lconv");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "char *");
	SetType(get_member_id(id, 0x8), "char *");
	SetType(get_member_id(id, 0xC), "char *");
	SetType(get_member_id(id, 0x10), "char *");
	SetType(get_member_id(id, 0x14), "char *");
	SetType(get_member_id(id, 0x18), "char *");
	SetType(get_member_id(id, 0x1C), "char *");
	SetType(get_member_id(id, 0x20), "char *");
	SetType(get_member_id(id, 0x24), "char *");
	SetType(get_member_id(id, 0x28), "char");
	SetType(get_member_id(id, 0x29), "char");
	SetType(get_member_id(id, 0x2A), "char");
	SetType(get_member_id(id, 0x2B), "char");
	SetType(get_member_id(id, 0x2C), "char");
	SetType(get_member_id(id, 0x2D), "char");
	SetType(get_member_id(id, 0x2E), "char");
	SetType(get_member_id(id, 0x2F), "char");
	id = get_struc_id("D3DXShader::EnumStringTableEntry");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "const char *");
	id = get_struc_id("_D3DCAPS9");
	SetType(get_member_id(id, 0x0), "_D3DDEVTYPE");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int");
	SetType(get_member_id(id, 0x14), "unsigned int");
	SetType(get_member_id(id, 0x18), "unsigned int");
	SetType(get_member_id(id, 0x1C), "unsigned int");
	SetType(get_member_id(id, 0x20), "unsigned int");
	SetType(get_member_id(id, 0x24), "unsigned int");
	SetType(get_member_id(id, 0x28), "unsigned int");
	SetType(get_member_id(id, 0x2C), "unsigned int");
	SetType(get_member_id(id, 0x30), "unsigned int");
	SetType(get_member_id(id, 0x34), "unsigned int");
	SetType(get_member_id(id, 0x38), "unsigned int");
	SetType(get_member_id(id, 0x3C), "unsigned int");
	SetType(get_member_id(id, 0x40), "unsigned int");
	SetType(get_member_id(id, 0x44), "unsigned int");
	SetType(get_member_id(id, 0x48), "unsigned int");
	SetType(get_member_id(id, 0x4C), "unsigned int");
	SetType(get_member_id(id, 0x50), "unsigned int");
	SetType(get_member_id(id, 0x54), "unsigned int");
	SetType(get_member_id(id, 0x58), "unsigned int");
	SetType(get_member_id(id, 0x5C), "unsigned int");
	SetType(get_member_id(id, 0x60), "unsigned int");
	SetType(get_member_id(id, 0x64), "unsigned int");
	SetType(get_member_id(id, 0x68), "unsigned int");
	SetType(get_member_id(id, 0x6C), "unsigned int");
	SetType(get_member_id(id, 0x70), "float");
	SetType(get_member_id(id, 0x74), "float");
	SetType(get_member_id(id, 0x78), "float");
	SetType(get_member_id(id, 0x7C), "float");
	SetType(get_member_id(id, 0x80), "float");
	SetType(get_member_id(id, 0x84), "float");
	SetType(get_member_id(id, 0x88), "unsigned int");
	SetType(get_member_id(id, 0x8C), "unsigned int");
	SetType(get_member_id(id, 0x90), "unsigned int");
	SetType(get_member_id(id, 0x94), "unsigned int");
	SetType(get_member_id(id, 0x98), "unsigned int");
	SetType(get_member_id(id, 0x9C), "unsigned int");
	SetType(get_member_id(id, 0xA0), "unsigned int");
	SetType(get_member_id(id, 0xA4), "unsigned int");
	SetType(get_member_id(id, 0xA8), "unsigned int");
	SetType(get_member_id(id, 0xAC), "unsigned int");
	SetType(get_member_id(id, 0xB0), "float");
	SetType(get_member_id(id, 0xB4), "unsigned int");
	SetType(get_member_id(id, 0xB8), "unsigned int");
	SetType(get_member_id(id, 0xBC), "unsigned int");
	SetType(get_member_id(id, 0xC0), "unsigned int");
	SetType(get_member_id(id, 0xC4), "unsigned int");
	SetType(get_member_id(id, 0xC8), "unsigned int");
	SetType(get_member_id(id, 0xCC), "unsigned int");
	SetType(get_member_id(id, 0xD0), "float");
	SetType(get_member_id(id, 0xD4), "unsigned int");
	SetType(get_member_id(id, 0xD8), "float");
	SetType(get_member_id(id, 0xDC), "unsigned int");
	SetType(get_member_id(id, 0xE0), "unsigned int");
	SetType(get_member_id(id, 0xE4), "unsigned int");
	SetType(get_member_id(id, 0xE8), "unsigned int");
	SetType(get_member_id(id, 0xEC), "unsigned int");
	SetType(get_member_id(id, 0xF0), "unsigned int");
	SetType(get_member_id(id, 0xF4), "unsigned int");
	SetType(get_member_id(id, 0xF8), "_D3DVSHADERCAPS2_0");
	SetType(get_member_id(id, 0x108), "_D3DPSHADERCAPS2_0");
	SetType(get_member_id(id, 0x11C), "unsigned int");
	SetType(get_member_id(id, 0x120), "unsigned int");
	SetType(get_member_id(id, 0x124), "unsigned int");
	SetType(get_member_id(id, 0x128), "unsigned int");
	SetType(get_member_id(id, 0x12C), "unsigned int");
	id = get_struc_id("_D3DVSHADERCAPS2_0");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("_D3DPSHADERCAPS2_0");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("Xui::CXuiMemoryPool");
	SetType(get_member_id(id, 0x0), "unsigned __int8 *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "unsigned int *");
	SetType(get_member_id(id, 0x10), "int");
	id = get_struc_id("std::basic_ostream<char,std::char_traits<char> >");
	SetType(get_member_id(id, 0x0), "_BYTE[56]");
	id = get_struc_id("std::map<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<int,std::map<int,std::string>,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::string> > >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::string>,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::string> > >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	id = get_struc_id("std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >");
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >");
	id = get_struc_id("XGRAPHICS::index_mapping_item");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char *");
	id = get_struc_id("XGRAPHICS::__HW_STATE_MAP_INFO");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "const XGRAPHICS::__HW_STATE_MAP_ENTRY *");
	SetType(get_member_id(id, 0xC), "const unsigned int *");
	id = get_struc_id("localeinfo_struct");
	SetType(get_member_id(id, 0x0), "threadlocaleinfostruct *");
	SetType(get_member_id(id, 0x4), "threadmbcinfostruct *");
	id = get_struc_id("XGRAPHICS::hos_split_item");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "XGRAPHICS::SwizzleOrMaskInfo");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "XGRAPHICS::SwizzleOrMaskInfo");
	id = get_struc_id("D3DXShader::_UCODE_OPCODE");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "__int32");
	SetType(get_member_id(id, 0x8), "unsigned __int16[3]");
	id = get_struc_id("XGRAPHICS::ProgramControlFieldUI");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "unsigned __int8");
	id = get_struc_id("XGRAPHICS::IL2IR_INST");
	SetType(get_member_id(id, 0x0), "R400Tables::Op");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "int");
	SetType(get_member_id(id, 0x14), "XGRAPHICS::IRInst *(__cdecl *)(R400Tables::Op, XGRAPHICS::Compiler *)");
	SetType(get_member_id(id, 0x18), "const XGRAPHICS::expansion_token *");
	SetType(get_member_id(id, 0x1C), "XGRAPHICS::operands_per_token");
	SetType(get_member_id(id, 0x20), "int");
	id = get_struc_id("XGRAPHICS::operands_per_token");
	SetType(get_member_id(id, 0x0), "unsigned __int8[4]");
	id = get_struc_id("tagRECT");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	id = get_struc_id("_STRING");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int8 *");
	id = get_struc_id("D3D::MajorMode1PrimRegs");
	SetType(get_member_id(id, 0x0), "GPU_GROUPPRIMTYPE");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("GPU_GROUPPRIMTYPE");
	SetType(get_member_id(id, 0x0), "$0155778B40C0F91675BCDFFA23C7C745");
	SetType(get_member_id(id, 0x1), "unsigned int");
	id = get_struc_id("$0155778B40C0F91675BCDFFA23C7C745");
	SetType(get_member_id(id, 0x0), "__int16");
	SetType(get_member_id(id, 0x2), "__int8");
	id = get_struc_id("std::vector<RCS,std::allocator<RCS> >");
	SetType(get_member_id(id, 0x4), "RCS *");
	SetType(get_member_id(id, 0x8), "RCS *");
	SetType(get_member_id(id, 0xC), "RCS *");
	id = get_struc_id("std::_Vector_val<RCS,std::allocator<RCS> >");
	id = get_struc_id("std::allocator<RCS>");
	id = get_struc_id("std::_Allocator_base<RCS>");
	id = get_struc_id("ioinfo");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "char");
	SetType(get_member_id(id, 0x5), "char");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "_RTL_CRITICAL_SECTION");
	SetType(get_member_id(id, 0x28), "__int8");
	SetType(get_member_id(id, 0x29), "char[2]");
	id = get_struc_id("__lc_time_data");
	SetType(get_member_id(id, 0x0), "char *[7]");
	SetType(get_member_id(id, 0x1C), "char *[7]");
	SetType(get_member_id(id, 0x38), "char *[12]");
	SetType(get_member_id(id, 0x68), "char *[12]");
	SetType(get_member_id(id, 0x98), "char *[2]");
	SetType(get_member_id(id, 0xA0), "char *");
	SetType(get_member_id(id, 0xA4), "char *");
	SetType(get_member_id(id, 0xA8), "char *");
	SetType(get_member_id(id, 0xAC), "unsigned int");
	SetType(get_member_id(id, 0xB0), "int");
	SetType(get_member_id(id, 0xB4), "int");
	id = get_struc_id("__type_info_node");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "__type_info_node *");
	id = get_struc_id("MapIDFunction");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	id = get_struc_id("std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> > >");
	SetType(get_member_id(id, 0x0), "std::_Tree<std::_Tmap_traits<std::string,char const *,std::less<std::string >,std::allocator<std::pair<std::string const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	SetType(get_member_id(id, 0x4), "std::_Tree_nod<std::_Tmap_traits<std::string,char const *,std::less<std::string >,std::allocator<std::pair<std::string const ,char const *> >,0> >::_Node *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	id = get_struc_id("std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0>");
	id = get_struc_id("std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	id = get_struc_id("std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>");
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>");
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>");
	id = get_struc_id("std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >");
	id = get_struc_id("std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >");
	id = get_struc_id("TimeSystemRestore::light06");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	SetType(get_member_id(id, 0xC), "TimeSystemRestore::vector3");
	id = get_struc_id("TimeSystemRestore::vector3");
	SetType(get_member_id(id, 0x0), "float");
	SetType(get_member_id(id, 0x4), "float");
	SetType(get_member_id(id, 0x8), "float");
	id = get_struc_id("threadlocaleinfostruct");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "unsigned int");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int[6]");
	SetType(get_member_id(id, 0x24), "tagLC_ID[6]");
	SetType(get_member_id(id, 0x48), "threadlocaleinfostruct::<unnamed_tag>[6]");
	SetType(get_member_id(id, 0xA8), "int");
	SetType(get_member_id(id, 0xAC), "int");
	SetType(get_member_id(id, 0xB0), "int *");
	SetType(get_member_id(id, 0xB4), "int *");
	SetType(get_member_id(id, 0xB8), "int *");
	SetType(get_member_id(id, 0xBC), "lconv *");
	SetType(get_member_id(id, 0xC0), "int *");
	SetType(get_member_id(id, 0xC4), "unsigned __int16 *");
	SetType(get_member_id(id, 0xC8), "const unsigned __int16 *");
	SetType(get_member_id(id, 0xCC), "const unsigned __int8 *");
	SetType(get_member_id(id, 0xD0), "const unsigned __int8 *");
	SetType(get_member_id(id, 0xD4), "__lc_time_data *");
	id = get_struc_id("tagLC_ID");
	SetType(get_member_id(id, 0x0), "unsigned __int16");
	SetType(get_member_id(id, 0x2), "unsigned __int16");
	SetType(get_member_id(id, 0x4), "unsigned __int16");
	id = get_struc_id("threadlocaleinfostruct::<unnamed_tag>");
	SetType(get_member_id(id, 0x0), "char *");
	SetType(get_member_id(id, 0x4), "wchar_t *");
	SetType(get_member_id(id, 0x8), "int *");
	SetType(get_member_id(id, 0xC), "int *");
	id = get_struc_id("Xui::XUIPointArrayPropHandler");
	SetType(get_member_id(id, 0x0), "XUICustomPropHandler");
	id = get_struc_id("XUICustomPropHandler");
	SetType(get_member_id(id, 0x0), "HRESULT (__cdecl *)(void *, void *, void *)");
	SetType(get_member_id(id, 0x4), "HRESULT (__cdecl *)(void *, void *, void *)");
	SetType(get_member_id(id, 0x8), "HRESULT (__cdecl *)(void *, wchar_t **, void *)");
	SetType(get_member_id(id, 0xC), "HRESULT (__cdecl *)(void *, const wchar_t *, void *)");
	SetType(get_member_id(id, 0x10), "HRESULT (__cdecl *)(void *, XUIMemoryBuffer *, void *)");
	SetType(get_member_id(id, 0x14), "HRESULT (__cdecl *)(void *, const unsigned __int8 *, unsigned int, void *)");
	SetType(get_member_id(id, 0x18), "int (__cdecl *)(void *, void *, void *)");
	SetType(get_member_id(id, 0x1C), "HRESULT (__cdecl *)(void *, IXUIPropObj *, HWND__ *)");
	id = get_struc_id("threadmbcinfostruct");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "unsigned __int16[6]");
	SetType(get_member_id(id, 0x1C), "unsigned __int8[257]");
	SetType(get_member_id(id, 0x11D), "unsigned __int8[256]");
	id = get_struc_id("C_SCOPE_TABLE");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
	ApplyStrucTInfos_1();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"XGRAPHICS::SwizzleOrMaskInfo",1);
	id = add_struc(-1,"XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>",0);
	id = add_struc(-1,"XGRAPHICS::expansion_token",1);
	id = add_struc(-1,"_XMMATRIX",0);
	id = add_struc(-1,"$C5674FA6E936604C8D0348C8574C7D4B",1);
	id = add_struc(-1,"__vector4",0);
	id = add_struc(-1,"$8E5A9F1BC9F6778EEF541196ACEE5BBE",1);
	id = add_struc(-1,"$91D1B2149FAC90180ECB9AC277F76009",0);
	id = add_struc(-1,"$40942CBCB8F0A1CDBC81269929B28324",0);
	id = add_struc(-1,"Xui::SimplePolygonTriangulator::Point",0);
	id = add_struc(-1,"XUIElementPropVal",0);
	id = add_struc(-1,"$E8BD8723B7223D62283B5C78BA618057",1);
	id = add_struc(-1,"_D3DVECTOR",0);
	id = add_struc(-1,"XUIQuaternion",0);
	id = add_struc(-1,"XUIElementPropVal::<unnamed_tag>::<unnamed_tag>",0);
	id = add_struc(-1,"Xui::CXuiStringMap<TypefaceDescriptor *>",0);
	id = add_struc(-1,"Xui::CXuiSimpleMap<Xui::CXuiString,TypefaceDescriptor *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,TypefaceDescriptor *> >",0);
	id = add_struc(-1,"Xui::XUIVisualFallback",0);
	id = add_struc(-1,"Xui::CXuiStringMap<Xui::_XuiVisualEntry>",0);
	id = add_struc(-1,"Xui::CXuiSimpleMap<Xui::CXuiString,Xui::_XuiVisualEntry,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::_XuiVisualEntry> >",0);
	id = add_struc(-1,"Xui::CXuiStringMap<Xui::VisualData *>",0);
	id = add_struc(-1,"Xui::CXuiSimpleMap<Xui::CXuiString,Xui::VisualData *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::VisualData *> >",0);
	id = add_struc(-1,"Xui::GdipFontRenderer",0);
	id = add_struc(-1,"IXuiFontRenderer",0);
	id = add_struc(-1,"Xui::GetBreakInfo::__l2::BreakInfo",0);
	id = add_struc(-1,"Xui::CXuiStringHashTable<void *>",0);
	id = add_struc(-1,"XUIElementPropDef",0);
	id = add_struc(-1,"std::map<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0>",0);
	id = add_struc(-1,"std::less<Sonicteam::Player::State::IMachine *>",0);
	id = add_struc(-1,"std::binary_function<Sonicteam::Player::State::IMachine *,Sonicteam::Player::State::IMachine *,bool>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >",0);
	id = add_struc(-1,"boost::arg<1>",0);
	id = add_struc(-1,"Sonicteam::Player::Array<char const *>",0);
	id = add_struc(-1,"Sonicteam::Player::CharacterStateAnimationTableStruct",0);
	id = add_struc(-1,"Sonicteam::Player::AIMArray",0);
	id = add_struc(-1,"Sonicteam::Player::Array<Sonicteam::Player::UACSATIndexTable>",0);
	id = add_struc(-1,"boost::arg<2>",0);
	id = add_struc(-1,"boost::arg<3>",0);
	id = add_struc(-1,"boost::arg<4>",0);
	id = add_struc(-1,"boost::arg<5>",0);
	id = add_struc(-1,"boost::arg<6>",0);
	id = add_struc(-1,"boost::arg<7>",0);
	id = add_struc(-1,"boost::arg<8>",0);
	id = add_struc(-1,"boost::arg<9>",0);
	id = add_struc(-1,"std::vector<int,std::allocator<int> >",0);
	id = add_struc(-1,"std::_Vector_val<int,std::allocator<int> >",0);
	id = add_struc(-1,"std::allocator<int>",0);
	id = add_struc(-1,"std::_Allocator_base<int>",0);
	id = add_struc(-1,"_XMFLOAT4",0);
	id = add_struc(-1,"std::map<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >",0);
	id = add_struc(-1,"ZLua",0);
	id = add_struc(-1,"std::basic_string<char,std::char_traits<char>,std::allocator<char> >",0);
	id = add_struc(-1,"std::_String_val<char,std::allocator<char> >",0);
	id = add_struc(-1,"std::allocator<char>",0);
	id = add_struc(-1,"std::_Allocator_base<char>",0);
	id = add_struc(-1,"std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty",1);
	id = add_struc(-1,"Sonicteam::System::Peripheral::XINPUT_GAMEPAD_BUTTONS_REMAP_TABLE_STRUCT",0);
	id = add_struc(-1,"Sonicteam::SoX::PerformanceFrequency",0);
	id = add_struc(-1,"_LARGE_INTEGER",1);
	id = add_struc(-1,"$BD17ED5EF6FA8CE7398C97BF41535960",0);
	id = add_struc(-1,"_LARGE_INTEGER::<unnamed_tag>",0);
	id = add_struc(-1,"Sonicteam::Player::State::OtherCommonContext::StateTableBase",0);
	id = add_struc(-1,"Sonicteam::MyPhysicsSystemFactory",0);
	id = add_struc(-1,"std::map<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0>",0);
	id = add_struc(-1,"std::less<int>",0);
	id = add_struc(-1,"std::binary_function<int,int,bool>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<int const ,char const *> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<int const ,char const *> >",0);
	id = add_struc(-1,"TagBattleMain::PLAYERS_DATA",0);
	id = add_struc(-1,"luaL_reg",0);
	id = add_struc(-1,"boost::any",0);
	id = add_struc(-1,"DebugLogRestore::tust",0);
	id = add_struc(-1,"ExFileSystem",0);
	id = add_struc(-1,"std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >",0);
	id = add_struc(-1,"std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >",0);
	id = add_struc(-1,"std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >",0);
	id = add_struc(-1,"D3D::DecodeTable",0);
	id = add_struc(-1,"_D3DVERTEXELEMENT9",0);
	id = add_struc(-1,"_D3DPOINT",0);
	id = add_struc(-1,"D3D::_CounterRecord",0);
	id = add_struc(-1,"D3D::PatchSwizzleMask",1);
	id = add_struc(-1,"$962BCC0D412F05716FE036E439E27E12",0);
	id = add_struc(-1,"D3D::StatusRegister",0);
	id = add_struc(-1,"D3D::HangRegister",0);
	id = add_struc(-1,"D3D::HangGroup",0);
	id = add_struc(-1,"GPU_COLORINFO",1);
	id = add_struc(-1,"$DE3078EF908BB06695CE963821AC4563",0);
	id = add_struc(-1,"D3DX::ct_data_s",0);
	id = add_struc(-1,"D3DX::ct_data_s::<unnamed_tag>",1);
	id = add_struc(-1,"D3DX::static_tree_desc_s",0);
	id = add_struc(-1,"D3DX::inflate_huft_s",0);
	id = add_struc(-1,"D3DX::inflate_huft_s::<unnamed_tag>",1);
	id = add_struc(-1,"D3DX::inflate_huft_s::<unnamed_tag>::<unnamed_tag>",0);
	id = add_struc(-1,"D3DX::config_s",0);
	id = add_struc(-1,"_D3DXFORMAT_INFO",0);
	id = add_struc(-1,"D3DXTex::DDS_FORMAT_DDPF",0);
	id = add_struc(-1,"D3DXTex::DDS_PIXELFORMAT",0);
	id = add_struc(-1,"D3DXCOLOR",0);
	id = add_struc(-1,"D3DXShader::D3DX_MATCHENTRY",0);
	id = add_struc(-1,"D3DXShader::_D3DXINTRINSIC",0);
	id = add_struc(-1,"D3DXShader::_D3DXINTRINSIC_ARGUMENT",0);
	id = add_struc(-1,"D3DXShader::CParse::GetComponentType::__l2::INFO",0);
	id = add_struc(-1,"D3DXShader::_SHADER_OPCODE",0);
	id = add_struc(-1,"D3DXShader::_SHADER_REGISTER",0);
	id = add_struc(-1,"_D3DXTARGET_DESC",0);
	id = add_struc(-1,"XG_D3DXTex::D3DXCOLOR",0);
	id = add_struc(-1,"XGRAPHICS::AS_ARRAY_STATE_TRL_ENTRY",0);
	id = add_struc(-1,"XGRAPHICS::_R400_TXFORMAT_INFO",0);
	id = add_struc(-1,"XGRAPHICS::_R400_CBFORMAT_INFO",0);
	id = add_struc(-1,"XGRAPHICS::_XENOS_CBFORMAT_INFO",0);
	id = add_struc(-1,"XGRAPHICS::_FORMAT_DATA",0);
	id = add_struc(-1,"XGRAPHICS::__HW_STATE_MAP_ENTRY",0);
	id = add_struc(-1,"XGRAPHICS::_SSM_SETTING_INFO",0);
	id = add_struc(-1,"XGRAPHICS::_HWINFO_LCC",0);
	id = add_struc(-1,"XGRAPHICS::__AS_STATE_MAP_ENTRY",0);
	id = add_struc(-1,"XGRAPHICS::__AS_ARRAY_STATE_MAP_ENTRY",0);
	id = add_struc(-1,"D3DXShader::Compiler::PrepareTessellatorInputs::__l11::PossibleModeInfo",0);
	id = add_struc(-1,"D3DXShader::Compiler::PrepareTessellatorInputs::__l24::ModeInfo",0);
	id = add_struc(-1,"_RTL_CRITICAL_SECTION",0);
	id = add_struc(-1,"$3F5BD159CB39977520C06306145A6051",1);
	id = add_struc(-1,"XGRAPHICS::konst",0);
	id = add_struc(-1,"XGRAPHICS::konst::<unnamed_tag>",1);
	id = add_struc(-1,"XGRAPHICS::named_value",0);
	id = add_struc(-1,"XGRAPHICS::ArgInfo",0);
	id = add_struc(-1,"TexelDesc",0);
	id = add_struc(-1,"XuiTex::ct_data_s",0);
	id = add_struc(-1,"XuiTex::ct_data_s::<unnamed_tag>",1);
	id = add_struc(-1,"XuiTex::static_tree_desc_s",0);
	id = add_struc(-1,"XuiTex::inflate_huft_s",0);
	id = add_struc(-1,"XuiTex::inflate_huft_s::<unnamed_tag>",1);
	id = add_struc(-1,"XuiTex::inflate_huft_s::<unnamed_tag>::<unnamed_tag>",0);
	id = add_struc(-1,"XuiTex::config_s",0);
	id = add_struc(-1,"_XPointINT16",0);
	id = add_struc(-1,"_XLinkedList",0);
	id = add_struc(-1,"_XLink",0);
	id = add_struc(-1,"$387DCFD6EBE3575BD4ECFC73A7DC2704",0);
	id = add_struc(-1,"std::list<wchar_t const *,std::allocator<wchar_t const *> >",0);
	id = add_struc(-1,"std::_List_val<wchar_t const *,std::allocator<wchar_t const *> >",0);
	id = add_struc(-1,"std::_List_ptr<wchar_t const *,std::allocator<wchar_t const *> >",0);
	id = add_struc(-1,"std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >",0);
	id = add_struc(-1,"std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<wchar_t const *>",0);
	id = add_struc(-1,"std::_Allocator_base<wchar_t const *>",0);
	id = add_struc(-1,"std::vector<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >",0);
	id = add_struc(-1,"std::_Vector_val<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >",0);
	id = add_struc(-1,"std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>",0);
	id = add_struc(-1,"std::_Allocator_base<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>",0);
	id = add_struc(-1,"std::_Init_locks",0);
	id = add_struc(-1,"std::basic_filebuf<char,std::char_traits<char> >",0);
	id = add_struc(-1,"std::basic_streambuf<char,std::char_traits<char> >",0);
	id = add_struc(-1,"std::_Mutex",0);
	id = add_struc(-1,"std::_Init_cerr",0);
	id = add_struc(-1,"std::_Init_cout",0);
	id = add_struc(-1,"_Init_atexit",0);
	id = add_struc(-1,"std::locale",0);
	id = add_struc(-1,"std::bad_alloc",0);
	id = add_struc(-1,"std::exception",0);
	id = add_struc(-1,"HeapManager",0);
	id = add_struc(-1,"EHExceptionRecord",0);
	id = add_struc(-1,"EHExceptionRecord::EHParameters",0);
	id = add_struc(-1,"_dbl",1);
	id = add_struc(-1,"constant",0);
	id = add_struc(-1,"$0150E98714E487A73922B8E8C3EF0A8E",0);
	id = add_struc(-1,"FpFormatDescriptor",0);
	id = add_struc(-1,"_TIME_ZONE_INFORMATION",0);
	id = add_struc(-1,"_SYSTEMTIME",0);
	id = add_struc(-1,"transitiondate",0);
	id = add_struc(-1,"_XTHREAD_NOTIFICATION",0);
	id = add_struc(-1,"_LIST_ENTRY",0);
	id = add_struc(-1,"$2EF6E85F416F493748553FF8C8F7A390",0);
	id = add_struc(-1,"rterrmsgs",0);
	id = add_struc(-1,"_EXCEPTION_RECORD",0);
	id = add_struc(-1,"_CONTEXT",0);
	id = add_struc(-1,"_EXCEPTION_POINTERS",0);
	id = add_struc(-1,"errentry",0);
	id = add_struc(-1,"D3DXShader::D3DX_SEMANTIC",0);
	id = add_struc(-1,"Xui::SubstituteGlyphList",0);
	id = add_struc(-1,"_D3DPRESENT_PARAMETERS_",0);
	id = add_struc(-1,"_D3DRING_BUFFER_PARAMETERS",0);
	id = add_struc(-1,"_D3DVIDEO_SCALER_PARAMETERS",0);
	id = add_struc(-1,"_D3DRECT",0);
	id = add_struc(-1,"_GUID",0);
	id = add_struc(-1,"GUID",0);
	id = add_struc(-1,"D3DXShader::Instruction",0);
	id = add_struc(-1,"$665826B505A046B569F58BC9139171BA",1);
	id = add_struc(-1,"$0815C1C1A85AC50DDFE07E82C29940CF",0);
	id = add_struc(-1,"$FF8E3624358BAB6D773B76DDA5D9BAB4",0);
	id = add_struc(-1,"$274417349B89E7D50B02F7FF5244FC2F",0);
	id = add_struc(-1,"$4F3878224017A26FA63C9490D3998581",0);
	id = add_struc(-1,"D3DXShader::DoubleLinkListEntry<D3DXShader::Instruction>",0);
	id = add_struc(-1,"_Dconst",1);
	id = add_struc(-1,"_XOVERLAPPED",0);
	id = add_struc(-1,"D3DXShader::FIELD_ENTRY",0);
	id = add_struc(-1,"std::map<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >",0);
	id = add_struc(-1,"ATG::Font",0);
	id = add_struc(-1,"ATG::PackedResource",0);
	id = add_struc(-1,"RValue",0);
	id = add_struc(-1,"_MESSAGEBOX_RESULT",0);
	id = add_struc(-1,"$85E3DB0AE782B0314B343BB09609F631",1);
	id = add_struc(-1,"std::locale::id",0);
	id = add_struc(-1,"std::map<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >",0);
	id = add_struc(-1,"ATG::StringID",0);
	id = add_struc(-1,"D3DXShader::CONFIG_FIELD_ENTRY",0);
	id = add_struc(-1,"XGRAPHICS::EnumStringTableEntry",0);
	id = add_struc(-1,"D3D::SamplerStateInit",0);
	id = add_struc(-1,"R400Tables::ILRegTypeMap",0);
	id = add_struc(-1,"_D3DDISPLAYMODE",0);
	id = add_struc(-1,"ATG::EnumStringMap",0);
	id = add_struc(-1,"D3DXShader::CONFIG_REGISTER_FIELD",0);
	id = add_struc(-1,"D3DXShader::TFETCH_FIELD",0);
	id = add_struc(-1,"D3DXShader::FETCH_FIELD",0);
	id = add_struc(-1,"std::vector<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >",0);
	id = add_struc(-1,"std::_Vector_val<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >",0);
	id = add_struc(-1,"std::allocator<Multiplayer4P::uni>",0);
	id = add_struc(-1,"std::_Allocator_base<Multiplayer4P::uni>",0);
	id = add_struc(-1,"D3D::MajorMode1InputRegs",0);
	id = add_struc(-1,"GPU_GROUPVECTCONTROL",1);
	id = add_struc(-1,"$799B73217A750012B2D231F9F49E8B35",0);
	id = add_struc(-1,"XGRAPHICS::SSM_DEBUGENTRY",0);
	id = add_struc(-1,"XGRAPHICS::inst_ctor_st",0);
	id = add_struc(-1,"_XMatrixFIX16",0);
	id = add_struc(-1,"_EX_TITLE_TERMINATE_REGISTRATION",0);
	id = add_struc(-1,"Multiplayer4P::MPL",0);
	id = add_struc(-1,"Multiplayer4P::CSST",0);
	return id;
}

static Structures_1(id) {
        auto mid;

	id = add_struc(-1,"D3DXShader::ExportSemantic",0);
	id = add_struc(-1,"D3DXShader::InputSemantic",0);
	id = add_struc(-1,"ATG::GAMEPAD",0);
	id = add_struc(-1,"_XINPUT_GAMEPAD",0);
	id = add_struc(-1,"_XINPUT_CAPABILITIES",0);
	id = add_struc(-1,"_XINPUT_VIBRATION",0);
	id = add_struc(-1,"XGRAPHICS::hos_mode_split_item",0);
	id = add_struc(-1,"R400Tables::R400_INST",0);
	id = add_struc(-1,"XGRAPHICS::__AS_STATE_MAP_INFO",0);
	id = add_struc(-1,"std::map<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0>",0);
	id = add_struc(-1,"std::less<unsigned __int64>",0);
	id = add_struc(-1,"std::binary_function<unsigned __int64,unsigned __int64,bool>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<unsigned __int64 const ,PPL_DATA> >",0);
	id = add_struc(-1,"XGRAPHICS::RegTypeProps",0);
	id = add_struc(-1,"XGRAPHICS::_R400VSDECLTYPE",0);
	id = add_struc(-1,"DFastActions",0);
	id = add_struc(-1,"_LDBL12",0);
	id = add_struc(-1,"_D3DADAPTER_IDENTIFIER9",0);
	id = add_struc(-1,"Multiplayer4P::PLRS",0);
	id = add_struc(-1,"D3D::RenderStateInit",0);
	id = add_struc(-1,"Xui::ObjectPool",0);
	id = add_struc(-1,"Xui::CXuiSimpleArray<XUITimeline *,Xui::CXuiSimpleArrayEqualHelper<XUITimeline *> >",0);
	id = add_struc(-1,"_iobuf",0);
	id = add_struc(-1,"lua_TObject",0);
	id = add_struc(-1,"Value",1);
	id = add_struc(-1,"XGRAPHICS::hos_mode_index_item",0);
	id = add_struc(-1,"Xui::HandleTable",0);
	id = add_struc(-1,"_D3DVIEWPORT9",0);
	id = add_struc(-1,"D3DXShader::Dependency",0);
	id = add_struc(-1,"std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >",0);
	id = add_struc(-1,"std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >",0);
	id = add_struc(-1,"std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>",0);
	id = add_struc(-1,"_XCPT_ACTION",0);
	id = add_struc(-1,"Xui::VisualData",0);
	id = add_struc(-1,"Xui::CXuiString",0);
	id = add_struc(-1,"std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<int const ,std::vector<int,std::allocator<int> > > >",0);
	id = add_struc(-1,"Socket",0);
	id = add_struc(-1,"std::map<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0>",0);
	id = add_struc(-1,"SockaddrComparator",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<sockaddr const ,SocketData> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<sockaddr const ,SocketData> >",0);
	id = add_struc(-1,"std::map<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<sockaddr const ,bool> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<sockaddr const ,bool> >",0);
	id = add_struc(-1,"sockaddr",0);
	id = add_struc(-1,"XGRAPHICS::_R400DX_TO_IL",0);
	id = add_struc(-1,"LValue",0);
	id = add_struc(-1,"GPU_GROUPVECTFMTCONTROL",1);
	id = add_struc(-1,"$0B5F7FB2731F71913AC6525C5F302169",0);
	id = add_struc(-1,"Xui::CXuiScratchAllocator",0);
	id = add_struc(-1,"lconv",0);
	id = add_struc(-1,"D3DXShader::EnumStringTableEntry",0);
	id = add_struc(-1,"_D3DCAPS9",0);
	id = add_struc(-1,"_D3DVSHADERCAPS2_0",0);
	id = add_struc(-1,"_D3DPSHADERCAPS2_0",0);
	id = add_struc(-1,"Xui::CXuiMemoryPool",0);
	id = add_struc(-1,"std::basic_ostream<char,std::char_traits<char> >",0);
	id = add_struc(-1,"std::map<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >",0);
	id = add_struc(-1,"XGRAPHICS::index_mapping_item",0);
	id = add_struc(-1,"XGRAPHICS::__HW_STATE_MAP_INFO",0);
	id = add_struc(-1,"localeinfo_struct",0);
	id = add_struc(-1,"XGRAPHICS::hos_split_item",0);
	id = add_struc(-1,"D3DXShader::_UCODE_OPCODE",0);
	id = add_struc(-1,"XGRAPHICS::ProgramControlFieldUI",0);
	id = add_struc(-1,"XGRAPHICS::IL2IR_INST",0);
	id = add_struc(-1,"XGRAPHICS::operands_per_token",0);
	id = add_struc(-1,"tagRECT",0);
	id = add_struc(-1,"_STRING",0);
	id = add_struc(-1,"D3D::MajorMode1PrimRegs",0);
	id = add_struc(-1,"GPU_GROUPPRIMTYPE",1);
	id = add_struc(-1,"$0155778B40C0F91675BCDFFA23C7C745",0);
	id = add_struc(-1,"std::vector<RCS,std::allocator<RCS> >",0);
	id = add_struc(-1,"std::_Vector_val<RCS,std::allocator<RCS> >",0);
	id = add_struc(-1,"std::allocator<RCS>",0);
	id = add_struc(-1,"std::_Allocator_base<RCS>",0);
	id = add_struc(-1,"ioinfo",0);
	id = add_struc(-1,"__lc_time_data",0);
	id = add_struc(-1,"__type_info_node",0);
	id = add_struc(-1,"MapIDFunction",0);
	id = add_struc(-1,"std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> > >",0);
	id = add_struc(-1,"std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >",0);
	id = add_struc(-1,"std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0>",0);
	id = add_struc(-1,"std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >",0);
	id = add_struc(-1,"std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>",0);
	id = add_struc(-1,"std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>",0);
	id = add_struc(-1,"std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >",0);
	id = add_struc(-1,"std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >",0);
	id = add_struc(-1,"TimeSystemRestore::light06",0);
	id = add_struc(-1,"TimeSystemRestore::vector3",0);
	id = add_struc(-1,"threadlocaleinfostruct",0);
	id = add_struc(-1,"tagLC_ID",0);
	id = add_struc(-1,"threadlocaleinfostruct::<unnamed_tag>",0);
	id = add_struc(-1,"Xui::XUIPointArrayPropHandler",0);
	id = add_struc(-1,"XUICustomPropHandler",0);
	id = add_struc(-1,"threadmbcinfostruct",0);
	id = add_struc(-1,"C_SCOPE_TABLE",0);
	
	id = get_struc_id("XGRAPHICS::expansion_token");
	mid = add_struc_member(id,"i",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"f",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$91D1B2149FAC90180ECB9AC277F76009");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"w",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$8E5A9F1BC9F6778EEF541196ACEE5BBE");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$91D1B2149FAC90180ECB9AC277F76009"),	16);
	mid = add_struc_member(id,"v",	0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"u",	0,	0x20000400,	-1,	16);
	set_struc_align(id,2);
	
	id = get_struc_id("__vector4");
	mid = add_struc_member(id,"___u0",	0,	0x60000400,	get_struc_id("$8E5A9F1BC9F6778EEF541196ACEE5BBE"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("$40942CBCB8F0A1CDBC81269929B28324");
	mid = add_struc_member(id,"_11",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_12",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_13",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_14",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_21",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_22",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_23",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_24",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_31",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_32",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_33",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_34",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_41",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_42",	0X34,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_43",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_44",	0X3C,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$C5674FA6E936604C8D0348C8574C7D4B");
	mid = add_struc_member(id,"r",	0,	0x60000400,	get_struc_id("__vector4"),	64);
	mid = add_struc_member(id,"__s1",	0,	0x60000400,	get_struc_id("$40942CBCB8F0A1CDBC81269929B28324"),	64);
	mid = add_struc_member(id,"m",	0,	0x80000400,	-1,	64);
	set_struc_align(id,2);
	
	id = get_struc_id("_XMMATRIX");
	mid = add_struc_member(id,"___u0",	0,	0x60000400,	get_struc_id("$C5674FA6E936604C8D0348C8574C7D4B"),	64);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::SimplePolygonTriangulator::Point");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DVECTOR");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XUIQuaternion");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"w",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XUIElementPropVal::<unnamed_tag>::<unnamed_tag>");
	mid = add_struc_member(id,"pvCustomData",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pHandler",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$E8BD8723B7223D62283B5C78BA618057");
	mid = add_struc_member(id,"bVal",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"nVal",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uVal",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fVal",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"szVal",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"vecVal",	0,	0x60000400,	get_struc_id("_D3DVECTOR"),	12);
	mid = add_struc_member(id,"quatVal",	0,	0x60000400,	get_struc_id("XUIQuaternion"),	16);
	mid = add_struc_member(id,"pObj",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"CustomVal",	0,	0x60000400,	get_struc_id("XUIElementPropVal::<unnamed_tag>::<unnamed_tag>"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("XUIElementPropVal");
	mid = add_struc_member(id,"type",	0,	0x28800400,	get_enum("XUI_ELEMENT_PROPERTY_TYPE"),	4);
	mid = add_struc_member(id,"___u1",	0X4,	0x60000400,	get_struc_id("$E8BD8723B7223D62283B5C78BA618057"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,TypefaceDescriptor *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,TypefaceDescriptor *> >");
	mid = add_struc_member(id,"m_aKey",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_aVal",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nAlloc",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiStringMap<TypefaceDescriptor *>");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,TypefaceDescriptor *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,TypefaceDescriptor *> >"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::XUIVisualFallback");
	mid = add_struc_member(id,"i",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szBegin",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"szEnd",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"iFallback",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::_XuiVisualEntry,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::_XuiVisualEntry> >");
	mid = add_struc_member(id,"m_aKey",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_aVal",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nAlloc",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiStringMap<Xui::_XuiVisualEntry>");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::_XuiVisualEntry,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::_XuiVisualEntry> >"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::VisualData *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::VisualData *> >");
	mid = add_struc_member(id,"m_aKey",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_aVal",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nAlloc",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiStringMap<Xui::VisualData *>");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("Xui::CXuiSimpleMap<Xui::CXuiString,Xui::VisualData *,Xui::CXuiSimpleMapEqualHelper<Xui::CXuiString,Xui::VisualData *> >"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("IXuiFontRenderer");
	mid = add_struc_member(id,"__vftable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::GdipFontRenderer");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("IXuiFontRenderer"),	4);
	mid = add_struc_member(id,"m_fIsInit",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"m_fDpi",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_BitmapWidth",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_BitmapHeight",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pGraphics",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pBitmap",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pFontList",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::GetBreakInfo::__l2::BreakInfo");
	mid = add_struc_member(id,"wch",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"isNonBeginningChar",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"isNonEndingChar",	0X3,	0x000400,	-1,	1);
	set_struc_align(id,1);
	
	id = get_struc_id("Xui::CXuiStringHashTable<void *>");
	mid = add_struc_member(id,"m_buckets",	0,	0x25500400,	0XFFFFFFFF,	108,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XUIElementPropDef");
	mid = add_struc_member(id,"dwFlags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwId",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwOffset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwExtra",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szPropName",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Type",	0X14,	0x28800400,	get_enum("XUI_ELEMENT_PROPERTY_TYPE"),	4);
	mid = add_struc_member(id,"pDefaultVal",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pCustomHandler",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pfnGetProp",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pfnSetProp",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pfnGetPropDef",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pfnGetCount",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0>");
	
	id = get_struc_id("std::less<Sonicteam::Player::State::IMachine *>");
	
	id = get_struc_id("std::binary_function<Sonicteam::Player::State::IMachine *,Sonicteam::Player::State::IMachine *,bool>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LuaLCommonObjectSaveC,std::allocator<DebugLogV2::LuaLCommonObjectSaveC> > > > > > > > > >");
	
	id = get_struc_id("boost::arg<1>");
	
	id = get_struc_id("Sonicteam::Player::Array<char const *>");
	mid = add_struc_member(id,"items",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"count",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sonicteam::Player::AIMArray");
	mid = add_struc_member(id,"items",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"LastItemID",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EndItemID",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sonicteam::Player::Array<Sonicteam::Player::UACSATIndexTable>");
	mid = add_struc_member(id,"items",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"count",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sonicteam::Player::CharacterStateAnimationTableStruct");
	mid = add_struc_member(id,"RegisteredAnimations",	0,	0x60000400,	get_struc_id("Sonicteam::Player::Array<char const *>"),	8);
	mid = add_struc_member(id,"MapAnimation",	0X8,	0x60000400,	get_struc_id("Sonicteam::Player::AIMArray"),	12);
	mid = add_struc_member(id,"RegisteredAnimationsHead",	0X14,	0x60000400,	get_struc_id("Sonicteam::Player::Array<char const *>"),	8);
	mid = add_struc_member(id,"MapAnimationHead",	0X1C,	0x60000400,	get_struc_id("Sonicteam::Player::Array<Sonicteam::Player::UACSATIndexTable>"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("boost::arg<2>");
	
	id = get_struc_id("boost::arg<3>");
	
	id = get_struc_id("boost::arg<4>");
	
	id = get_struc_id("boost::arg<5>");
	
	id = get_struc_id("boost::arg<6>");
	
	id = get_struc_id("boost::arg<7>");
	
	id = get_struc_id("boost::arg<8>");
	
	id = get_struc_id("boost::arg<9>");
	
	id = get_struc_id("std::vector<int,std::allocator<int> >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<int,std::allocator<int> >");
	
	id = get_struc_id("std::allocator<int>");
	
	id = get_struc_id("std::_Allocator_base<int>");
	
	id = get_struc_id("_XMFLOAT4");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"w",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<Sonicteam::Player::State::IMachine *,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > >,std::less<Sonicteam::Player::State::IMachine *>,std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<Sonicteam::Player::State::IMachine * const,std::map<int,DebugLogV2::LuaLCommonObjectSave,std::less<int>,std::allocator<std::pair<int const ,DebugLogV2::LuaLCommonObjectSave> > > > >");
	
	id = get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty");
	mid = add_struc_member(id,"_Buf",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"_Ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >");
	mid = add_struc_member(id,"_Bx",	0X4,	0x60000400,	get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Bxty"),	16);
	mid = add_struc_member(id,"_Mysize",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Myres",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("ZLua");
	mid = add_struc_member(id,"FilePath",	0,	0x60000400,	get_struc_id("std::basic_string<char,std::char_traits<char>,std::allocator<char> >"),	28);
	mid = add_struc_member(id,"L",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"executed",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"locked",	0X21,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_String_val<char,std::allocator<char> >");
	
	id = get_struc_id("std::allocator<char>");
	
	id = get_struc_id("std::_Allocator_base<char>");
	
	id = get_struc_id("Sonicteam::System::Peripheral::XINPUT_GAMEPAD_BUTTONS_REMAP_TABLE_STRUCT");
	mid = add_struc_member(id,"From",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"To",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$BD17ED5EF6FA8CE7398C97BF41535960");
	mid = add_struc_member(id,"HighPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LowPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_LARGE_INTEGER::<unnamed_tag>");
	mid = add_struc_member(id,"HighPart",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LowPart",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_LARGE_INTEGER");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$BD17ED5EF6FA8CE7398C97BF41535960"),	8);
	mid = add_struc_member(id,"u",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER::<unnamed_tag>"),	8);
	mid = add_struc_member(id,"QuadPart",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("Sonicteam::SoX::PerformanceFrequency");
	mid = add_struc_member(id,"PerformanceFrequencyOutput",	0,	0x60000400,	get_struc_id("_LARGE_INTEGER"),	8);
	set_struc_align(id,3);
	
	id = get_struc_id("Sonicteam::Player::State::OtherCommonContext::StateTableBase");
	mid = add_struc_member(id,"Flag1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Flag2",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Sonicteam::MyPhysicsSystemFactory");
	mid = add_struc_member(id,"__vftable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Flag",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0>");
	
	id = get_struc_id("std::less<int>");
	
	id = get_struc_id("std::binary_function<int,int,bool>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,char const *,std::less<int>,std::allocator<std::pair<int const ,char const *> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<int const ,char const *> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,char const *> >");
	
	id = get_struc_id("TagBattleMain::PLAYERS_DATA");
	mid = add_struc_member(id,"Rotation",	0,	0x60000400,	get_struc_id("__vector4"),	16);
	mid = add_struc_member(id,"Position",	0X10,	0x60000400,	get_struc_id("__vector4"),	16);
	mid = add_struc_member(id,"SelectionIndex",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LastSelectionIndex",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CurrentController",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"input_data",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"input_container",	0X30,	0x20000400,	-1,	8);
	mid = add_struc_member(id,"hold_time",	0X38,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"hold_time_Y",	0X3C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"selected",	0X40,	0x20000400,	-1,	4);
	set_struc_align(id,4);
	
	id = get_struc_id("luaL_reg");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"func",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("boost::any");
	mid = add_struc_member(id,"content",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("DebugLogRestore::tust");
	mid = add_struc_member(id,"s1",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"a2",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("ExFileSystem");
	mid = add_struc_member(id,"ArcsFiles",	0,	0x60000400,	get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >"),	16);
	mid = add_struc_member(id,"ArcsFiles_pkg",	0X10,	0x60000400,	get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >");
	
	id = get_struc_id("std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	
	id = get_struc_id("std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	
	id = get_struc_id("D3D::DecodeTable");
	mid = add_struc_member(id,"positionType",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"blendIndexType",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"blendWeightType",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fvf",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DVERTEXELEMENT9");
	mid = add_struc_member(id,"Stream",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Offset",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Type",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Method",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Usage",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"UsageIndex",	0XA,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DPOINT");
	mid = add_struc_member(id,"x",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::_CounterRecord");
	mid = add_struc_member(id,"Mask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PixCounter",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"D3DCounter",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$962BCC0D412F05716FE036E439E27E12");
	mid = add_struc_member(id,"_bf_0",	0,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("D3D::PatchSwizzleMask");
	mid = add_struc_member(id,"word",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"__s1",	0,	0x60000400,	get_struc_id("$962BCC0D412F05716FE036E439E27E12"),	2);
	set_struc_align(id,1);
	
	id = get_struc_id("D3D::StatusRegister");
	mid = add_struc_member(id,"Mask",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Description",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::HangRegister");
	mid = add_struc_member(id,"Register",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Description",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::HangGroup");
	mid = add_struc_member(id,"ControlRegister",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReadRegister",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ControlValue",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"IndexShift",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Count",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Description",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$DE3078EF908BB06695CE963821AC4563");
	mid = add_struc_member(id,"_bf_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_bf_2",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_padding_3",	0X3,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("GPU_COLORINFO");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$DE3078EF908BB06695CE963821AC4563"),	4);
	mid = add_struc_member(id,"dword",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DX::ct_data_s::<unnamed_tag>");
	mid = add_struc_member(id,"freq",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"code",	0,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("D3DX::ct_data_s");
	mid = add_struc_member(id,"fc",	0,	0x60000400,	get_struc_id("D3DX::ct_data_s::<unnamed_tag>"),	2);
	mid = add_struc_member(id,"dl",	0X2,	0x60000400,	get_struc_id("D3DX::ct_data_s::<unnamed_tag>"),	2);
	set_struc_align(id,1);
	
	id = get_struc_id("D3DX::static_tree_desc_s");
	mid = add_struc_member(id,"static_tree",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"extra_bits",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"extra_base",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"elems",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"max_length",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	mid = add_struc_member(id,"Exop",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Bits",	0X1,	0x000400,	-1,	1);
	
	id = get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>");
	mid = add_struc_member(id,"what",	0,	0x60000400,	get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>::<unnamed_tag>"),	2);
	mid = add_struc_member(id,"pad",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DX::inflate_huft_s");
	mid = add_struc_member(id,"word",	0,	0x60000400,	get_struc_id("D3DX::inflate_huft_s::<unnamed_tag>"),	4);
	mid = add_struc_member(id,"base",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DX::config_s");
	mid = add_struc_member(id,"good_length",	0,	0x10000400,	-1,	2);
	return id;
}

static Structures_2(id) {
        auto mid;

	mid = add_struc_member(id,"max_lazy",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"nice_length",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"max_chain",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"func",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DXFORMAT_INFO");
	mid = add_struc_member(id,"Format",	0,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"Type",	0X4,	0x28800400,	get_enum("_D3DXFORMAT_TYPE"),	4);
	mid = add_struc_member(id,"BitsPerPixel",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BitsPerChannel",	0XC,	0x20000400,	-1,	20);
	mid = add_struc_member(id,"Recommended",	0X20,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXTex::DDS_PIXELFORMAT");
	mid = add_struc_member(id,"dwSize",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwFourCC",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRGBBitCount",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwRBitMask",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwGBitMask",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwBBitMask",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwABitMask",	0X1C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXTex::DDS_FORMAT_DDPF");
	mid = add_struc_member(id,"Format",	0,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"ddpf",	0X4,	0x60000400,	get_struc_id("D3DXTex::DDS_PIXELFORMAT"),	32);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXCOLOR");
	mid = add_struc_member(id,"r",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"g",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"b",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"a",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::D3DX_MATCHENTRY");
	mid = add_struc_member(id,"uTableId",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Opcode",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cArgs",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Arg",	0XC,	0x20000400,	-1,	12);
	mid = add_struc_member(id,"uAlias",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uSwap",	0X1C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::_D3DXINTRINSIC_ARGUMENT");
	mid = add_struc_member(id,"pName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Usage",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TemplateId",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pTemplate",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ComponentTypeId",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pComponentType",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Rows",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Cols",	0X1C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::_D3DXINTRINSIC");
	mid = add_struc_member(id,"Op",	0,	0x28800400,	get_enum("D3DXShader::_D3DXINTRINSIC_OP"),	4);
	mid = add_struc_member(id,"Argument",	0X4,	0x60000400,	get_struc_id("D3DXShader::_D3DXINTRINSIC_ARGUMENT"),	160);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::CParse::GetComponentType::__l2::INFO");
	mid = add_struc_member(id,"Bits",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Flags",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::_SHADER_OPCODE");
	mid = add_struc_member(id,"pName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Opcode",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Args",	0X8,	0x20000400,	-1,	64);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::_SHADER_REGISTER");
	mid = add_struc_member(id,"pName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Register",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Size",	0X8,	0x10000400,	-1,	6);
	mid = add_struc_member(id,"Scalar",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RelativeIndexing",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DXTARGET_DESC");
	mid = add_struc_member(id,"Name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Version",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"API",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XG_D3DXTex::D3DXCOLOR");
	mid = add_struc_member(id,"r",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"g",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"b",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"a",	0XC,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::AS_ARRAY_STATE_TRL_ENTRY");
	mid = add_struc_member(id,"ArrayState",	0,	0x28800400,	get_enum("XGRAPHICS::_E_AS_ARRAY_STATE"),	4);
	mid = add_struc_member(id,"Count",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_R400_TXFORMAT_INFO");
	mid = add_struc_member(id,"NonFloatFmt",	0,	0x28800400,	get_enum("SurfaceFormat"),	4);
	mid = add_struc_member(id,"FloatFmt",	0X4,	0x28800400,	get_enum("SurfaceFormat"),	4);
	mid = add_struc_member(id,"Bpp",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_R400_CBFORMAT_INFO");
	mid = add_struc_member(id,"NonFloatFmt",	0,	0x28800400,	get_enum("SurfaceFormat"),	4);
	mid = add_struc_member(id,"FloatFmt",	0X4,	0x28800400,	get_enum("SurfaceFormat"),	4);
	mid = add_struc_member(id,"numChannels",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_XENOS_CBFORMAT_INFO");
	mid = add_struc_member(id,"NonFloatFmt",	0,	0x28800400,	get_enum("ColorformatX"),	4);
	mid = add_struc_member(id,"FloatFmt",	0X4,	0x28800400,	get_enum("ColorformatX"),	4);
	mid = add_struc_member(id,"GammaFmt",	0X8,	0x28800400,	get_enum("ColorformatX"),	4);
	mid = add_struc_member(id,"numChannels",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_FORMAT_DATA");
	mid = add_struc_member(id,"mask",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"num_fetches_needed",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"num_dwords_fetched",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"data_format",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"num_format_all",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"format_comp_all",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"expanded_formats_table",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::__HW_STATE_MAP_ENTRY");
	mid = add_struc_member(id,"uBlockNum",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uOffsetInDW",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uStateMask",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uStateShift",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_SSM_SETTING_INFO");
	mid = add_struc_member(id,"defaultValue",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"regKey",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_HWINFO_LCC");
	mid = add_struc_member(id,"constID",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"minConstDWStart",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"maxConstDWCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"vidmemAlign",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"vidmemSize",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::__AS_STATE_MAP_ENTRY");
	mid = add_struc_member(id,"uBlockNum",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uOffsetInDW",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::__AS_ARRAY_STATE_MAP_ENTRY");
	mid = add_struc_member(id,"uBaseIndex",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uStride",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uMaxCount",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::Compiler::PrepareTessellatorInputs::__l11::PossibleModeInfo");
	mid = add_struc_member(id,"_bf_0",	0,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("D3DXShader::Compiler::PrepareTessellatorInputs::__l24::ModeInfo");
	mid = add_struc_member(id,"_bf_0",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::named_value");
	mid = add_struc_member(id,"name",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"id",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("XGRAPHICS::konst::<unnamed_tag>");
	mid = add_struc_member(id,"u",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"named",	0,	0x60000400,	get_struc_id("XGRAPHICS::named_value"),	4);
	mid = add_struc_member(id,"numeric",	0,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::konst");
	mid = add_struc_member(id,"by_name",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"val",	0X4,	0x60000400,	get_struc_id("XGRAPHICS::konst::<unnamed_tag>"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::ArgInfo");
	mid = add_struc_member(id,"_bf_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gap5",	0X5,	0x000400,	-1,	3);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"my_name",	0XC,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("TexelDesc");
	mid = add_struc_member(id,"Type",	0,	0x28800400,	get_enum("TexelType"),	4);
	mid = add_struc_member(id,"TexelSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AccessSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AccessIndex",	0XC,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"Mask",	0X1C,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"Shift",	0X2C,	0x20000400,	-1,	16);
	set_struc_align(id,2);
	
	id = get_struc_id("XuiTex::ct_data_s::<unnamed_tag>");
	mid = add_struc_member(id,"freq",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"code",	0,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("XuiTex::ct_data_s");
	mid = add_struc_member(id,"fc",	0,	0x60000400,	get_struc_id("XuiTex::ct_data_s::<unnamed_tag>"),	2);
	mid = add_struc_member(id,"dl",	0X2,	0x60000400,	get_struc_id("XuiTex::ct_data_s::<unnamed_tag>"),	2);
	set_struc_align(id,1);
	
	id = get_struc_id("XuiTex::static_tree_desc_s");
	mid = add_struc_member(id,"static_tree",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"extra_bits",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"extra_base",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"elems",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"max_length",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>::<unnamed_tag>");
	mid = add_struc_member(id,"Exop",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Bits",	0X1,	0x000400,	-1,	1);
	
	id = get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>");
	mid = add_struc_member(id,"what",	0,	0x60000400,	get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>::<unnamed_tag>"),	2);
	mid = add_struc_member(id,"pad",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XuiTex::inflate_huft_s");
	mid = add_struc_member(id,"word",	0,	0x60000400,	get_struc_id("XuiTex::inflate_huft_s::<unnamed_tag>"),	4);
	mid = add_struc_member(id,"base",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XuiTex::config_s");
	mid = add_struc_member(id,"good_length",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"max_lazy",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"nice_length",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"max_chain",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"func",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_XPointINT16");
	mid = add_struc_member(id,"x",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"y",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_XLink");
	mid = add_struc_member(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_XLinkedList");
	mid = add_struc_member(id,"head",	0,	0x60000400,	get_struc_id("_XLink"),	8);
	mid = add_struc_member(id,"tail",	0X8,	0x60000400,	get_struc_id("_XLink"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("$387DCFD6EBE3575BD4ECFC73A7DC2704");
	mid = add_struc_member(id,"left",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"right",	0X1,	0x000400,	-1,	1);
	
	id = get_struc_id("std::list<wchar_t const *,std::allocator<wchar_t const *> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_List_val<wchar_t const *,std::allocator<wchar_t const *> >");
	
	id = get_struc_id("std::_List_ptr<wchar_t const *,std::allocator<wchar_t const *> >");
	
	id = get_struc_id("std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >");
	
	id = get_struc_id("std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_List_nod<wchar_t const *,std::allocator<wchar_t const *> >::_Node *>");
	
	id = get_struc_id("std::allocator<wchar_t const *>");
	
	id = get_struc_id("std::_Allocator_base<wchar_t const *>");
	
	id = get_struc_id("std::vector<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL,std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL> >");
	
	id = get_struc_id("std::allocator<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>");
	
	id = get_struc_id("std::_Allocator_base<`ATG::D3DDevice::CreateVertexDeclaration'::`2'::VTX_DECL>");
	
	id = get_struc_id("std::_Init_locks");
	
	id = get_struc_id("std::_Mutex");
	mid = add_struc_member(id,"_Mtx",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::basic_streambuf<char,std::char_traits<char> >");
	mid = add_struc_member(id,"__vftable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylock",	0X4,	0x60000400,	get_struc_id("std::_Mutex"),	4);
	mid = add_struc_member(id,"_Gfirst",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Pfirst",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_IGfirst",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_IPfirst",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Gnext",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Pnext",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_IGnext",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_IPnext",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Gcount",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Pcount",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_IGcount",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_IPcount",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Plocale",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::basic_filebuf<char,std::char_traits<char> >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::basic_streambuf<char,std::char_traits<char> >"),	60);
	mid = add_struc_member(id,"_Pcvt",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mychar",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_Wrotesome",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_State",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Closef",	0X48,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_Myfile",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Init_cerr");
	
	id = get_struc_id("std::_Init_cout");
	
	id = get_struc_id("_Init_atexit");
	
	id = get_struc_id("std::locale");
	mid = add_struc_member(id,"_Ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::exception");
	mid = add_struc_member(id,"__vftable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_m_what",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_m_doFree",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::bad_alloc");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::exception"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("HeapManager");
	mid = add_struc_member(id,"pOpNew",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pOpDelete",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"head",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tail",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"blockLeft",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("EHExceptionRecord::EHParameters");
	mid = add_struc_member(id,"magicNumber",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pExceptionObject",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pThrowInfo",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("EHExceptionRecord");
	mid = add_struc_member(id,"ExceptionCode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ExceptionFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ExceptionRecord",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"NumberParameters",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"params",	0X14,	0x60000400,	get_struc_id("EHExceptionRecord::EHParameters"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("_dbl");
	mid = add_struc_member(id,"lng",	0,	0x20000400,	-1,	8);
	mid = add_struc_member(id,"dbl",	0,	0x90000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("constant");
	mid = add_struc_member(id,"PI_OVER_TWO",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"PI_INV",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"YMAX",	0X10,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"zero",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"one",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"minus_one",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"one_half",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_C1",	0X28,	0x60000400,	get_struc_id("_dbl"),	8);
	mid = add_struc_member(id,"_C2",	0X30,	0x60000400,	get_struc_id("_dbl"),	8);
	mid = add_struc_member(id,"SinCosCoeffr1",	0X38,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr2",	0X40,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr3",	0X48,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr4",	0X50,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr5",	0X58,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr6",	0X60,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr7",	0X68,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"SinCosCoeffr8",	0X70,	0x90000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("$0150E98714E487A73922B8E8C3EF0A8E");
	mid = add_struc_member(id,"opcode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("FpFormatDescriptor");
	mid = add_struc_member(id,"max_exp",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"min_exp",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"precision",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"exp_width",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"format_width",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bias",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_SYSTEMTIME");
	mid = add_struc_member(id,"wYear",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMonth",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDayOfWeek",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wDay",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wHour",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMinute",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wSecond",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wMilliseconds",	0XE,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_TIME_ZONE_INFORMATION");
	mid = add_struc_member(id,"Bias",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StandardName",	0X4,	0x10000400,	-1,	64);
	mid = add_struc_member(id,"StandardDate",	0X44,	0x60000400,	get_struc_id("_SYSTEMTIME"),	16);
	mid = add_struc_member(id,"StandardBias",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DaylightName",	0X58,	0x10000400,	-1,	64);
	mid = add_struc_member(id,"DaylightDate",	0X98,	0x60000400,	get_struc_id("_SYSTEMTIME"),	16);
	mid = add_struc_member(id,"DaylightBias",	0XA8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("transitiondate");
	mid = add_struc_member(id,"yr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"yd",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ms",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_LIST_ENTRY");
	mid = add_struc_member(id,"Flink",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Blink",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_XTHREAD_NOTIFICATION");
	mid = add_struc_member(id,"ListEntry",	0,	0x60000400,	get_struc_id("_LIST_ENTRY"),	8);
	mid = add_struc_member(id,"pfnNotifyRoutine",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$2EF6E85F416F493748553FF8C8F7A390");
	mid = add_struc_member(id,"lock",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"kind",	0X4,	0x28800400,	get_enum("$D283E5A92EBEB600100C8EBC9C67A011"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("rterrmsgs");
	mid = add_struc_member(id,"rterrno",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rterrtxt",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_EXCEPTION_RECORD");
	mid = add_struc_member(id,"ExceptionCode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ExceptionFlags",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ExceptionRecord",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ExceptionAddress",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"NumberParameters",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ExceptionInformation",	0X14,	0x20000400,	-1,	60);
	set_struc_align(id,2);
	
	id = get_struc_id("_CONTEXT");
	mid = add_struc_member(id,"ContextFlags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Msr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Iar",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Lr",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Ctr",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr0",	0X18,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr1",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr2",	0X28,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr3",	0X30,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr4",	0X38,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr5",	0X40,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr6",	0X48,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr7",	0X50,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr8",	0X58,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr9",	0X60,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr10",	0X68,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr11",	0X70,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr12",	0X78,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr13",	0X80,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr14",	0X88,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr15",	0X90,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr16",	0X98,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr17",	0XA0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr18",	0XA8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr19",	0XB0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr20",	0XB8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr21",	0XC0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr22",	0XC8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr23",	0XD0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr24",	0XD8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr25",	0XE0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr26",	0XE8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr27",	0XF0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr28",	0XF8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr29",	0X100,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr30",	0X108,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"Gpr31",	0X110,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"_Cr",	0X118,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Xer",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Fpscr",	0X120,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr0",	0X128,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr1",	0X130,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr2",	0X138,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr3",	0X140,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr4",	0X148,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr5",	0X150,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr6",	0X158,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr7",	0X160,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr8",	0X168,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr9",	0X170,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr10",	0X178,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr11",	0X180,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr12",	0X188,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr13",	0X190,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr14",	0X198,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr15",	0X1A0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr16",	0X1A8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr17",	0X1B0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr18",	0X1B8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr19",	0X1C0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr20",	0X1C8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr21",	0X1D0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr22",	0X1D8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr23",	0X1E0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr24",	0X1E8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr25",	0X1F0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr26",	0X1F8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr27",	0X200,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr28",	0X208,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr29",	0X210,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr30",	0X218,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"Fpr31",	0X220,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"UserModeControl",	0X228,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Fill",	0X22C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_Vscr",	0X230,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr0",	0X240,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr1",	0X250,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr2",	0X260,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr3",	0X270,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr4",	0X280,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr5",	0X290,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr6",	0X2A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr7",	0X2B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr8",	0X2C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr9",	0X2D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr10",	0X2E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr11",	0X2F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr12",	0X300,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr13",	0X310,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr14",	0X320,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr15",	0X330,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr16",	0X340,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr17",	0X350,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr18",	0X360,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr19",	0X370,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr20",	0X380,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr21",	0X390,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr22",	0X3A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr23",	0X3B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr24",	0X3C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr25",	0X3D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr26",	0X3E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr27",	0X3F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr28",	0X400,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr29",	0X410,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr30",	0X420,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr31",	0X430,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr32",	0X440,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr33",	0X450,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr34",	0X460,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr35",	0X470,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr36",	0X480,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr37",	0X490,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr38",	0X4A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr39",	0X4B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr40",	0X4C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr41",	0X4D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr42",	0X4E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr43",	0X4F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr44",	0X500,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr45",	0X510,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr46",	0X520,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr47",	0X530,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr48",	0X540,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr49",	0X550,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr50",	0X560,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr51",	0X570,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr52",	0X580,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr53",	0X590,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr54",	0X5A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr55",	0X5B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr56",	0X5C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr57",	0X5D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr58",	0X5E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr59",	0X5F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr60",	0X600,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr61",	0X610,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr62",	0X620,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr63",	0X630,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr64",	0X640,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr65",	0X650,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr66",	0X660,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr67",	0X670,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr68",	0X680,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr69",	0X690,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr70",	0X6A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr71",	0X6B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr72",	0X6C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr73",	0X6D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr74",	0X6E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr75",	0X6F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr76",	0X700,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr77",	0X710,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr78",	0X720,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr79",	0X730,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr80",	0X740,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr81",	0X750,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr82",	0X760,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr83",	0X770,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr84",	0X780,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr85",	0X790,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr86",	0X7A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr87",	0X7B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr88",	0X7C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr89",	0X7D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr90",	0X7E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr91",	0X7F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr92",	0X800,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr93",	0X810,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr94",	0X820,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr95",	0X830,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr96",	0X840,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr97",	0X850,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr98",	0X860,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr99",	0X870,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr100",	0X880,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr101",	0X890,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr102",	0X8A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr103",	0X8B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr104",	0X8C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr105",	0X8D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr106",	0X8E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr107",	0X8F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr108",	0X900,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr109",	0X910,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr110",	0X920,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr111",	0X930,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr112",	0X940,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr113",	0X950,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr114",	0X960,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr115",	0X970,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr116",	0X980,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr117",	0X990,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr118",	0X9A0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr119",	0X9B0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr120",	0X9C0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr121",	0X9D0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr122",	0X9E0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr123",	0X9F0,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr124",	0XA00,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr125",	0XA10,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr126",	0XA20,	0x80000400,	-1,	16);
	mid = add_struc_member(id,"Vr127",	0XA30,	0x80000400,	-1,	16);
	set_struc_align(id,3);
	
	id = get_struc_id("_EXCEPTION_POINTERS");
	mid = add_struc_member(id,"ExceptionRecord",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ContextRecord",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("errentry");
	mid = add_struc_member(id,"oscode",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"errnocode",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::D3DX_SEMANTIC");
	mid = add_struc_member(id,"SemanticName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ValidLevel",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"gap6",	0X6,	0x000400,	-1,	2);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DepricateName",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"uType",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uMinIndex",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uMaxIndex",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uIndexOffset",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uMaxComponent",	0X20,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::SubstituteGlyphList");
	mid = add_struc_member(id,"pGlyphList_",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"glyphListSize_",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DRING_BUFFER_PARAMETERS");
	mid = add_struc_member(id,"Flags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PrimarySize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pPrimary",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SecondarySize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pSecondary",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SegmentCount",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DRECT");
	mid = add_struc_member(id,"x1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y1",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"x2",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"y2",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DVIDEO_SCALER_PARAMETERS");
	mid = add_struc_member(id,"ScalerSourceRect",	0,	0x60000400,	get_struc_id("_D3DRECT"),	16);
	mid = add_struc_member(id,"ScaledOutputWidth",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ScaledOutputHeight",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FilterProfile",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DPRESENT_PARAMETERS_");
	mid = add_struc_member(id,"BackBufferWidth",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BackBufferHeight",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"BackBufferFormat",	0X8,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"BackBufferCount",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MultiSampleType",	0X10,	0x28800400,	get_enum("_D3DMULTISAMPLE_TYPE"),	4);
	mid = add_struc_member(id,"MultiSampleQuality",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SwapEffect",	0X18,	0x28800400,	get_enum("_D3DSWAPEFFECT"),	4);
	mid = add_struc_member(id,"hDeviceWindow",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Windowed",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EnableAutoDepthStencil",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AutoDepthStencilFormat",	0X28,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"Flags",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FullScreen_RefreshRateInHz",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PresentationInterval",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DisableAutoBackBuffer",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DisableAutoFrontBuffer",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FrontBufferFormat",	0X40,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	mid = add_struc_member(id,"FrontBufferColorSpace",	0X44,	0x28800400,	get_enum("_D3DCOLORSPACE"),	4);
	mid = add_struc_member(id,"RingBufferParameters",	0X48,	0x60000400,	get_struc_id("_D3DRING_BUFFER_PARAMETERS"),	24);
	mid = add_struc_member(id,"VideoScalerParameters",	0X60,	0x60000400,	get_struc_id("_D3DVIDEO_SCALER_PARAMETERS"),	28);
	set_struc_align(id,2);
	
	id = get_struc_id("GUID");
	mid = add_struc_member(id,"Data1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Data2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data3",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data4",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("$0815C1C1A85AC50DDFE07E82C29940CF");
	mid = add_struc_member(id,"_bf_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pConstraints",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$FF8E3624358BAB6D773B76DDA5D9BAB4");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	4);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$274417349B89E7D50B02F7FF5244FC2F");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$4F3878224017A26FA63C9490D3998581");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	8);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$665826B505A046B569F58BC9139171BA");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$0815C1C1A85AC50DDFE07E82C29940CF"),	12);
	mid = add_struc_member(id,"__s1",	0,	0x60000400,	get_struc_id("$FF8E3624358BAB6D773B76DDA5D9BAB4"),	12);
	mid = add_struc_member(id,"__s2",	0,	0x60000400,	get_struc_id("$274417349B89E7D50B02F7FF5244FC2F"),	12);
	mid = add_struc_member(id,"__s3",	0,	0x60000400,	get_struc_id("$4F3878224017A26FA63C9490D3998581"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::DoubleLinkListEntry<D3DXShader::Instruction>");
	mid = add_struc_member(id,"m_ppPrev",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pNext",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::Instruction");
	mid = add_struc_member(id,"m_pDependencies",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pDependents",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"___u2",	0X8,	0x60000400,	get_struc_id("$665826B505A046B569F58BC9139171BA"),	12);
	mid = add_struc_member(id,"m_pBlock",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pWorkList",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_ListEntry",	0X1C,	0x60000400,	get_struc_id("D3DXShader::DoubleLinkListEntry<D3DXShader::Instruction>"),	8);
	mid = add_struc_member(id,"m_rgOperands",	0X24,	0x25500400,	0XFFFFFFFF,	0,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_Dconst");
	mid = add_struc_member(id,"_Word",	0,	0x10000400,	-1,	16);
	mid = add_struc_member(id,"_Float",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_Double",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"_Long_double",	0,	0x90000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("_XOVERLAPPED");
	mid = add_struc_member(id,"InternalLow",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"InternalHigh",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"InternalContext",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hEvent",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pCompletionRoutine",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwCompletionContext",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwExtendedError",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::FIELD_ENTRY");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"value",	0X4,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair,	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::map<int,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<DebugLogV2::LEOS_Store,std::allocator<DebugLogV2::LEOS_Store> > > > > > > > > > > > >");
	
	id = get_struc_id("ATG::PackedResource");
	mid = add_struc_member(id,"m_pSysMemData",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dwSysMemDataSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pVidMemData",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dwVidMemDataSize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pResourceTags",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dwNumResourceTags",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("ATG::Font");
	mid = add_struc_member(id,"m_xprResource",	0,	0x60000400,	get_struc_id("ATG::PackedResource"),	24);
	mid = add_struc_member(id,"m_fFontHeight",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fFontTopPadding",	0X1C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fFontBottomPadding",	0X20,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fFontYAdvance",	0X24,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fXScaleFactor",	0X28,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fYScaleFactor",	0X2C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fSlantFactor",	0X30,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_rcWindow",	0X34,	0x60000400,	get_struc_id("_D3DRECT"),	16);
	mid = add_struc_member(id,"m_fCursorX",	0X44,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_fCursorY",	0X48,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"m_cMaxGlyph",	0X4C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"m_TranslatorTable",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dwNumGlyphs",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_Glyphs",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_bSaveState",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_dwSavedState",	0X60,	0x20000400,	-1,	60);
	mid = add_struc_member(id,"m_dwNestedBeginCount",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pFontTexture",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("RValue");
	mid = add_struc_member(id,"m_szName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_Value",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("$85E3DB0AE782B0314B343BB09609F631");
	mid = add_struc_member(id,"dwButtonPressed",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rgwPasscode",	0,	0x10000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("_MESSAGEBOX_RESULT");
	mid = add_struc_member(id,"___u0",	0,	0x60000400,	get_struc_id("$85E3DB0AE782B0314B343BB09609F631"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("std::locale::id");
	mid = add_struc_member(id,"_Id",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >");
	return id;
}

static Structures_3(id) {
        auto mid;

	
	id = get_struc_id("std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,TagBattleMain::PLAYERS_DATA *,std::less<int>,std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,TagBattleMain::PLAYERS_DATA *> >");
	
	id = get_struc_id("ATG::StringID");
	mid = add_struc_member(id,"m_strString",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::CONFIG_FIELD_ENTRY");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mode",	0X4,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::EnumStringTableEntry");
	mid = add_struc_member(id,"Value",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"strName",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::SamplerStateInit");
	mid = add_struc_member(id,"GetSamplerStateCall",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetSamplerStateCall",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"InitialState",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("R400Tables::ILRegTypeMap");
	mid = add_struc_member(id,"id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ir_type",	0X4,	0x28800400,	get_enum("R400Tables::RegType"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DDISPLAYMODE");
	mid = add_struc_member(id,"Width",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RefreshRate",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Format",	0XC,	0x28800400,	get_enum("_D3DFORMAT"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("ATG::EnumStringMap");
	mid = add_struc_member(id,"Value",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"szName",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::CONFIG_REGISTER_FIELD");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"isValidInPixelShader",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isValidInVertexShader",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"type",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"max",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::TFETCH_FIELD");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"type",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"values",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::FETCH_FIELD");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"type",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"allowedInMiniFetch",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"allowedInUnpatched",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"values",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"low",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::vector<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<Multiplayer4P::uni,std::allocator<Multiplayer4P::uni> >");
	
	id = get_struc_id("std::allocator<Multiplayer4P::uni>");
	
	id = get_struc_id("std::_Allocator_base<Multiplayer4P::uni>");
	
	id = get_struc_id("$799B73217A750012B2D231F9F49E8B35");
	mid = add_struc_member(id,"_bf_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_bf_2",	0X2,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("GPU_GROUPVECTCONTROL");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$799B73217A750012B2D231F9F49E8B35"),	4);
	mid = add_struc_member(id,"dword",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::MajorMode1InputRegs");
	mid = add_struc_member(id,"GroupVect0Control",	0,	0x60000400,	get_struc_id("GPU_GROUPVECTCONTROL"),	4);
	mid = add_struc_member(id,"GroupVect1Control",	0X4,	0x60000400,	get_struc_id("GPU_GROUPVECTCONTROL"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::SSM_DEBUGENTRY");
	mid = add_struc_member(id,"eLevel",	0,	0x28800400,	get_enum("XGRAPHICS::_E_SSM_DEBUGLEVEL"),	4);
	mid = add_struc_member(id,"String",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dwEnable",	0X8,	0x28800400,	get_enum("XGRAPHICS::E_SSM_DEBUG_DEST"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::inst_ctor_st");
	mid = add_struc_member(id,"ctor",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"which",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_XMatrixFIX16");
	mid = add_struc_member(id,"m11",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m12",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m21",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m22",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dx",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dy",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"complexity",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_EX_TITLE_TERMINATE_REGISTRATION");
	mid = add_struc_member(id,"NotificationRoutine",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Priority",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ListEntry",	0X8,	0x60000400,	get_struc_id("_LIST_ENTRY"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("Multiplayer4P::CSST");
	mid = add_struc_member(id,"rot",	0,	0x60000400,	get_struc_id("__vector4"),	16);
	mid = add_struc_member(id,"pos",	0X10,	0x60000400,	get_struc_id("__vector4"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("Multiplayer4P::MPL");
	mid = add_struc_member(id,"act_chr",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PID",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"trs",	0X10,	0x60000400,	get_struc_id("Multiplayer4P::CSST"),	32);
	mid = add_struc_member(id,"PCase",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"P2U1",	0X34,	0x20000400,	-1,	8);
	mid = add_struc_member(id,"P2PListener",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"P2Input",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"vd",	0X44,	0x20000400,	-1,	4);
	set_struc_align(id,4);
	
	id = get_struc_id("D3DXShader::ExportSemantic");
	mid = add_struc_member(id,"pszSemantic",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::InputSemantic");
	mid = add_struc_member(id,"pszSemantic",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bf_8",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_XINPUT_GAMEPAD");
	mid = add_struc_member(id,"wButtons",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"bLeftTrigger",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"bRightTrigger",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sThumbLX",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sThumbLY",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sThumbRX",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sThumbRY",	0XA,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_XINPUT_VIBRATION");
	mid = add_struc_member(id,"wLeftMotorSpeed",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wRightMotorSpeed",	0X2,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("_XINPUT_CAPABILITIES");
	mid = add_struc_member(id,"Type",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"SubType",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Flags",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Gamepad",	0X4,	0x60000400,	get_struc_id("_XINPUT_GAMEPAD"),	12);
	mid = add_struc_member(id,"Vibration",	0X10,	0x60000400,	get_struc_id("_XINPUT_VIBRATION"),	4);
	set_struc_align(id,1);
	
	id = get_struc_id("ATG::GAMEPAD");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("_XINPUT_GAMEPAD"),	12);
	mid = add_struc_member(id,"fX1",	0XC,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"fY1",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"fX2",	0X14,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"fY2",	0X18,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"wLastButtons",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"bLastLeftTrigger",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bLastRightTrigger",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wPressedButtons",	0X28,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"bPressedLeftTrigger",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bPressedRightTrigger",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"caps",	0X34,	0x60000400,	get_struc_id("_XINPUT_CAPABILITIES"),	20);
	mid = add_struc_member(id,"bConnected",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bInserted",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bRemoved",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"dwUserIndex",	0X54,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::hos_mode_split_item");
	mid = add_struc_member(id,"std_split_index",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"quad_split_index",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bary_split_index",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"prim_split_index",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("R400Tables::R400_INST");
	mid = add_struc_member(id,"flags",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"equiv",	0X4,	0x28800400,	get_enum("R400Tables::Op"),	4);
	mid = add_struc_member(id,"ir_opcode",	0X8,	0x28800400,	get_enum("R400Tables::Op"),	4);
	mid = add_struc_member(id,"r400_opcode",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X10,	0x000400,	-1,	30);
	mid = add_struc_member(id,"ctor_table_idx",	0X30,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::__AS_STATE_MAP_INFO");
	mid = add_struc_member(id,"uNumStates",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uNumArrayStates",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uNumStateBlks",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pStateMap",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pArrayStateMap",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pBlockSize",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0>");
	
	id = get_struc_id("std::less<unsigned __int64>");
	
	id = get_struc_id("std::binary_function<unsigned __int64,unsigned __int64,bool>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<unsigned __int64,PPL_DATA,std::less<unsigned __int64>,std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<unsigned __int64 const ,PPL_DATA> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<unsigned __int64 const ,PPL_DATA> >");
	
	id = get_struc_id("XGRAPHICS::RegTypeProps");
	mid = add_struc_member(id,"print_name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"defines_a_gpr",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"def_is_export",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"const_type",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"index_mode",	0X7,	0x000400,	-1,	1);
	mid = add_struc_member(id,"constructor",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::_R400VSDECLTYPE");
	mid = add_struc_member(id,"Format",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Dimension",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Signed",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Normalize",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("DFastActions");
	mid = add_struc_member(id,"GlobalName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Install",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_LDBL12");
	mid = add_struc_member(id,"ld12",	0,	0x000400,	-1,	12);
	
	id = get_struc_id("_GUID");
	mid = add_struc_member(id,"Data1",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Data2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data3",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Data4",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DADAPTER_IDENTIFIER9");
	mid = add_struc_member(id,"Driver",	0,	0x000400,	-1,	512);
	mid = add_struc_member(id,"Description",	0X200,	0x000400,	-1,	512);
	mid = add_struc_member(id,"DeviceName",	0X400,	0x000400,	-1,	32);
	mid = add_struc_member(id,"DriverVersion",	0X420,	0x60000400,	get_struc_id("_LARGE_INTEGER"),	8);
	mid = add_struc_member(id,"VendorId",	0X428,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DeviceId",	0X42C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SubSysId",	0X430,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Revision",	0X434,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DeviceIdentifier",	0X438,	0x60000400,	get_struc_id("_GUID"),	16);
	mid = add_struc_member(id,"WHQLLevel",	0X448,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("Multiplayer4P::PLRS");
	mid = add_struc_member(id,"cuse",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PListener",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VarGlobal",	0X8,	0x20000400,	-1,	12);
	mid = add_struc_member(id,"PMListener",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"act_chr",	0X18,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::RenderStateInit");
	mid = add_struc_member(id,"GetRenderStateCall",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"SetRenderStateCall",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"InitialState",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::ObjectPool");
	mid = add_struc_member(id,"blockPool_",	0,	0x25500400,	0XFFFFFFFF,	400,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"blockPoolIndex_",	0X190,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"glyphPool_",	0X194,	0x25500400,	0XFFFFFFFF,	400,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"glyphPoolIndex_",	0X324,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiSimpleArray<XUITimeline *,Xui::CXuiSimpleArrayEqualHelper<XUITimeline *> >");
	mid = add_struc_member(id,"m_aT",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nSize",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nAllocSize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_iobuf");
	mid = add_struc_member(id,"_ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_cnt",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_base",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_flag",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_file",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_charbuf",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_bufsiz",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_tmpfname",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Value");
	mid = add_struc_member(id,"gc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"p",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"n",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"b",	0,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("lua_TObject");
	mid = add_struc_member(id,"tt",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"value",	0X8,	0x60000400,	get_struc_id("Value"),	8);
	set_struc_align(id,3);
	
	id = get_struc_id("XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>");
	mid = add_struc_member(id,"X",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Y",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"Z",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"W",	0X3,	0x000400,	-1,	1);
	
	id = get_struc_id("XGRAPHICS::SwizzleOrMaskInfo");
	mid = add_struc_member(id,"bits",	0,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>"),	4);
	mid = add_struc_member(id,"bitfield",	0,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo::<unnamed_tag>"),	4);
	mid = add_struc_member(id,"_u32All",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"u8",	0,	0x000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::hos_mode_index_item");
	mid = add_struc_member(id,"std_mapping",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"std_swizzle",	0X4,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	mid = add_struc_member(id,"quad_mapping",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"quad_swizzle",	0XC,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	mid = add_struc_member(id,"bary_mapping",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bary_swizzle",	0X14,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	mid = add_struc_member(id,"prim_mapping",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"prim_swizzle",	0X1C,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::HandleTable");
	mid = add_struc_member(id,"m_pTable",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_countHandles",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_size",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nFreeFirst",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nFreeLast",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DVIEWPORT9");
	mid = add_struc_member(id,"X",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Y",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Width",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Height",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MinZ",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"MaxZ",	0X14,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::Dependency");
	mid = add_struc_member(id,"_bf_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pNextDependency",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pNextDependent",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pDef",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_pUse",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *> >");
	
	id = get_struc_id("std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>");
	
	id = get_struc_id("std::_Allocator_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>");
	
	id = get_struc_id("_XCPT_ACTION");
	mid = add_struc_member(id,"XcptNum",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SigNum",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"XcptAction",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiString");
	mid = add_struc_member(id,"m_szString",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nAlloc",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nLength",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::VisualData");
	mid = add_struc_member(id,"m_strPath",	0,	0x60000400,	get_struc_id("Xui::CXuiString"),	12);
	mid = add_struc_member(id,"m_pStringTable",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::vector<int,std::allocator<int> >,std::less<int>,std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<int const ,std::vector<int,std::allocator<int> > > >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::vector<int,std::allocator<int> > > >");
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("sockaddr");
	mid = add_struc_member(id,"sa_family",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"sa_data",	0X2,	0x000400,	-1,	14);
	set_struc_align(id,1);
	
	id = get_struc_id("Socket");
	mid = add_struc_member(id,"_tcpSocket",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_udpSocket",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_clients",	0X8,	0x60000400,	get_struc_id("std::map<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> > >"),	12);
	mid = add_struc_member(id,"_udp_clients_map",	0X14,	0x60000400,	get_struc_id("std::map<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> > >"),	12);
	mid = add_struc_member(id,"_address_to",	0X20,	0x60000400,	get_struc_id("sockaddr"),	16);
	mid = add_struc_member(id,"_connection_status",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_client",	0X34,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_server",	0X35,	0x000400,	-1,	1);
	mid = add_struc_member(id,"MSG_HANDLE_SERVER_MESSAGES",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_SERVER_CLIENT_LOST_CONNECTION",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_SERVER_CLIENT_JOIN",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_CLIENT_MESSAGES",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_CLIENT_JOIN_SERVER",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_CLIENT_LOST_CONNECTION_SERVER",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_SERVER_XUI_JOIN",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_SERVER_XUI_LEFT",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_CLIENT_XUI_JOIN",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"MSG_HANDLE_CLIENT_XUI_LEFT",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0>");
	
	id = get_struc_id("SockaddrComparator");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,SocketData,SockaddrComparator,std::allocator<std::pair<sockaddr const ,SocketData> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<sockaddr const ,SocketData> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<sockaddr const ,SocketData> >");
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<sockaddr,bool,SockaddrComparator,std::allocator<std::pair<sockaddr const ,bool> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<sockaddr const ,bool> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<sockaddr const ,bool> >");
	
	id = get_struc_id("XGRAPHICS::_R400DX_TO_IL");
	mid = add_struc_member(id,"eILOpCode",	0,	0x28800400,	get_enum("XGRAPHICS::ILOpCode"),	4);
	mid = add_struc_member(id,"convertToILFunc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("LValue");
	mid = add_struc_member(id,"m_szName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_Type",	0X4,	0x28800400,	get_enum("_D3DXPARAMETER_TYPE"),	4);
	mid = add_struc_member(id,"m_bHighPrecision",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cRows",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cCols",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_cIndices",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_State",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pRValue",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$0B5F7FB2731F71913AC6525C5F302169");
	mid = add_struc_member(id,"_bf_0",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("GPU_GROUPVECTFMTCONTROL");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$0B5F7FB2731F71913AC6525C5F302169"),	4);
	mid = add_struc_member(id,"dword",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiScratchAllocator");
	mid = add_struc_member(id,"m_pbBuffer",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_dwAllocs",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_dwNextIndex",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("lconv");
	mid = add_struc_member(id,"decimal_point",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"thousands_sep",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"grouping",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"int_curr_symbol",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"currency_symbol",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mon_decimal_point",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mon_thousands_sep",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mon_grouping",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"positive_sign",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"negative_sign",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"int_frac_digits",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"frac_digits",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"p_cs_precedes",	0X2A,	0x000400,	-1,	1);
	mid = add_struc_member(id,"p_sep_by_space",	0X2B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"n_cs_precedes",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"n_sep_by_space",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"p_sign_posn",	0X2E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"n_sign_posn",	0X2F,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::EnumStringTableEntry");
	mid = add_struc_member(id,"Value",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"strName",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DVSHADERCAPS2_0");
	mid = add_struc_member(id,"Caps",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DynamicFlowControlDepth",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumTemps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StaticFlowControlDepth",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DPSHADERCAPS2_0");
	mid = add_struc_member(id,"Caps",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DynamicFlowControlDepth",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumTemps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StaticFlowControlDepth",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumInstructionSlots",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_D3DCAPS9");
	mid = add_struc_member(id,"DeviceType",	0,	0x28800400,	get_enum("_D3DDEVTYPE"),	4);
	mid = add_struc_member(id,"AdapterOrdinal",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Caps",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Caps2",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Caps3",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PresentationIntervals",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CursorCaps",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DevCaps",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PrimitiveMiscCaps",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RasterCaps",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ZCmpCaps",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"SrcBlendCaps",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DestBlendCaps",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AlphaCmpCaps",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ShadeCaps",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TextureCaps",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TextureFilterCaps",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"CubeTextureFilterCaps",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VolumeTextureFilterCaps",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TextureAddressCaps",	0X4C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VolumeTextureAddressCaps",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"LineCaps",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxTextureWidth",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxTextureHeight",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVolumeExtent",	0X60,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxTextureRepeat",	0X64,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxTextureAspectRatio",	0X68,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxAnisotropy",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexW",	0X70,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"GuardBandLeft",	0X74,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"GuardBandTop",	0X78,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"GuardBandRight",	0X7C,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"GuardBandBottom",	0X80,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"ExtentsAdjust",	0X84,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"StencilCaps",	0X88,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"FVFCaps",	0X8C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TextureOpCaps",	0X90,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxTextureBlendStages",	0X94,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxSimultaneousTextures",	0X98,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexProcessingCaps",	0X9C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxActiveLights",	0XA0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxUserClipPlanes",	0XA4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexBlendMatrices",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexBlendMatrixIndex",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxPointSize",	0XB0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"MaxPrimitiveCount",	0XB4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexIndex",	0XB8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxStreams",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxStreamStride",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VertexShaderVersion",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexShaderConst",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PixelShaderVersion",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PixelShader1xMaxValue",	0XD0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"DevCaps2",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxNpatchTessellationLevel",	0XD8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"Reserved5",	0XDC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MasterAdapterOrdinal",	0XE0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"AdapterOrdinalInGroup",	0XE4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumberOfAdaptersInGroup",	0XE8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DeclTypes",	0XEC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NumSimultaneousRTs",	0XF0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StretchRectFilterCaps",	0XF4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"VS20Caps",	0XF8,	0x60000400,	get_struc_id("_D3DVSHADERCAPS2_0"),	16);
	mid = add_struc_member(id,"PS20Caps",	0X108,	0x60000400,	get_struc_id("_D3DPSHADERCAPS2_0"),	20);
	mid = add_struc_member(id,"VertexTextureFilterCaps",	0X11C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVShaderInstructionsExecuted",	0X120,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxPShaderInstructionsExecuted",	0X124,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxVertexShader30InstructionSlots",	0X128,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"MaxPixelShader30InstructionSlots",	0X12C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::CXuiMemoryPool");
	mid = add_struc_member(id,"m_pbBuffer",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nAllocCount",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_nElemSize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m_pFreeHead",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"m_nCallCount",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::basic_ostream<char,std::char_traits<char> >");
	mid = add_struc_member(id,"gap0",	0,	0x000400,	-1,	56);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<int,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::less<int>,std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<int const ,std::map<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<int>,std::allocator<std::pair<int const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >");
	
	id = get_struc_id("XGRAPHICS::index_mapping_item");
	mid = add_struc_member(id,"physical_reg",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"channels",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::__HW_STATE_MAP_INFO");
	mid = add_struc_member(id,"uNumStates",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uNumStateBlks",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pStateMap",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pBlockSize",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("localeinfo_struct");
	mid = add_struc_member(id,"locinfo",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mbcinfo",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::hos_split_item");
	mid = add_struc_member(id,"mapping_0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"swizzle_0",	0X4,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	mid = add_struc_member(id,"mapping_1",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"swizzle_1",	0XC,	0x60000400,	get_struc_id("XGRAPHICS::SwizzleOrMaskInfo"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3DXShader::_UCODE_OPCODE");
	mid = add_struc_member(id,"pName",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_bf_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"Args",	0X8,	0x10000400,	-1,	6);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::ProgramControlFieldUI");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"showVertexShader",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"showPixelShader",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isUserSetable",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"isZPass",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field",	0X14,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("XGRAPHICS::operands_per_token");
	mid = add_struc_member(id,"a",	0,	0x000400,	-1,	4);
	
	id = get_struc_id("XGRAPHICS::IL2IR_INST");
	mid = add_struc_member(id,"IR_OP_CODE",	0,	0x28800400,	get_enum("R400Tables::Op"),	4);
	mid = add_struc_member(id,"NUM_SOURCE_REGISTERS",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NUM_DESTINATION_REGISTERS",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"NUM_ADDITIONAL",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PROCESSING",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"fpCtor",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"EXPANSION",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"OPS_PER_TOKEN",	0X1C,	0x60000400,	get_struc_id("XGRAPHICS::operands_per_token"),	4);
	mid = add_struc_member(id,"ilOp",	0X20,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("tagRECT");
	mid = add_struc_member(id,"left",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"top",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"right",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bottom",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("_STRING");
	mid = add_struc_member(id,"Length",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"MaximumLength",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"Buffer",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("$0155778B40C0F91675BCDFFA23C7C745");
	mid = add_struc_member(id,"_bf_0",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"_bf_2",	0X2,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("GPU_GROUPPRIMTYPE");
	mid = add_struc_member(id,"__s0",	0,	0x60000400,	get_struc_id("$0155778B40C0F91675BCDFFA23C7C745"),	4);
	mid = add_struc_member(id,"dword",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("D3D::MajorMode1PrimRegs");
	mid = add_struc_member(id,"GroupPrimType",	0,	0x60000400,	get_struc_id("GPU_GROUPPRIMTYPE"),	4);
	mid = add_struc_member(id,"GroupFirstDecr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"GroupDecr",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::vector<RCS,std::allocator<RCS> >");
	mid = add_struc_member(id,"_Myfirst",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mylast",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Myend",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Vector_val<RCS,std::allocator<RCS> >");
	
	id = get_struc_id("std::allocator<RCS>");
	
	id = get_struc_id("std::_Allocator_base<RCS>");
	
	id = get_struc_id("$3F5BD159CB39977520C06306145A6051");
	mid = add_struc_member(id,"RawEvent",	0,	0x20000400,	-1,	16);
	set_struc_align(id,2);
	
	id = get_struc_id("_RTL_CRITICAL_SECTION");
	mid = add_struc_member(id,"Synchronization",	0,	0x60000400,	get_struc_id("$3F5BD159CB39977520C06306145A6051"),	16);
	mid = add_struc_member(id,"LockCount",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"RecursionCount",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OwningThread",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("ioinfo");
	mid = add_struc_member(id,"osfhnd",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"osfile",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pipech",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"lockinitflag",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lock",	0XC,	0x60000400,	get_struc_id("_RTL_CRITICAL_SECTION"),	28);
	mid = add_struc_member(id,"_bf_28",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pipech2",	0X29,	0x000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("__lc_time_data");
	mid = add_struc_member(id,"wday_abbr",	0,	0x25500400,	0XFFFFFFFF,	28,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"wday",	0X1C,	0x25500400,	0XFFFFFFFF,	28,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"month_abbr",	0X38,	0x25500400,	0XFFFFFFFF,	48,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"month",	0X68,	0x25500400,	0XFFFFFFFF,	48,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ampm",	0X98,	0x25500400,	0XFFFFFFFF,	8,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ww_sdatefmt",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ww_ldatefmt",	0XA4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ww_timefmt",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ww_lcid",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ww_caltype",	0XB0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"refcount",	0XB4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("__type_info_node");
	mid = add_struc_member(id,"memPtr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("MapIDFunction");
	mid = add_struc_member(id,"id",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StateConstructor",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	mid = add_struc_member(id,"_Myhead",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"_Mysize",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> > >");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tree_ptr<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >");
	
	id = get_struc_id("std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0>");
	
	id = get_struc_id("std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >");
	
	id = get_struc_id("std::binary_function<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node>");
	
	id = get_struc_id("std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>");
	
	id = get_struc_id("std::_Allocator_base<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,char const *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >,0> >::_Node *>");
	
	id = get_struc_id("std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >");
	
	id = get_struc_id("std::_Allocator_base<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,char const *> >");
	
	id = get_struc_id("TimeSystemRestore::vector3");
	mid = add_struc_member(id,"x",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"y",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"z",	0X8,	0x80000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("TimeSystemRestore::light06");
	mid = add_struc_member(id,"u0",	0,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u1",	0X4,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"u2",	0X8,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"_v0",	0XC,	0x60000400,	get_struc_id("TimeSystemRestore::vector3"),	12);
	set_struc_align(id,2);
	
	id = get_struc_id("tagLC_ID");
	mid = add_struc_member(id,"wLanguage",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wCountry",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wCodePage",	0X4,	0x10000400,	-1,	2);
	set_struc_align(id,1);
	
	id = get_struc_id("threadlocaleinfostruct::<unnamed_tag>");
	mid = add_struc_member(id,"locale",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"wlocale",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"refcount",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"wrefcount",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("threadlocaleinfostruct");
	mid = add_struc_member(id,"refcount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lc_codepage",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lc_collate_cp",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lc_handle",	0XC,	0x20000400,	-1,	24);
	mid = add_struc_member(id,"lc_id",	0X24,	0x60000400,	get_struc_id("tagLC_ID"),	36);
	mid = add_struc_member(id,"lc_category",	0X48,	0x60000400,	get_struc_id("threadlocaleinfostruct::<unnamed_tag>"),	96);
	mid = add_struc_member(id,"lc_clike",	0XA8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mb_cur_max",	0XAC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lconv_intl_refcount",	0XB0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lconv_num_refcount",	0XB4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lconv_mon_refcount",	0XB8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lconv",	0XBC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ctype1_refcount",	0XC0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ctype1",	0XC4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pctype",	0XC8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pclmap",	0XCC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pcumap",	0XD0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lc_time_curr",	0XD4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("XUICustomPropHandler");
	mid = add_struc_member(id,"Set",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Get",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ToString",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FromString",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ToBinary",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"FromBinary",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"IsEqual",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ShowUI",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("Xui::XUIPointArrayPropHandler");
	mid = add_struc_member(id,"baseclass_0",	0,	0x60000400,	get_struc_id("XUICustomPropHandler"),	32);
	set_struc_align(id,2);
	
	id = get_struc_id("threadmbcinfostruct");
	mid = add_struc_member(id,"refcount",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mbcodepage",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ismbcodepage",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mblcid",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mbulinfo",	0X10,	0x10000400,	-1,	12);
	mid = add_struc_member(id,"mbctype",	0X1C,	0x000400,	-1,	257);
	mid = add_struc_member(id,"mbcasemap",	0X11D,	0x000400,	-1,	256);
	set_struc_align(id,2);
	
	id = get_struc_id("C_SCOPE_TABLE");
	mid = add_struc_member(id,"Begin",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"End",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000022);
	mid = add_struc_member(id,"Handler",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Target",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
	id = Structures_1(id);
	id = Structures_2(id);
	id = Structures_3(id);
        end_type_updating(UTP_STRUCT);
}

// End of file.
